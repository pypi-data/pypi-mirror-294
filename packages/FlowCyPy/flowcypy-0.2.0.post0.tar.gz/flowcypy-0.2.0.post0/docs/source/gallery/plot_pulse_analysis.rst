
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/plot_pulse_analysis.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_plot_pulse_analysis.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_plot_pulse_analysis.py:


Analyzing Flow Cytometer Pulses
===============================

This script demonstrates how to analyze pulses generated by a flow cytometer using the
`PulseAnalyzer` class from the `FlowCyPy` library.

Flow cytometer pulses represent particles passing through a laser beam. By analyzing these pulses,
we can extract important features such as peak height, width, and area, which provide insights
into the properties of the particles.

Steps:
------
1. Create a synthetic signal representing pulses.
2. Analyze the signal using the `PulseAnalyzer` class.
3. Extract and display the pulse features.
4. Visualize the signal and the detected peaks.

.. GENERATED FROM PYTHON SOURCE LINES 19-69



.. image-sg:: /gallery/images/sphx_glr_plot_pulse_analysis_001.png
   :alt: Pulse Analysis
   :srcset: /gallery/images/sphx_glr_plot_pulse_analysis_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Number of detected peaks: 2
    +--------+------------+------------+------------+--------------+
    |   Peak | Time [s]   | Height     | Width      | Area         |
    +========+============+============+============+==============+
    |      1 | 3.00×10⁰ s | 1.00×10⁰ V | 1.76×10⁰ s | 1.55×10⁰ s·V |
    +--------+------------+------------+------------+--------------+
    |      2 | 7.00×10⁰ s | 2.00×10⁰ V | 2.35×10⁰ s | 3.81×10⁰ s·V |
    +--------+------------+------------+------------+--------------+

    '\nSummary:\n--------\nThis script generates a synthetic signal containing two Gaussian pulses, analyzes the signal\nto detect peaks, and extracts important pulse features such as height, width, and area. The\nresults are displayed and visualized, helping to understand the characteristics of the pulses.\n'





|

.. code-block:: python3


    # Step 1: Import necessary libraries
    import numpy as np
    from FlowCyPy import PulseAnalyzer
    from FlowCyPy.utils import generate_gaussian_signal

    # Step 2: Create a synthetic signal with Gaussian pulses
    # ------------------------------------------------------
    # Define the time axis and generate a signal consisting of two Gaussian-shaped pulses.
    time = np.linspace(0, 10, 1000)

    # Generate two Gaussian pulses at times 3s and 7s with a standard deviation of 0.1s.
    signal = np.exp(-((time - 3) ** 2) / (2 * 0.1 ** 2)) + np.exp(-((time - 7) ** 2) / (2 * 0.1 ** 2))

    detector = generate_gaussian_signal(
        time=time,
        centers=[3, 7],
        heights=[1, 2],
        stds=[1, 1]

    )

    # Step 3: Analyze the synthetic signal using PulseAnalyzer
    # --------------------------------------------------------
    # Create a PulseAnalyzer instance with a height threshold of 0.5 to detect significant peaks.
    analyzer = PulseAnalyzer(
        detector=detector,
        height_threshold=0.5  # Minimum height for peaks to be considered significant
    )

    # Detect peaks and analyze the pulse features (height, width, area)
    analyzer.run()

    # Step 4: Display extracted features
    # -----------------------------------
    # Show the detected pulse features such as height, width, and area.
    analyzer.display_features()

    # Step 5: Visualize the signal with detected peaks
    # ------------------------------------------------
    # Plot the original signal along with the detected peaks and their widths.
    analyzer.plot()

    """
    Summary:
    --------
    This script generates a synthetic signal containing two Gaussian pulses, analyzes the signal
    to detect peaks, and extracts important pulse features such as height, width, and area. The
    results are displayed and visualized, helping to understand the characteristics of the pulses.
    """


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.155 seconds)


.. _sphx_glr_download_gallery_plot_pulse_analysis.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_pulse_analysis.py <plot_pulse_analysis.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_pulse_analysis.ipynb <plot_pulse_analysis.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
