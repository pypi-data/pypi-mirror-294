[tool.poetry]
name = "beets-alias"
version = "1.0.1"
description = "Alias Plugin for Beets"
authors = ["Christopher Larson <kergoth@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/kergoth/beets-alias"
repository = "https://github.com/kergoth/beets-alias"
documentation = "https://beets-alias.readthedocs.io"
packages = [
    { include = "beetsplug", from = "src" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    'Environment :: Plugins',
    'Topic :: Multimedia :: Sound/Audio',
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]

[tool.poetry.urls]
Changelog = "https://github.com/kergoth/beets-alias/releases"

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
beets = "^2.0.0"

[tool.poetry.dev-dependencies]
Pygments = ">=2.18.0"
coverage = { extras = ["toml"], version = ">=7.6.1" }
furo = ">=2024.8.6"
mypy = ">=1.11.2"
myst-parser = { version = ">=0.16.1" }
pre-commit = ">=2.16.0"
pre-commit-hooks = ">=4.6.0"
pydoclint = "^0.4.1"
pytest = ">=8.3.2"
ruff = ">=0.6.4"
safety = ">=3.2.7"
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
typeguard = ">=4.3.0"
xdoctest = { extras = ["colors"], version = ">=1.2.0" }

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["beetsplug.alias"]

[tool.coverage.report]
show_missing = true
fail_under = 98
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
]

[tool.ruff.lint.isort]
force-single-line = true
lines-after-imports = 2

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true
exclude = ["^noxfile\\.py$"]

[tool.ruff]
src = ["src", "tests"]

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C90", # mccabe
    "D",   # pydocstyle
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "RUF", # Ruff-specific rules
    "S",   # flake8-bandit
    "UP",  # pyupgrade
    "W",   # pycodestyle
]
# ignore checks that conflict with ruff formatter (https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules)
ignore = [
    "COM812",
    "COM819",
    "D107", # undocumented-public-init conflicts with DOC301
    "D206",
    "D300",
    "E111",
    "E114",
    "E117",
    "ISC001",
    "ISC002",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "W191",
]

[tool.ruff.lint.per-file-ignores]
"*/test_*.py" = ["S101"]
"noxfile.py" = ["S101"]
"**/conftest.py" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pydoclint]
style = 'google'
exclude = '\.git|\.nox'
arg-type-hints-in-docstring = false

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
