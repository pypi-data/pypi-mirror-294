name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
        python-version: [ "3.10" ]
        tasks: [ tests ]
        include:
          - os: ubuntu-latest
            python-version: "3.9"
            tasks: tests
          - os: ubuntu-latest
            python-version: "3.11"
            tasks: tests
          - os: ubuntu-latest
            python-version: "3.12"
            tasks: tests
          - os: ubuntu-latest
            python-version: "3.10"
            tasks: docs

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install package
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install tests requirements
      run: pip install -r tests/requirements.txt
      if: matrix.tasks == 'tests'

    - name: Test with pytest
      run: python -m pytest
      if: matrix.tasks == 'tests'

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
      if: matrix.tasks == 'tests' && matrix.os == 'ubuntu-latest'

    - name: Install docs requirements
      run: pip install -r docs/requirements.txt
      if: matrix.tasks == 'docs'

    - name: Test building documentation
      run: python -m sphinx docs/ build/html -b html -W
      if: matrix.tasks == 'docs'

    - name: Check links in documentation
      run: python -m sphinx docs/ build/html -b linkcheck -W
      if: matrix.tasks == 'docs'
