Metadata-Version: 2.1
Name: sqlmesh
Version: 0.118.8
Home-page: https://github.com/TobikoData/sqlmesh
Author: TobikoData Inc.
Author-email: engineering@tobikodata.com
License: Apache License 2.0
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: SQL
Classifier: Programming Language :: Python :: 3 :: Only
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: astor
Requires-Dist: click
Requires-Dist: croniter
Requires-Dist: duckdb !=0.10.3
Requires-Dist: dateparser
Requires-Dist: freezegun
Requires-Dist: hyperscript >=0.1.0
Requires-Dist: ipywidgets
Requires-Dist: jinja2
Requires-Dist: pandas
Requires-Dist: pydantic
Requires-Dist: requests
Requires-Dist: rich[jupyter]
Requires-Dist: ruamel.yaml
Requires-Dist: sqlglot[rs] ~=25.15.0
Requires-Dist: importlib-metadata ; python_version < "3.12"
Provides-Extra: bigquery
Requires-Dist: google-cloud-bigquery[pandas] ; extra == 'bigquery'
Requires-Dist: google-cloud-bigquery-storage ; extra == 'bigquery'
Provides-Extra: cicdtest
Requires-Dist: dbt-databricks ; extra == 'cicdtest'
Requires-Dist: dbt-redshift ; extra == 'cicdtest'
Requires-Dist: dbt-sqlserver >=1.7.0 ; extra == 'cicdtest'
Requires-Dist: dbt-trino ; extra == 'cicdtest'
Provides-Extra: databricks
Requires-Dist: databricks-sql-connector ; extra == 'databricks'
Provides-Extra: dbt
Requires-Dist: dbt-core <2 ; extra == 'dbt'
Provides-Extra: dev
Requires-Dist: apache-airflow ==2.9.1 ; extra == 'dev'
Requires-Dist: agate ==1.7.1 ; extra == 'dev'
Requires-Dist: beautifulsoup4 ; extra == 'dev'
Requires-Dist: ruff ~=0.4.0 ; extra == 'dev'
Requires-Dist: cryptography ~=42.0.4 ; extra == 'dev'
Requires-Dist: dbt-core ; extra == 'dev'
Requires-Dist: dbt-duckdb >=1.7.1 ; extra == 'dev'
Requires-Dist: dbt-snowflake ; extra == 'dev'
Requires-Dist: dbt-bigquery ; extra == 'dev'
Requires-Dist: Faker ; extra == 'dev'
Requires-Dist: google-auth ; extra == 'dev'
Requires-Dist: google-cloud-bigquery ; extra == 'dev'
Requires-Dist: google-cloud-bigquery-storage ; extra == 'dev'
Requires-Dist: mypy ~=1.10.0 ; extra == 'dev'
Requires-Dist: pre-commit ; extra == 'dev'
Requires-Dist: pandas-stubs ; extra == 'dev'
Requires-Dist: psycopg2-binary ; extra == 'dev'
Requires-Dist: pydantic <2.6.0 ; extra == 'dev'
Requires-Dist: PyGithub ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: pytest-asyncio <0.23.0 ; extra == 'dev'
Requires-Dist: pytest-mock ; extra == 'dev'
Requires-Dist: pytest-xdist ; extra == 'dev'
Requires-Dist: pyspark ~=3.5.0 ; extra == 'dev'
Requires-Dist: pytz ; extra == 'dev'
Requires-Dist: snowflake-connector-python[pandas,secure-local-storage] >=3.0.2 ; extra == 'dev'
Requires-Dist: sqlalchemy-stubs ; extra == 'dev'
Requires-Dist: tenacity ==8.1.0 ; extra == 'dev'
Requires-Dist: types-croniter ; extra == 'dev'
Requires-Dist: types-dateparser ; extra == 'dev'
Requires-Dist: types-python-dateutil ; extra == 'dev'
Requires-Dist: types-pytz ; extra == 'dev'
Requires-Dist: types-requests ==2.28.8 ; extra == 'dev'
Requires-Dist: typing-extensions ; extra == 'dev'
Requires-Dist: custom-materializations ; extra == 'dev'
Requires-Dist: pytest-retry ; (python_version >= "3.9") and extra == 'dev'
Provides-Extra: gcppostgres
Requires-Dist: cloud-sql-python-connector[pg8000] ; extra == 'gcppostgres'
Provides-Extra: github
Requires-Dist: PyGithub ; extra == 'github'
Provides-Extra: llm
Requires-Dist: langchain ; extra == 'llm'
Requires-Dist: openai ; extra == 'llm'
Provides-Extra: mssql
Requires-Dist: pymssql ; extra == 'mssql'
Provides-Extra: mwaa
Requires-Dist: boto3 ; extra == 'mwaa'
Provides-Extra: mysql
Requires-Dist: mysql-connector-python ; extra == 'mysql'
Provides-Extra: postgres
Requires-Dist: psycopg2 ; extra == 'postgres'
Provides-Extra: redshift
Requires-Dist: redshift-connector ; extra == 'redshift'
Provides-Extra: slack
Requires-Dist: slack-sdk ; extra == 'slack'
Provides-Extra: snowflake
Requires-Dist: cryptography ~=42.0.4 ; extra == 'snowflake'
Requires-Dist: snowflake-connector-python[pandas,secure-local-storage] ; extra == 'snowflake'
Requires-Dist: snowflake-snowpark-python ; (python_version < "3.12") and extra == 'snowflake'
Provides-Extra: trino
Requires-Dist: trino ; extra == 'trino'
Provides-Extra: web
Requires-Dist: fastapi ==0.110.2 ; extra == 'web'
Requires-Dist: watchfiles >=0.19.0 ; extra == 'web'
Requires-Dist: uvicorn[standard] ==0.22.0 ; extra == 'web'
Requires-Dist: sse-starlette >=0.2.2 ; extra == 'web'
Requires-Dist: pyarrow ; extra == 'web'

![SQLMesh logo](sqlmesh.png)

SQLMesh is a next-generation data transformation and modeling framework that is backwards compatible with dbt. It aims to be easy to use, correct, and efficient.

SQLMesh enables data practitioners to efficiently run and deploy data transformations written in SQL or Python.

Although SQLMesh will make your dbt projects more efficient, reliable, and maintainable, it is more than just a [dbt alternative](https://tobikodata.com/sqlmesh_for_dbt_1.html).

## Select Features
* [Semantic Understanding of SQL](https://tobikodata.com/semantic-understanding-of-sql.html)
    * Compile time error checking (for 10 different SQL dialects!)
    * Definitions using [simply SQL](https://sqlmesh.readthedocs.io/en/stable/concepts/models/sql_models/#sql-based-definition) (no need for redundant and confusing Jinja + YAML)
    * [Self documenting queries](https://tobikodata.com/metadata-everywhere.html) using native SQL Comments
* Efficiency
    * Never builds a table [more than once](https://tobikodata.com/simplicity-or-efficiency-how-dbt-makes-you-choose.html)
    * Partition-based [incremental models](https://tobikodata.com/correctly-loading-incremental-data-at-scale.html)
* Confidence
    * Plan / Apply workflow like [Terraform](https://www.terraform.io/) to understand potential impact of changes
    * Easy to use [CI/CD bot](https://sqlmesh.readthedocs.io/en/stable/integrations/github/)
    * Automatic [column level lineage](https://tobikodata.com/automatically-detecting-breaking-changes-in-sql-queries.html) and data contracts
    * [Unit tests](https://tobikodata.com/we-need-even-greater-expectations.html) and audits

For more information, check out the [website](https://sqlmesh.com) and [documentation](https://sqlmesh.readthedocs.io/en/stable/).

## Getting Started
Install SQLMesh through [pypi](https://pypi.org/project/sqlmesh/) by running:

```pip install sqlmesh```

Follow the [tutorial](https://sqlmesh.readthedocs.io/en/stable/quick_start/) to learn how to use SQLMesh.

## Join our community
We'd love to join you on your data journey. Connect with us in the following ways:

* Join the [Tobiko Slack community](https://tobikodata.com/slack) to ask questions, or just to say hi!
* File an issue on our [GitHub](https://github.com/TobikoData/sqlmesh/issues/new).
* Send us an email at [hello@tobikodata.com](mailto:hello@tobikodata.com) with your questions or feedback.

## Contribution
Contributions in the form of issues or pull requests are greatly appreciated. [Read more](https://sqlmesh.readthedocs.io/en/stable/development/) about how to develop for SQLMesh.

