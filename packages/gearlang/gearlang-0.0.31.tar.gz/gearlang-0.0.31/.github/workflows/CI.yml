# This file is autogenerated by maturin v1.5.1
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  extract-version:
    name: Extract version
    runs-on: ubuntu-latest
    outputs:
        version: ${{ steps.extract.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Extract version from Git tag
        id: get-version
        run: echo "version=$(git describe --tags --abbrev=0 | sed 's/^v//')" >> $GITHUB_ENV
        shell: bash
      - name: Set output
        id: extract
        run: echo "::set-output name=version::${{ env.version }}"
        shell: bash

  linux:
    runs-on: ${{ matrix.platform.runner }}
    needs: [extract-version]
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
          - runner: ubuntu-latest
            target: s390x
          - runner: ubuntu-latest
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - name: Update Cargo.toml version
        run: sed -i "s/^version = \".*\"/version = \"${{ needs.extract-version.outputs.version }}\"/" Cargo.toml
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    needs: [extract-version]
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - name: Update Cargo.toml version (Windows)
        shell: pwsh
        run: |
          $version = "${{ needs.extract-version.outputs.version }}"
          (Get-Content Cargo.toml) -replace '^version = ".*"', "version = `"$version`"" | Set-Content Cargo.toml
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    needs: [extract-version]
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - name: Update Cargo.toml version (macOS)
        run: sed -i '' "s/^version = \".*\"/version = \"${{ needs.extract-version.outputs.version }}\"/" Cargo.toml
        shell: bash
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    needs: [extract-version]
    steps:
      - uses: actions/checkout@v4
      - name: Update Cargo.toml version
        run: sed -i "s/^version = \".*\"/version = \"${{ needs.extract-version.outputs.version }}\"/" Cargo.toml
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
