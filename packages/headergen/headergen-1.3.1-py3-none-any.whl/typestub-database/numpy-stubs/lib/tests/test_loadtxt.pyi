from numpy.ma.testutils import assert_equal as assert_equal
from numpy.testing import HAS_REFCOUNT as HAS_REFCOUNT, IS_PYPY as IS_PYPY, assert_array_equal as assert_array_equal

def test_scientific_notation() -> None: ...
def test_comment_multiple_chars(comment) -> None: ...
def mixed_types_structured(): ...
def test_structured_dtype_and_skiprows_no_empty_lines(skiprows, mixed_types_structured) -> None: ...
def test_unpack_structured(mixed_types_structured) -> None: ...
def test_structured_dtype_with_shape() -> None: ...
def test_structured_dtype_with_multi_shape() -> None: ...
def test_nested_structured_subarray() -> None: ...
def test_structured_dtype_offsets() -> None: ...
def test_exception_negative_row_limits(param) -> None: ...
def test_exception_noninteger_row_limits(param) -> None: ...
def test_ndmin_single_row_or_col(data, shape) -> None: ...
def test_bad_ndmin(badval) -> None: ...
def test_blank_lines_spaces_delimit(ws) -> None: ...
def test_blank_lines_normal_delimiter() -> None: ...
def test_maxrows_no_blank_lines(dtype) -> None: ...
def test_exception_message_bad_values(dtype) -> None: ...
def test_converters_negative_indices(): ...
def test_converters_negative_indices_with_usecols(): ...
def test_ragged_usecols() -> None: ...
def test_empty_usecols() -> None: ...
def test_large_unicode_characters(c1, c2) -> None: ...
def test_unicode_with_converter(): ...
def test_converter_with_structured_dtype(): ...
def test_converter_with_unicode_dtype() -> None: ...
def test_read_huge_row() -> None: ...
def test_huge_float(dtype) -> None: ...
def test_string_no_length_given(given_dtype, expected_dtype) -> None: ...
def test_float_conversion() -> None: ...
def test_bool() -> None: ...
def test_integer_signs(dtype) -> None: ...
def test_implicit_cast_float_to_int_fails(dtype) -> None: ...
def test_complex_parsing(dtype, with_parens) -> None: ...
def test_read_from_generator() -> None: ...
def test_read_from_generator_multitype() -> None: ...
def test_read_from_bad_generator() -> None: ...
def test_object_cleanup_on_read_error(): ...
def test_character_not_bytes_compatible() -> None: ...
def test_invalid_converter(conv) -> None: ...
def test_converters_dict_raises_non_integer_key() -> None: ...
def test_converters_dict_raises_non_col_key(bad_col_ind) -> None: ...
def test_converters_dict_raises_val_not_callable() -> None: ...
def test_quoted_field(q) -> None: ...
def test_quote_support_default() -> None: ...
def test_quotechar_multichar_error() -> None: ...
def test_comment_multichar_error_with_quote() -> None: ...
def test_structured_dtype_with_quotes() -> None: ...
def test_quoted_field_is_not_empty() -> None: ...
def test_quoted_field_is_not_empty_nonstrict() -> None: ...
def test_consecutive_quotechar_escaped() -> None: ...
def test_warn_on_no_data(data, ndmin, usecols) -> None: ...
def test_warn_on_skipped_data(skiprows) -> None: ...
def test_byteswapping_and_unaligned(dtype, value, swap) -> None: ...
def test_unicode_whitespace_stripping(dtype) -> None: ...
def test_unicode_whitespace_stripping_complex(dtype) -> None: ...
def test_bad_complex(dtype, field) -> None: ...
def test_nul_character_error(dtype) -> None: ...
def test_no_thousands_support(dtype) -> None: ...
def test_bad_newline_in_iterator(data) -> None: ...
def test_good_newline_in_iterator(data) -> None: ...
def test_universal_newlines_quoted(newline) -> None: ...
def test_null_character() -> None: ...
def test_iterator_fails_getting_next_line(): ...

class TestCReaderUnitTests:
    def test_not_an_filelike(self) -> None: ...
    def test_filelike_read_fails(self): ...
    def test_filelike_bad_read(self): ...
    def test_not_an_iter(self) -> None: ...
    def test_bad_type(self) -> None: ...
    def test_bad_encoding(self) -> None: ...
    def test_manual_universal_newlines(self, newline) -> None: ...

def test_delimiter_comment_collision_raises() -> None: ...
def test_delimiter_quotechar_collision_raises() -> None: ...
def test_comment_quotechar_collision_raises() -> None: ...
def test_delimiter_and_multiple_comments_collision_raises() -> None: ...
def test_collision_with_default_delimiter_raises(ws) -> None: ...
def test_control_character_newline_raises(nl) -> None: ...
def test_parametric_unit_discovery(generic_data, long_datum, unitless_dtype, expected_dtype, nrows) -> None: ...
def test_str_dtype_unit_discovery_with_converter(): ...
def test_control_character_empty() -> None: ...
def test_control_characters_as_bytes() -> None: ...
