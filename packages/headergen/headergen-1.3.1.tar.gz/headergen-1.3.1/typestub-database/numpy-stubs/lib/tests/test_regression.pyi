from numpy.testing import assert_ as assert_, assert_array_almost_equal as assert_array_almost_equal, assert_array_equal as assert_array_equal, assert_equal as assert_equal, assert_raises as assert_raises

class TestRegression:
    def test_poly1d(self) -> None: ...
    def test_cov_parameters(self) -> None: ...
    def test_mem_digitize(self) -> None: ...
    def test_unique_zero_sized(self) -> None: ...
    def test_mem_vectorise(self): ...
    def test_mgrid_single_element(self) -> None: ...
    def test_refcount_vectorize(self): ...
    def test_poly1d_nan_roots(self) -> None: ...
    def test_mem_polymul(self) -> None: ...
    def test_mem_string_concat(self) -> None: ...
    def test_poly_div(self) -> None: ...
    def test_poly_eq(self) -> None: ...
    def test_polyfit_build(self) -> None: ...
    def test_polydiv_type(self) -> None: ...
    def test_histogramdd_too_many_bins(self) -> None: ...
    def test_polyint_type(self) -> None: ...
    def test_ndenumerate_crash(self) -> None: ...
    def test_asfarray_none(self) -> None: ...
    def test_large_fancy_indexing(self) -> None: ...
    def test_void_coercion(self) -> None: ...
    def test_who_with_0dim_array(self) -> None: ...
    def test_include_dirs(self) -> None: ...
    def test_polyder_return_type(self) -> None: ...
    def test_append_fields_dtype_list(self) -> None: ...
    def test_loadtxt_fields_subarrays(self) -> None: ...
    def test_nansum_with_boolean(self) -> None: ...
    def test_py3_compat(self) -> None: ...
