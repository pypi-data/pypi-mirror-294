import numpy as np
from numpy.core._rational_tests import rational as rational
from numpy.lib.stride_tricks import as_strided as as_strided, broadcast_arrays as broadcast_arrays, broadcast_shapes as broadcast_shapes, broadcast_to as broadcast_to, sliding_window_view as sliding_window_view
from numpy.testing import assert_ as assert_, assert_array_equal as assert_array_equal, assert_equal as assert_equal, assert_raises as assert_raises, assert_raises_regex as assert_raises_regex, assert_warns as assert_warns

def assert_shapes_correct(input_shapes, expected_shape) -> None: ...
def assert_incompatible_shapes_raise(input_shapes) -> None: ...
def assert_same_as_ufunc(shape0, shape1, transposed: bool = False, flipped: bool = False) -> None: ...
def test_same() -> None: ...
def test_broadcast_kwargs() -> None: ...
def test_one_off() -> None: ...
def test_same_input_shapes() -> None: ...
def test_two_compatible_by_ones_input_shapes() -> None: ...
def test_two_compatible_by_prepending_ones_input_shapes() -> None: ...
def test_incompatible_shapes_raise_valueerror() -> None: ...
def test_same_as_ufunc() -> None: ...
def test_broadcast_to_succeeds() -> None: ...
def test_broadcast_to_raises(): ...
def test_broadcast_shape(): ...
def test_broadcast_shapes_succeeds() -> None: ...
def test_broadcast_shapes_raises(): ...
def test_as_strided() -> None: ...

class TestSlidingWindowView:
    def test_1d(self) -> None: ...
    def test_2d(self) -> None: ...
    def test_2d_with_axis(self) -> None: ...
    def test_2d_repeated_axis(self) -> None: ...
    def test_2d_without_axis(self) -> None: ...
    def test_errors(self) -> None: ...
    def test_writeable(self) -> None: ...
    def test_subok(self) -> None: ...

def as_strided_writeable() -> None: ...

class VerySimpleSubClass(np.ndarray):
    def __new__(cls, *args, **kwargs): ...

class SimpleSubClass(VerySimpleSubClass):
    info: str
    def __new__(cls, *args, **kwargs): ...
    def __array_finalize__(self, obj) -> None: ...

def test_subclasses() -> None: ...
def test_writeable() -> None: ...
def test_writeable_memoryview() -> None: ...
def test_reference_types() -> None: ...
