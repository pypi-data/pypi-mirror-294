import numpy as np
from _typeshed import Incomplete
from numpy.testing import assert_ as assert_, assert_equal as assert_equal, assert_raises as assert_raises

class ArrayLike(np.lib.mixins.NDArrayOperatorsMixin):
    value: Incomplete
    def __init__(self, value) -> None: ...
    def __array_ufunc__(self, ufunc, method, *inputs, **kwargs): ...

def wrap_array_like(result): ...

class TestNDArrayOperatorsMixin:
    def test_array_like_add(self) -> None: ...
    def test_inplace(self) -> None: ...
    def test_opt_out(self): ...
    def test_subclass(self) -> None: ...
    def test_object(self) -> None: ...
    def test_unary_methods(self) -> None: ...
    def test_forward_binary_methods(self) -> None: ...
    def test_reflected_binary_methods(self) -> None: ...
    def test_matmul(self) -> None: ...
    def test_ufunc_at(self) -> None: ...
    def test_ufunc_two_outputs(self) -> None: ...
