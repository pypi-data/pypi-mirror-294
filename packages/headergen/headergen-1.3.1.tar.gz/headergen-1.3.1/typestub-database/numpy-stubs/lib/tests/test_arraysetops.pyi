from numpy.lib.arraysetops import ediff1d as ediff1d, in1d as in1d, intersect1d as intersect1d, isin as isin, setdiff1d as setdiff1d, setxor1d as setxor1d, union1d as union1d, unique as unique
from numpy.testing import assert_array_equal as assert_array_equal, assert_equal as assert_equal, assert_raises as assert_raises, assert_raises_regex as assert_raises_regex

class TestSetOps:
    def test_intersect1d(self) -> None: ...
    def test_intersect1d_array_like(self): ...
    def test_intersect1d_indices(self) -> None: ...
    def test_setxor1d(self) -> None: ...
    def test_ediff1d(self) -> None: ...
    def test_ediff1d_forbidden_type_casts(self, ary, prepend, append, expected) -> None: ...
    def test_ediff1d_scalar_handling(self, ary, prepend, append, expected) -> None: ...
    def test_isin(self): ...
    def test_in1d(self) -> None: ...
    def test_in1d_char_array(self) -> None: ...
    def test_in1d_invert(self) -> None: ...
    def test_in1d_ravel(self) -> None: ...
    def test_in1d_first_array_is_object(self) -> None: ...
    def test_in1d_second_array_is_object(self) -> None: ...
    def test_in1d_both_arrays_are_object(self) -> None: ...
    def test_in1d_both_arrays_have_structured_dtype(self) -> None: ...
    def test_in1d_with_arrays_containing_tuples(self) -> None: ...
    def test_union1d(self) -> None: ...
    def test_setdiff1d(self) -> None: ...
    def test_setdiff1d_unique(self) -> None: ...
    def test_setdiff1d_char_array(self) -> None: ...
    def test_manyways(self) -> None: ...

class TestUnique:
    def test_unique_1d(self) -> None: ...
    def test_unique_axis_errors(self) -> None: ...
    def test_unique_axis_list(self) -> None: ...
    def test_unique_axis(self) -> None: ...
    def test_unique_1d_with_axis(self, axis) -> None: ...
    def test_unique_axis_zeros(self) -> None: ...
    def test_unique_masked(self) -> None: ...
    def test_unique_sort_order_with_axis(self) -> None: ...
    def test_unique_nanequals(self) -> None: ...
