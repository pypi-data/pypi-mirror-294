from numpy.testing import assert_allclose as assert_allclose, assert_array_equal as assert_array_equal, assert_equal as assert_equal

class TestAsPairs:
    def test_single_value(self) -> None: ...
    def test_two_values(self) -> None: ...
    def test_with_none(self) -> None: ...
    def test_pass_through(self) -> None: ...
    def test_as_index(self) -> None: ...
    def test_exceptions(self) -> None: ...

class TestConditionalShortcuts:
    def test_zero_padding_shortcuts(self, mode) -> None: ...
    def test_shallow_statistic_range(self, mode) -> None: ...
    def test_clip_statistic_range(self, mode) -> None: ...

class TestStatistic:
    def test_check_mean_stat_length(self) -> None: ...
    def test_check_maximum_1(self) -> None: ...
    def test_check_maximum_2(self) -> None: ...
    def test_check_maximum_stat_length(self) -> None: ...
    def test_check_minimum_1(self) -> None: ...
    def test_check_minimum_2(self) -> None: ...
    def test_check_minimum_stat_length(self) -> None: ...
    def test_check_median(self) -> None: ...
    def test_check_median_01(self) -> None: ...
    def test_check_median_02(self) -> None: ...
    def test_check_median_stat_length(self) -> None: ...
    def test_check_mean_shape_one(self) -> None: ...
    def test_check_mean_2(self) -> None: ...
    def test_same_prepend_append(self, mode) -> None: ...
    def test_check_negative_stat_length(self, mode, stat_length) -> None: ...
    def test_simple_stat_length(self) -> None: ...
    def test_zero_stat_length_valid(self, mode) -> None: ...
    def test_zero_stat_length_invalid(self, mode) -> None: ...

class TestConstant:
    def test_check_constant(self) -> None: ...
    def test_check_constant_zeros(self) -> None: ...
    def test_check_constant_float(self) -> None: ...
    def test_check_constant_float2(self) -> None: ...
    def test_check_constant_float3(self) -> None: ...
    def test_check_constant_odd_pad_amount(self) -> None: ...
    def test_check_constant_pad_2d(self) -> None: ...
    def test_check_large_integers(self) -> None: ...
    def test_check_object_array(self) -> None: ...
    def test_pad_empty_dimension(self) -> None: ...

class TestLinearRamp:
    def test_check_simple(self) -> None: ...
    def test_check_2d(self) -> None: ...
    def test_object_array(self) -> None: ...
    def test_end_values(self) -> None: ...
    def test_negative_difference(self, dtype) -> None: ...

class TestReflect:
    def test_check_simple(self) -> None: ...
    def test_check_odd_method(self) -> None: ...
    def test_check_large_pad(self) -> None: ...
    def test_check_shape(self) -> None: ...
    def test_check_01(self) -> None: ...
    def test_check_02(self) -> None: ...
    def test_check_03(self) -> None: ...

class TestEmptyArray:
    def test_pad_empty_dimension(self, mode) -> None: ...
    def test_pad_non_empty_dimension(self, mode) -> None: ...

class TestSymmetric:
    def test_check_simple(self) -> None: ...
    def test_check_odd_method(self) -> None: ...
    def test_check_large_pad(self) -> None: ...
    def test_check_large_pad_odd(self) -> None: ...
    def test_check_shape(self) -> None: ...
    def test_check_01(self) -> None: ...
    def test_check_02(self) -> None: ...
    def test_check_03(self) -> None: ...

class TestWrap:
    def test_check_simple(self) -> None: ...
    def test_check_large_pad(self) -> None: ...
    def test_check_01(self) -> None: ...
    def test_check_02(self) -> None: ...
    def test_pad_with_zero(self) -> None: ...
    def test_repeated_wrapping(self) -> None: ...

class TestEdge:
    def test_check_simple(self) -> None: ...
    def test_check_width_shape_1_2(self) -> None: ...

class TestEmpty:
    def test_simple(self) -> None: ...
    def test_pad_empty_dimension(self) -> None: ...

def test_legacy_vector_functionality() -> None: ...
def test_unicode_mode() -> None: ...
def test_object_input(mode) -> None: ...

class TestPadWidth:
    def test_misshaped_pad_width(self, pad_width, mode) -> None: ...
    def test_misshaped_pad_width_2(self, mode) -> None: ...
    def test_negative_pad_width(self, pad_width, mode) -> None: ...
    def test_bad_type(self, pad_width, dtype, mode) -> None: ...
    def test_pad_width_as_ndarray(self) -> None: ...
    def test_zero_pad_width(self, pad_width, mode) -> None: ...

def test_kwargs(mode) -> None: ...
def test_constant_zero_default() -> None: ...
def test_unsupported_mode(mode) -> None: ...
def test_non_contiguous_array(mode) -> None: ...
def test_memory_layout_persistence(mode) -> None: ...
def test_dtype_persistence(dtype, mode) -> None: ...
