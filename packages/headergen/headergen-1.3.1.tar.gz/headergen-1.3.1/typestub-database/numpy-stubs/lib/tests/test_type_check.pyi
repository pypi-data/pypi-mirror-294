from numpy.lib.type_check import asfarray as asfarray, common_type as common_type, iscomplex as iscomplex, iscomplexobj as iscomplexobj, isneginf as isneginf, isposinf as isposinf, isreal as isreal, isrealobj as isrealobj, mintypecode as mintypecode, nan_to_num as nan_to_num, real_if_close as real_if_close
from numpy.testing import assert_ as assert_, assert_array_equal as assert_array_equal, assert_equal as assert_equal, assert_raises as assert_raises

def assert_all(x) -> None: ...

class TestCommonType:
    def test_basic(self) -> None: ...

class TestMintypecode:
    def test_default_1(self) -> None: ...
    def test_default_2(self) -> None: ...
    def test_default_3(self) -> None: ...

class TestIsscalar:
    def test_basic(self) -> None: ...

class TestReal:
    def test_real(self) -> None: ...
    def test_cmplx(self) -> None: ...

class TestImag:
    def test_real(self) -> None: ...
    def test_cmplx(self) -> None: ...

class TestIscomplex:
    def test_fail(self) -> None: ...
    def test_pass(self) -> None: ...

class TestIsreal:
    def test_pass(self) -> None: ...
    def test_fail(self) -> None: ...

class TestIscomplexobj:
    def test_basic(self) -> None: ...
    def test_scalar(self) -> None: ...
    def test_list(self) -> None: ...
    def test_duck(self): ...
    def test_pandas_duck(self): ...
    def test_custom_dtype_duck(self): ...

class TestIsrealobj:
    def test_basic(self) -> None: ...

class TestIsnan:
    def test_goodvalues(self) -> None: ...
    def test_posinf(self) -> None: ...
    def test_neginf(self) -> None: ...
    def test_ind(self) -> None: ...
    def test_integer(self) -> None: ...
    def test_complex(self) -> None: ...
    def test_complex1(self) -> None: ...

class TestIsfinite:
    def test_goodvalues(self) -> None: ...
    def test_posinf(self) -> None: ...
    def test_neginf(self) -> None: ...
    def test_ind(self) -> None: ...
    def test_integer(self) -> None: ...
    def test_complex(self) -> None: ...
    def test_complex1(self) -> None: ...

class TestIsinf:
    def test_goodvalues(self) -> None: ...
    def test_posinf(self) -> None: ...
    def test_posinf_scalar(self) -> None: ...
    def test_neginf(self) -> None: ...
    def test_neginf_scalar(self) -> None: ...
    def test_ind(self) -> None: ...

class TestIsposinf:
    def test_generic(self) -> None: ...

class TestIsneginf:
    def test_generic(self) -> None: ...

class TestNanToNum:
    def test_generic(self) -> None: ...
    def test_array(self) -> None: ...
    def test_integer(self) -> None: ...
    def test_float(self) -> None: ...
    def test_complex_good(self) -> None: ...
    def test_complex_bad(self) -> None: ...
    def test_complex_bad2(self) -> None: ...
    def test_do_not_rewrite_previous_keyword(self) -> None: ...

class TestRealIfClose:
    def test_basic(self) -> None: ...

class TestArrayConversion:
    def test_asfarray(self) -> None: ...
