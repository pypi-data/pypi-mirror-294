from _typeshed import Incomplete
from numpy import add as add, arange as arange, array as array, diag as diag, eye as eye, fliplr as fliplr, flipud as flipud, histogram2d as histogram2d, mask_indices as mask_indices, ones as ones, tri as tri, tril_indices as tril_indices, tril_indices_from as tril_indices_from, triu_indices as triu_indices, triu_indices_from as triu_indices_from, vander as vander, zeros as zeros
from numpy.core.tests.test_overrides import requires_array_function as requires_array_function
from numpy.testing import assert_ as assert_, assert_array_almost_equal as assert_array_almost_equal, assert_array_equal as assert_array_equal, assert_array_max_ulp as assert_array_max_ulp, assert_equal as assert_equal, assert_raises as assert_raises

def get_mat(n): ...

class TestEye:
    def test_basic(self) -> None: ...
    def test_uint64(self) -> None: ...
    def test_diag(self) -> None: ...
    def test_2d(self) -> None: ...
    def test_diag2d(self) -> None: ...
    def test_eye_bounds(self) -> None: ...
    def test_strings(self) -> None: ...
    def test_bool(self) -> None: ...
    def test_order(self) -> None: ...

class TestDiag:
    def test_vector(self) -> None: ...
    def test_matrix(self, vals: Incomplete | None = None) -> None: ...
    def test_fortran_order(self) -> None: ...
    def test_diag_bounds(self) -> None: ...
    def test_failure(self) -> None: ...

class TestFliplr:
    def test_basic(self) -> None: ...

class TestFlipud:
    def test_basic(self) -> None: ...

class TestHistogram2d:
    def test_simple(self) -> None: ...
    def test_asym(self) -> None: ...
    def test_density(self) -> None: ...
    def test_all_outliers(self) -> None: ...
    def test_empty(self) -> None: ...
    def test_binparameter_combination(self) -> None: ...
    def test_dispatch(self): ...
    def test_bad_length(self, x_len, y_len) -> None: ...

class TestTri:
    def test_dtype(self) -> None: ...

def test_tril_triu_ndim2() -> None: ...
def test_tril_triu_ndim3() -> None: ...
def test_tril_triu_with_inf() -> None: ...
def test_tril_triu_dtype() -> None: ...
def test_mask_indices() -> None: ...
def test_tril_indices() -> None: ...

class TestTriuIndices:
    def test_triu_indices(self) -> None: ...

class TestTrilIndicesFrom:
    def test_exceptions(self) -> None: ...

class TestTriuIndicesFrom:
    def test_exceptions(self) -> None: ...

class TestVander:
    def test_basic(self) -> None: ...
    def test_dtypes(self) -> None: ...
