from numpy import bool_ as bool_, floating as floating, ndarray as ndarray, object_ as object_
from numpy._typing import NDArray as NDArray, _ArrayLikeFloat_co, _ArrayLikeObject_co, _FloatLike_co
from typing import Any, overload

@overload
def fix(x: _FloatLike_co, out: None = ...) -> floating[Any]: ...
@overload
def fix(x: _ArrayLikeFloat_co, out: None = ...) -> NDArray[floating[Any]]: ...
@overload
def fix(x: _ArrayLikeObject_co, out: None = ...) -> NDArray[object_]: ...
@overload
def fix(x: _ArrayLikeFloat_co | _ArrayLikeObject_co, out: _ArrayType) -> _ArrayType: ...
@overload
def isposinf(x: _FloatLike_co, out: None = ...) -> bool_: ...
@overload
def isposinf(x: _ArrayLikeFloat_co, out: None = ...) -> NDArray[bool_]: ...
@overload
def isposinf(x: _ArrayLikeFloat_co, out: _ArrayType) -> _ArrayType: ...
@overload
def isneginf(x: _FloatLike_co, out: None = ...) -> bool_: ...
@overload
def isneginf(x: _ArrayLikeFloat_co, out: None = ...) -> NDArray[bool_]: ...
@overload
def isneginf(x: _ArrayLikeFloat_co, out: _ArrayType) -> _ArrayType: ...
