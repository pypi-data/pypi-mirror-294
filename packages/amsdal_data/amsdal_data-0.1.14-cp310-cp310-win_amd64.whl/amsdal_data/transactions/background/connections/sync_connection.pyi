from _typeshed import Incomplete
from amsdal_data.transactions.background.connections.base import WorkerConnectionBase as WorkerConnectionBase, WorkerMode as WorkerMode
from collections.abc import Callable as Callable
from typing import Any

logger: Incomplete

class SyncBackgroundTransactionConnection(WorkerConnectionBase):
    def __init__(self) -> None: ...
    def register_transaction(self, func: Callable[..., Any], **transaction_kwargs: Any) -> None: ...
    def submit(self, func: Callable[..., Any], func_args: tuple[Any, ...], func_kwargs: dict[str, Any], transaction_kwargs: dict[str, Any]) -> None: ...
    def run_worker(self, init_function: Callable[..., None] | None = None, mode: WorkerMode = ...) -> None: ...
    def connect(self, **kwargs: Any) -> None: ...
    def disconnect(self) -> None: ...
    @property
    def is_connected(self) -> bool: ...
    @property
    def is_alive(self) -> bool: ...
