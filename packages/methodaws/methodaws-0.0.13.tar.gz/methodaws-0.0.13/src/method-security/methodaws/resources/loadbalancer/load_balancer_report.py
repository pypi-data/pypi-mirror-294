# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .load_balancer_v_1 import LoadBalancerV1
from .load_balancer_v_2 import LoadBalancerV2


class LoadBalancerReport(UniversalBaseModel):
    account_id: str = pydantic.Field(alias="accountId")
    v_2_load_balancers: typing.Optional[typing.List[LoadBalancerV2]] = pydantic.Field(
        alias="v2LoadBalancers", default=None
    )
    v_1_load_balancers: typing.Optional[typing.List[LoadBalancerV1]] = pydantic.Field(
        alias="v1LoadBalancers", default=None
    )
    errors: typing.Optional[typing.List[str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
