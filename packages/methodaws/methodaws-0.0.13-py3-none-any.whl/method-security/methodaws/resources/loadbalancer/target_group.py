# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .protocol import Protocol
from .target import Target
from .target_group_ip_address_type import TargetGroupIpAddressType


class TargetGroup(UniversalBaseModel):
    arn: str
    name: str
    ip_address_type: TargetGroupIpAddressType = pydantic.Field(alias="ipAddressType")
    load_balancer_arn: str = pydantic.Field(alias="loadBalancerArn")
    port: int
    protocol: typing.Optional[Protocol] = None
    vpc_id: str = pydantic.Field(alias="vpcId")
    targets: typing.List[Target]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
