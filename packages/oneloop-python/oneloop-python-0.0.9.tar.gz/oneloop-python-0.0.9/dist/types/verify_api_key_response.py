# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .api_key_scope import ApiKeyScope
from .verify_api_key_response_status import VerifyApiKeyResponseStatus
from .verify_api_key_response_rate_limit import VerifyApiKeyResponseRateLimit
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class VerifyApiKeyResponse(UniversalBaseModel):
    expires_at: typing.Optional[int] = pydantic.Field(alias="expiresAt", default=None)
    requested_scopes: typing.List[ApiKeyScope] = pydantic.Field(alias="requestedScopes")
    status: VerifyApiKeyResponseStatus
    rate_limit: typing.Optional[VerifyApiKeyResponseRateLimit] = pydantic.Field(
        alias="rateLimit", default=None
    )

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
