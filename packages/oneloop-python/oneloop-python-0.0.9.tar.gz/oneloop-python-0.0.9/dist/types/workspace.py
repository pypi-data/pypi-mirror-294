# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Workspace(UniversalBaseModel):
    id: str
    name: str
    team_id: str = pydantic.Field(alias="teamId")
    default_key_prefix: typing.Optional[str] = pydantic.Field(
        alias="defaultKeyPrefix", default=None
    )
    default_allowed_i_ps: typing.List[str] = pydantic.Field(alias="defaultAllowedIPs")
    default_rate_limit_per_second: typing.Optional[int] = pydantic.Field(
        alias="defaultRateLimitPerSecond", default=None
    )
    default_expiration: typing.Optional[int] = pydantic.Field(
        alias="defaultExpiration", default=None
    )
    created_at: str = pydantic.Field(alias="createdAt")
    updated_at: str = pydantic.Field(alias="updatedAt")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
