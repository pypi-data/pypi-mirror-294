[tox]
envlist = clean,py{39,310,311,312},pypy3,type,lint,docs
isolated_build = True

[tox:.package]
# note tox will use the same python version as under what tox is installed to package
# so unless this is python 3 you can require a given python version for the packaging
# environment via the basepython key
basepython = python3

[testenv]
deps =
    coverage[toml]< 8
    coverage-conditional-plugin<0.10.0
    pytest<9.0.0
    pyte<0.8.2
    pytest-cov<6.0.0
    pexpect<5.0.0
    windows-curses == 2.3.2;sys_platform=='win32'
commands =
    pytest
setenv =
    PYTHONWARNINGS=all
    TERM=xterm-256color
    uv_python_preference=managed-only

[testenv:type]
deps =
    mypy<1.12.0
    pytest<9.0.0
commands =
    mypy .

basepython = python3.12

[testenv:lint]
deps =
    ruff == v0.6.4
commands =
    ruff check cursesmenu
    ruff check test
basepython = python3.12

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
basepython = python3.12
setenv =
    PYTHONWARNINGS=ignore::DeprecationWarning
deps = sphinx<=9.0.0; python_version >='3.10'
       sphinx-rtd-theme==3.0.0rc1; python_version >= '3.10'
       sphinx-autodoc-typehints<3.0.0; python_version>='3.10'
commands = sphinx-build -d "{toxworkdir}/docs_doctree" docs/source "{toxworkdir}/docs_out" --color -W -bhtml {posargs}
           python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[testenv:clean]
deps = coverage[toml]<8
       coverage-conditional-plugin<0.10.0
skip_install = true
commands = coverage erase
