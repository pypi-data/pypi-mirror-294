Metadata-Version: 2.1
Name: ekyc
Version: 0.1.12
Summary: A library for electronic Know Your Customer (eKYC) verification
Author-email: Prabhjeevan Singh <prabhjeevan@juarapartners.com>
License: MIT License
        
        Copyright (c) [2024] [PrabhjeevanSingh]
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/juaraprabhjeevan/juara_ekyc
Project-URL: Bug Tracker, https://github.com/juaraprabhjeevan/juara_ekyc/issues
Keywords: eKYC,verification,identity
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: <3.13,>=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: opencv-python
Requires-Dist: numpy
Requires-Dist: scikit-learn
Requires-Dist: deepface
Requires-Dist: Flask
Requires-Dist: paddlepaddle==2.6.1
Requires-Dist: paddleocr==2.8.1
Requires-Dist: tensorflow==2.11.0
Requires-Dist: protobuf==3.19.6
Requires-Dist: dlib>=19.22.0; platform_system != "Windows"
Requires-Dist: torch
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: flake8; extra == "dev"

# Juara eKYC Library

Juara eKYC is a Python library for electronic Know Your Customer (eKYC) verification, including document verification, face processing, liveness detection, and face matching.

## Features

- Document verification
- Face processing
- Liveness check
- Face matching
- Flask-based API for eKYC verification

## Prerequisites

- Python 3.7+
- OpenCV
- NumPy
- scikit-learn
- deepface
- paddleocr
- Flask
- dlib

## Installation

### For Windows Users:

1. Ensure you have CMake installed. You can download it from [cmake.org](https://cmake.org/download/).

2. Uninstall any previous versions:
   ```
   pip uninstall ekyc
   ```

3. Clear pip cache:
   ```
   pip cache purge
   ```

4. Install the package:
   ```
   pip install path/to/ekyc-0.0.4-py3-none-any.whl
   ```

   Note: This will automatically install the correct dlib version for your Python installation.

5. You may need to install PaddleOCR and PaddlePaddle separately:
   ```
   pip install paddlepaddle
   pip install paddleocr
   ```

### For Other Operating Systems:

You can install the eKYC library using pip:

pip install juara_ekyc


## Usage

Here's a basic example of how to use the Juara eKYC library:

python
from juara_ekyc import process_id_verification
result, message = process_id_verification('path/to/image.jpg')
print(f"Verification result: {result}")
print(f"Message: {message}")

## Development

1. Clone the repository:
   ```
   git clone https://github.com/yourusername/juara_ekyc.git
   cd juara_ekyc
   ```

2. Create a virtual environment:
   ```
   python -m venv venv
   source venv/bin/activate  # On Windows use `venv\Scripts\activate`
   ```

3. Install the development dependencies:
   ```
   pip install -r requirements.txt
   ```

4. Run the tests:
   ```
   python -m unittest discover tests
   ```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## License

This project is licensed under the MIT License - see the LICENSE file for details.
