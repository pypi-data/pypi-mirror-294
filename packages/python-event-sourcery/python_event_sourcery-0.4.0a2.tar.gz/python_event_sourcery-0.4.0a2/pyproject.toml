[tool.poetry]
name = "python-event-sourcery"
version = "0.4.0a2"
description = ""
authors = ["Your Name <you@example.com>"]
license = "MIT"
packages = [
    { include = "event_sourcery" },
    { include = "event_sourcery_esdb" },
    { include = "event_sourcery_sqlalchemy" },
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
pydantic = ">=2.0,<3"
more-itertools = "*"
SQLAlchemy = {version = ">=2.0", optional = true}
esdbclient = {version = ">=1.0b3", optional = true}
django = {version = ">=4,<6", optional = true}

[tool.poetry.group.dev.dependencies]
black = "*"
isort = "*"
flake8 = "*"
bandit = "*"
mypy = "*"
pytest = "*"
pytest-cov = "*"
mkdocs-material = "^8.3.9"
psycopg2-binary = "^2.9.3"
pytest-django = {version = "*"}
flake8-pyproject = "*"

[tool.poetry.extras]
sqlalchemy = ["SQLAlchemy"]
esdb = ["esdbclient"]
django = ["django"]

[tool.pytest]
addopts = ""

[tool.pytest.ini_options]
markers = [
    "not_implemented: skip not implemented yet backend functionality",
    "skip_backend: skip features not supported by backend",
]
DJANGO_SETTINGS_MODULE = "tests.backend.django"

[tool.coverage.run]
branch = true
source = [
    "event_sourcery",
    "event_sourcery_django",
    "event_sourcery_esdb",
    "event_sourcery_sqlalchemy",
]
omit = [
    "tests/*",
]

[tool.coverage.report]
fail_under = 100
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "pass",
    "\\.\\.\\.",
    "NotImplementedError",
    "__repr__",
    "__str__",
    "TYPE_CHECKING",
]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.flake8]
max-line-length = 88

[tool.isort]
profile = "black"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
