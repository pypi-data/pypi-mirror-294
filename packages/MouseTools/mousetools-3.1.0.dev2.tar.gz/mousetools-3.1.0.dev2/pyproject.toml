[project]
name = "MouseTools"
dynamic = ["version"]
authors = [{name = "Scott Caratozzolo"}]
description = "An unofficial Python wrapper for Disney's API"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "httpx>=0.27.2",
    "tzdata>=2024.1",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]

[project.urls]
repository = "https://gitlab.com/caratozzoloxyz/public/MouseTools"
documentation = "https://caratozzoloxyz.gitlab.io/public/MouseTools/"

[tool.uv]
dev-dependencies = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.33",
    "mkdocstrings[python]>=0.25.2",
    "mypy>=1.11.2",
    "pre-commit>=3.5.0",
    "pytest-cov>=5.0.0",
    "pytest>=8.3.2",
    "ruff>=0.6.3",
]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = {attr = "mousetools.__version__"}

[tool.setuptools.packages.find]
include = ["mousetools*"]

[tool.semantic_release]
assets = []
build_command = "python -m build"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"
version_variables = [
    "mousetools/__init__.py:__version__",
]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.branches.develop]
match = "develop"
prerelease_token = "dev"
prerelease = true

[tool.semantic_release.branches.all]
match = "^[0-9]+"
prerelease_token = "alpha"
prerelease = true

[tool.semantic_release.commit_author]
env = "CI_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.publish]
upload_to_vcs_release = false

[tool.pytest.ini_options]
testpaths = ["tests"]


[tool.ruff]
target-version = "py39"
line-length = 120

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
# Use of `assert` detected
"**/tests/*" = ["S101"]


[tool.mypy]
python_version = "3.9"
files = ["mousetools"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_unused_ignores = "True"
show_error_codes = "True"