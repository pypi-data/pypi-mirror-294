name: Tests, Artifacts and Release

on:
  pull_request:
  push:
    branches:
    - main
    - dev
    tags:
    - "*.*"
    - "v*.*"
  release:

jobs:

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python_version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]
        os: [windows-latest, ubuntu-latest] #, macos-latest]
        # include:
        # - os: windows-latest
        #   python_version: 'msys2'

    name: ${{ matrix.os }} - Python ${{ matrix.python_version }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v5
        if: matrix.python_version != 'msys2'
        with:
          python-version: ${{ matrix.python_version }}
          architecture: x64
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        if: matrix.python_version == 'msys2'
        with:
          msystem: MINGW64
          install: git mingw-w64-x86_64-python mingw-w64-x86_64-python-setuptools
          update: true
      - run: pip install --upgrade setuptools
        if: matrix.python_version != 'msys2'
      - run: pip install -e ./[test]
      - run: pytest

  check_install:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python_version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]
    name: check install - Python ${{ matrix.python_version }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
          architecture: x64
      - run: pip install --upgrade setuptools
      - run: python setup.py sdist
      - run: pip install dist/*

  dist:
    runs-on: ubuntu-latest
    needs: [test]
    name: Python bdist/wheel
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade wheel setuptools setuptools_scm build
    - name: Build package
      run: python -m build -s -w -o dist/
    - uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist

  dist_check:
    runs-on: ubuntu-latest
    needs: [dist]
    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: pip install twine
    - uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist
    - run: twine check dist/*

  dist_upload:
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags')
    needs: [dist_check]
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.pypi_token }}
    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.test_pypi_token }}
        repository_url: https://test.pypi.org/legacy/
        skip_existing: true
