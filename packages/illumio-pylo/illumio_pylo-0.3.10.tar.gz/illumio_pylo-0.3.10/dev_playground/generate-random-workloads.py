import sys

sys.path.append('..')

import argparse
import illumio_pylo as pylo
import random

workloadsToCreateQuantity = 10000
targetHostname = '192.168.253.10'


target = pylo.Organization(1)
print("Loading Organization's data from API...")
# target.load_from_saved_credentials(hostname)
print("Done !")

connector = pylo.APIConnector.create_from_credentials_in_file(targetHostname)

workloadObject = {
    "name": "randomhere",
    "description": "generated by script",
    "hostname": "something random",
    "data_center": "somewhere on this planet",
    "os_id": "Linux",
    "os_detail": "Centos 7.1"
}

random.seed()
baseNumber = random.randint(0, 1000000)

print("Downloading labels infos from PCE...")
workloads_json = connector.objects_label_get()
target.LabelStore.load_labels_from_json(workloads_json)
print("done!")

print("Downloading workloads infos from PCE...")
workloads_json = connector.objects_workload_get()
print("done!")

print("Organisation Statistics:\n", target.stats_to_str())

loc_labels = target.LabelStore.get_labels('loc')
env_labels = target.LabelStore.get_labels('env')
app_labels = target.LabelStore.get_labels('app')
role_labels = target.LabelStore.get_labels('role')

for i in range(0, workloadsToCreateQuantity):
    wkl_hostname = 'rand-' + str(i + baseNumber)
    print("-  Workload hostname will be '" + wkl_hostname + "' (#" + str(i+1) + " of " + str(workloadsToCreateQuantity)+ ")")
    workloadObject['name'] = wkl_hostname
    workloadObject['hostname'] = wkl_hostname

    loc_label = loc_labels[random.randint(0, len(loc_labels)-1)]
    env_label = env_labels[random.randint(0, len(env_labels)-1)]
    app_label = app_labels[random.randint(0, len(app_labels)-1)]
    role_label = role_labels[random.randint(0, len(role_labels)-1)]

    print("    Location label will be: " + loc_label.name)
    print("    Environment label will be: " + env_label.name)
    print("    Application label will be: " + app_label.name)
    print("    Role label will be: " + role_label.name)

    labels = [ {"href": loc_label.href}, {"href": env_label.href}, {"href": app_label.href}, {"href": role_label.href} ]

    workloadObject['labels'] = labels

    connector.objects_workload_create_single_unmanaged(workloadObject)




