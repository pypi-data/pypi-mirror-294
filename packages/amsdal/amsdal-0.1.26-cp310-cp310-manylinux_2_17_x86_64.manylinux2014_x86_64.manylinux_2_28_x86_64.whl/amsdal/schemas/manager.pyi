from _typeshed import Incomplete
from amsdal.configs.main import settings as settings
from amsdal_models.schemas.data_models.schema import ObjectSchema
from amsdal_utils.models.enums import SchemaTypes
from amsdal_utils.utils.singleton import Singleton

class SchemaManager(metaclass=Singleton):
    _schema_manager_handler: Incomplete
    def __init__(self) -> None: ...
    def invalidate_user_schemas(self) -> None: ...
    def class_schemas(self) -> list[tuple[ObjectSchema, SchemaTypes]]: ...
    @staticmethod
    def _sort_key_for_schema(schema: ObjectSchema) -> int: ...
    def get_schema_by_name(self, title: str, schema_type: SchemaTypes | None = None) -> ObjectSchema | None: ...
    def get_schemas(self, schema_type: SchemaTypes | None = None) -> list[ObjectSchema]: ...
