from amsdal.cloud.models.base import AddBasicAuthResponse as AddBasicAuthResponse, CreateEnvResponse as CreateEnvResponse, GetMonitoringInfoResponse as GetMonitoringInfoResponse, ListDependenciesDetails as ListDependenciesDetails, ListDeployResponse as ListDeployResponse, ListEnvsResponse as ListEnvsResponse, ListSecretsDetails as ListSecretsDetails, UpdateDeployStatusResponse as UpdateDeployStatusResponse
from amsdal.cloud.services.actions.add_allowlist_ip import AddAllowlistIPAction as AddAllowlistIPAction
from amsdal.cloud.services.actions.add_basic_auth import AddBasicAuthAction as AddBasicAuthAction
from amsdal.cloud.services.actions.add_dependency import AddDepenencyAction as AddDepenencyAction
from amsdal.cloud.services.actions.add_secret import AddSecretAction as AddSecretAction
from amsdal.cloud.services.actions.create_deploy import CreateDeployAction as CreateDeployAction
from amsdal.cloud.services.actions.create_env import CreateEnvAction as CreateEnvAction
from amsdal.cloud.services.actions.delete_allowlist_ip import DeleteAllowlistIPAction as DeleteAllowlistIPAction
from amsdal.cloud.services.actions.delete_basic_auth import DeleteBasicAuthAction as DeleteBasicAuthAction
from amsdal.cloud.services.actions.delete_dependency import DeleteDepenencyAction as DeleteDepenencyAction
from amsdal.cloud.services.actions.delete_env import DeleteEnvAction as DeleteEnvAction
from amsdal.cloud.services.actions.delete_secret import DeleteSecretAction as DeleteSecretAction
from amsdal.cloud.services.actions.destroy_deploy import DestroyDeployAction as DestroyDeployAction
from amsdal.cloud.services.actions.expose_db import ExposeDBAction as ExposeDBAction
from amsdal.cloud.services.actions.get_basic_auth_credentials import GetBasicAuthCredentialsAction as GetBasicAuthCredentialsAction
from amsdal.cloud.services.actions.get_monitoring_info import GetMonitoringInfoAction as GetMonitoringInfoAction
from amsdal.cloud.services.actions.list_dependencies import ListDependenciesAction as ListDependenciesAction
from amsdal.cloud.services.actions.list_deploys import ListDeploysAction as ListDeploysAction
from amsdal.cloud.services.actions.list_envs import ListEnvsAction as ListEnvsAction
from amsdal.cloud.services.actions.list_secrets import ListSecretsAction as ListSecretsAction
from amsdal.cloud.services.actions.update_deploy import UpdateDeployAction as UpdateDeployAction
from typing import Any

class CloudActionsManager:
    def create_deploy(self, deploy_type: str, lakehouse_type: str, env_name: str, from_env: str | None = None, application_uuid: str | None = None, application_name: str | None = None, *, no_input: bool = False) -> bool: ...
    def list_deploys(self, *, list_all: bool = True) -> ListDeployResponse: ...
    def destroy_deploy(self, deployment_id: str) -> bool: ...
    def update_deploy(self, deployment_id: str) -> UpdateDeployStatusResponse: ...
    def add_secret(self, secret_name: str, secret_value: str, env_name: str, application_uuid: str | None = None, application_name: str | None = None) -> bool: ...
    def list_secrets(self, env_name: str, application_uuid: str | None = None, application_name: str | None = None, *, with_values: bool = False) -> ListSecretsDetails: ...
    def delete_secret(self, secret_name: str, env_name: str, application_uuid: str | None = None, application_name: str | None = None) -> bool: ...
    def add_dependency(self, dependency_name: str, env_name: str, application_uuid: str | None = None, application_name: str | None = None) -> bool: ...
    def delete_dependency(self, dependency_name: str, env_name: str, application_uuid: str | None = None, application_name: str | None = None) -> bool: ...
    def list_dependencies(self, env_name: str, application_uuid: str | None = None, application_name: str | None = None) -> ListDependenciesDetails: ...
    def expose_db(self, env_name: str, application_uuid: str | None = None, application_name: str | None = None, ip_address: str | None = None) -> dict[str, Any]: ...
    def get_monitoring_info(self, env_name: str, application_uuid: str | None = None, application_name: str | None = None) -> GetMonitoringInfoResponse: ...
    def add_allowlist_ip(self, env_name: str, ip_address: str | None = None, application_uuid: str | None = None, application_name: str | None = None) -> bool: ...
    def delete_allowlist_ip(self, env_name: str, ip_address: str | None = None, application_uuid: str | None = None, application_name: str | None = None) -> bool: ...
    def add_basic_auth(self, env_name: str, username: str | None = None, password: str | None = None, application_uuid: str | None = None, application_name: str | None = None) -> AddBasicAuthResponse: ...
    def delete_basic_auth(self, env_name: str, application_uuid: str | None = None, application_name: str | None = None) -> bool: ...
    def get_basic_auth_credentials(self, env_name: str, application_uuid: str | None = None, application_name: str | None = None) -> AddBasicAuthResponse: ...
    def list_envs(self, application_uuid: str | None = None, application_name: str | None = None) -> ListEnvsResponse: ...
    def create_env(self, env_name: str, application_name: str | None = None, application_uuid: str | None = None) -> CreateEnvResponse: ...
    def delete_env(self, env_name: str, application_name: str | None = None, application_uuid: str | None = None) -> CreateEnvResponse: ...
