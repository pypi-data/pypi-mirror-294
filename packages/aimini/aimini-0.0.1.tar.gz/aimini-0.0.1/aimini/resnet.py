# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/lectures/13_resnet.ipynb.

# %% auto 0
__all__ = ['act_gr', 'ResBlock']

# %% ../nbs/lectures/13_resnet.ipynb 2
import fastcore.all as fc
from functools import partial

from datasets import load_dataset

from torch import nn
from torch import optim
import torch.nn.functional as F
import torchvision.transforms.functional as TF
from torch.optim import lr_scheduler
from torcheval.metrics import MulticlassAccuracy

from .conv import def_device
from .datasets import inplace
from .learner import MetricsCB, DeviceCB, ProgressCB, DataLoaders, Learner, TrainLearner, SingleBatchCB, MomentumLearner, lr_find
from .activations import Hooks
from .init import conv, GeneralRelu, init_weights, ActivationStats, set_seed
from .sgd import BatchSchedCB

# %% ../nbs/lectures/13_resnet.ipynb 6
act_gr = partial(GeneralRelu, leak=0.1, sub=0.4)

# %% ../nbs/lectures/13_resnet.ipynb 14
def _conv_block(ni, nf, stride, act=act_gr, norm=None, ks=3):
    return nn.Sequential(conv(ni, nf, stride=1, act=act, norm=norm, ks=ks),
                         conv(nf, nf, stride=stride, act=None, norm=norm, ks=ks))

class ResBlock(nn.Module):
    def __init__(self, ni, nf, stride=1, ks=3, act=act_gr, norm=None):
        super().__init__()
        self.convs = _conv_block(ni, nf, stride, act=act, ks=ks, norm=norm)
        self.idconv = fc.noop if ni == nf else conv(ni,nf, ks=1, stride=1, act=None)
        self.pool = fc.noop if stride == 1 else nn.AvgPool2d(2, ceil_mode=True)
        self.act = act()
    
    def forward(self, x): return self.act(self.convs(x) + self.idconv(self.pool(x)))
