# coding: utf-8

"""
    UiPath.WebApi 18.0

    Orchestrator API  # noqa: E501

    OpenAPI spec version: 18.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import uipath_orchestrator_rest
from uipath_orchestrator_rest.api.robots_api import RobotsApi  # noqa: E501
from uipath_orchestrator_rest.rest import ApiException


class TestRobotsApi(unittest.TestCase):
    """RobotsApi unit test stubs"""

    def setUp(self):
        self.api = uipath_orchestrator_rest.api.robots_api.RobotsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_robots_convert_to_floating(self):
        """Test case for robots_convert_to_floating

        Convert a Standard Attended Robot to a Floating Robot.  # noqa: E501
        """
        pass

    def test_robots_delete_bulk(self):
        """Test case for robots_delete_bulk

        Deletes multiple robots based on their keys.  # noqa: E501
        """
        pass

    def test_robots_delete_by_id(self):
        """Test case for robots_delete_by_id

        Deletes a robot based on its key.  # noqa: E501
        """
        pass

    def test_robots_find_all_across_folders(self):
        """Test case for robots_find_all_across_folders

        Get robots across all accessible folders.  # noqa: E501
        """
        pass

    def test_robots_get(self):
        """Test case for robots_get

        Gets robots.  # noqa: E501
        """
        pass

    def test_robots_get_by_id(self):
        """Test case for robots_get_by_id

        Gets a single robot based on its key.  # noqa: E501
        """
        pass

    def test_robots_get_configured_robots(self):
        """Test case for robots_get_configured_robots

        Gets robots autoprovisioned from users  # noqa: E501
        """
        pass

    def test_robots_get_folder_robots_by_folderid_and_machineid(self):
        """Test case for robots_get_folder_robots_by_folderid_and_machineid

        Get folder robots  # noqa: E501
        """
        pass

    def test_robots_get_machine_name_to_license_key_mappings(self):
        """Test case for robots_get_machine_name_to_license_key_mappings

        Gets machine name to license key mapping.  # noqa: E501
        """
        pass

    def test_robots_get_robots_for_process_by_processid(self):
        """Test case for robots_get_robots_for_process_by_processid

        Returns a collection of all robots that can execute the process with the provided Id.  # noqa: E501
        """
        pass

    def test_robots_get_robots_from_folder_by_folderid(self):
        """Test case for robots_get_robots_from_folder_by_folderid

        Gets all robots from a folder  # noqa: E501
        """
        pass

    def test_robots_get_usernames(self):
        """Test case for robots_get_usernames

        Gets usernames.  # noqa: E501
        """
        pass

    def test_robots_patch_by_id(self):
        """Test case for robots_patch_by_id

        Partially updates a robot.  # noqa: E501
        """
        pass

    def test_robots_post(self):
        """Test case for robots_post

        Creates a new robot.  # noqa: E501
        """
        pass

    def test_robots_put_by_id(self):
        """Test case for robots_put_by_id

        Edits a robot based on its key.  # noqa: E501
        """
        pass

    def test_robots_toggle_enabled_status(self):
        """Test case for robots_toggle_enabled_status

        Toggles the status of the robots (enabled/disabled)  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
