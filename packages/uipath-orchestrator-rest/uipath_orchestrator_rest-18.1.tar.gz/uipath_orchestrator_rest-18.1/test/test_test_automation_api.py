# coding: utf-8

"""
    UiPath.WebApi 18.0

    Orchestrator API  # noqa: E501

    OpenAPI spec version: 18.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import uipath_orchestrator_rest
from uipath_orchestrator_rest.api.test_automation_api import TestAutomationApi  # noqa: E501
from uipath_orchestrator_rest.rest import ApiException


class TestTestAutomationApi(unittest.TestCase):
    """TestAutomationApi unit test stubs"""

    def setUp(self):
        self.api = uipath_orchestrator_rest.api.test_automation_api.TestAutomationApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_test_automation_cancel_test_case_execution(self):
        """Test case for test_automation_cancel_test_case_execution

        Cancels the specified test case execution.  # noqa: E501
        """
        pass

    def test_test_automation_cancel_test_set_execution(self):
        """Test case for test_automation_cancel_test_set_execution

        Cancels the specified test set execution.  # noqa: E501
        """
        pass

    def test_test_automation_create_test_set_for_release_version(self):
        """Test case for test_automation_create_test_set_for_release_version

        This will create a test set with source type API.This endpoint it is supposed to be used by API integration.  # noqa: E501
        """
        pass

    def test_test_automation_get_assertion_screenshot(self):
        """Test case for test_automation_get_assertion_screenshot

        Get the screenshot for the specified test case assertion.  # noqa: E501
        """
        pass

    def test_test_automation_get_package_info_by_test_case_unique_id(self):
        """Test case for test_automation_get_package_info_by_test_case_unique_id

        Get the package identifier and the latest version for the specified test case.  # noqa: E501
        """
        pass

    def test_test_automation_get_releases_for_package_version(self):
        """Test case for test_automation_get_releases_for_package_version

        This will list all the processes filtered by package identifier and version cross-folder when no current folder is sent by header.  # noqa: E501
        """
        pass

    def test_test_automation_get_test_case_execution_attachment(self):
        """Test case for test_automation_get_test_case_execution_attachment

        Get the attachment for the specified test case execution attachment.  # noqa: E501
        """
        pass

    def test_test_automation_get_test_case_execution_attachments(self):
        """Test case for test_automation_get_test_case_execution_attachments

        This will list all test case execution attachments filtered by identifier and tags  # noqa: E501
        """
        pass

    def test_test_automation_get_test_set_execution_attachment(self):
        """Test case for test_automation_get_test_set_execution_attachment

        Get the attachment for the specified test set execution attachment.  # noqa: E501
        """
        pass

    def test_test_automation_get_test_set_execution_attachments(self):
        """Test case for test_automation_get_test_set_execution_attachments

        This will list all test set execution attachments filtered by identifier and tags  # noqa: E501
        """
        pass

    def test_test_automation_reexecute_test_cases(self):
        """Test case for test_automation_reexecute_test_cases

        Re-execute the specified test case executions within the same test set execution.  # noqa: E501
        """
        pass

    def test_test_automation_start_test_set_execution(self):
        """Test case for test_automation_start_test_set_execution

        Start a test set execution.  # noqa: E501
        """
        pass

    def test_test_automation_start_test_set_execution_with_options(self):
        """Test case for test_automation_start_test_set_execution_with_options

        Start a test set execution with additional options.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
