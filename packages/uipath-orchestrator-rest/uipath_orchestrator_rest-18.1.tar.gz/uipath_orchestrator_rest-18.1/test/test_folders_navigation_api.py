# coding: utf-8

"""
    UiPath.WebApi 18.0

    Orchestrator API  # noqa: E501

    OpenAPI spec version: 18.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import uipath_orchestrator_rest
from uipath_orchestrator_rest.api.folders_navigation_api import FoldersNavigationApi  # noqa: E501
from uipath_orchestrator_rest.rest import ApiException


class TestFoldersNavigationApi(unittest.TestCase):
    """FoldersNavigationApi unit test stubs"""

    def setUp(self):
        self.api = uipath_orchestrator_rest.api.folders_navigation_api.FoldersNavigationApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_folders_navigation_get_all_folders_for_current_user(self):
        """Test case for folders_navigation_get_all_folders_for_current_user

        Returns the folders the current user has access to.  The response will be a list of folders; the hierarchy can be reconstructed  using the ParentId properties. From the root to the folders the user has  actually been assigned to, the folders will be marked as non-selectable  and only the paths to the assigned-to folders will be included.  From the assigned-to folders down to the leaves, the nodes will be marked as  selectable and their children lists fully populated.  # noqa: E501
        """
        pass

    def test_folders_navigation_get_all_roles_for_user(self):
        """Test case for folders_navigation_get_all_roles_for_user

        Returns a page of the user-folder assignments for the input user, including the roles for each folder.  The response also includes the folders assigned to the directory groups of the user.  The distinction between the folders assigned directly to the user and the ones assigned to one of his groups  can be made via the User field of the response.  # noqa: E501
        """
        pass

    def test_folders_navigation_get_folder_navigation_context_for_current_user(self):
        """Test case for folders_navigation_get_folder_navigation_context_for_current_user

        Returns a subset (paginated) of direct children for a given folder, which are accessible to the current user.  To ease a folder tree structure navigation design, the list of ancestors for the given folder is also returned.  # noqa: E501
        """
        pass

    def test_folders_navigation_get_folders_for_current_user(self):
        """Test case for folders_navigation_get_folders_for_current_user

        Returns a filtered subset (paginated) of the folders the current user has access to.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
