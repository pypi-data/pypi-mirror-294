# pyproject.toml

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "cnert"
version = "0.8.4"
description = "Cnert is trying to be a simple API for creating TLS Certificates testing purposes."
authors = ["Maarten <ikmaarten@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/maartenq/cnert"
repository = "https://github.com/maartenq/cnert"
documentation = "https://cnert.readthedocs.io/en/latest/"
keywords = ["certificate", "X.509", "TLS", "cryptography", "testing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python",
    "Topic :: Security :: Cryptography",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing :: Mocking",
    "Topic :: Software Development :: Testing",
]

[tool.poetry.dependencies]
python = "^3.9"
cryptography = "~43.0"
idna = "~3.8"

[tool.poetry.group.dev.dependencies]
black = "~24.8"
coverage = {extras = ["toml"], version = "~7.6"}
mypy = "~1.11"
pre-commit = "~3.8"
pytest = "~8.3"
pytest-cov = "~5.0"
ruff = "~0.6"
tox = "~4.18"
pytest-mock = "~3.14"


[tool.poetry.group.docs.dependencies]
mkdocs = "~1.6"
mkdocs-material = "~9.5"
mkdocstrings = {extras = ["python"], version = "~0.26"}
mkdocs-autorefs = "~1.2"

[tool.poetry_bumpversion.file."src/cnert/__init__.py"]
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[tool.black]
line-length = 79

[tool.coverage.run]
branch = true
source = ["cnert"]

[tool.coverage.report]
exclude_lines = [
    "\\# pragma: no cover\\b",
    "^\\s*raise AssertionError\\b",
    "^\\s*raise NotImplementedError\\b",
    "^\\s*return NotImplemented\\b",
]
skip_empty = true
show_missing = true

[tool.isort]
line_length = 79
multi_line_output = 3
profile = "black"
skip_gitignore = true

[tool.ruff]
target-version = "py39"
line-length = 79
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # raise-vanilla-args
    "TRY003",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
"src/cnert/cli.py" = ["B008"]
