Metadata-Version: 2.1
Name: bitpapa-pay
Version: 0.1.16
Summary: Bitpapa Pay async python wrapper
Author: VasilevAlexandr97
Author-email: vasilev.alex.work@gmail.com
Requires-Python: >=3.8,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: aiohttp (>=3.8.6,<4.0.0)
Requires-Dist: loguru (>=0.7.2,<0.8.0)
Requires-Dist: pydantic (>=2.4.1,<3.0.0)
Description-Content-Type: text/markdown

# Bitpapa Pay asynchronous api wrapper

**Docs**: https://apidocs.bitpapa.com/docs/apidocs/wvea40l9be95f-integracziya-bitpapa-pay

## Installation

Install bitpapa-pay

```
pip install bitpapa-pay
```

## Usage/Examples

```python
import asyncio

from bitpapa_pay import BitpapaPay


async def main():
    bitpapa_pay = BitpapaPay(api_token="api_token")
    result = await bitpapa_pay.create_invoice("USDT", 100)
    print(result.model_dump())
    print(
        result.invoice.id,
        result.invoice.currency_code,
        result.invoice.amount,
        result.invoice.status,
        result.invoice.created_at,
        result.invoice.updated_at,
        result.invoice.url
    )
    result = await bitpapa_pay.get_invoices()
    for invoice in result.invoices:
        print(
            invoice.id,
            invoice.currency_code,
            invoice.amount,
            invoice.status,
            invoice.created_at,
            invoice.updated_at,
            invoice.url
        )
    result = await bitpapa_pay.get_exchange_rates_all()
    print(result)

    await bitpapa_pay.close()


if __name__ == "__main__":
    asyncio.run(main())
```

