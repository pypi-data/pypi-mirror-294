# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from resemble.thirdparty.mailgun.v1 import mailgun_pb2 as resemble_dot_thirdparty_dot_mailgun_dot_v1_dot_mailgun__pb2


class MessageInterfaceStub(object):
    """//////////////////////////////////////////////////////////////////////

    *
    A single message sent using the integration.

    Created and scheduled using its constructor: `await Message.Send(...)`.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Send = channel.unary_unary(
                '/resemble.thirdparty.mailgun.v1.MessageInterface/Send',
                request_serializer=resemble_dot_thirdparty_dot_mailgun_dot_v1_dot_mailgun__pb2.SendRequest.SerializeToString,
                response_deserializer=resemble_dot_thirdparty_dot_mailgun_dot_v1_dot_mailgun__pb2.SendResponse.FromString,
                )
        self.SendTask = channel.unary_unary(
                '/resemble.thirdparty.mailgun.v1.MessageInterface/SendTask',
                request_serializer=resemble_dot_thirdparty_dot_mailgun_dot_v1_dot_mailgun__pb2.SendTaskRequest.SerializeToString,
                response_deserializer=resemble_dot_thirdparty_dot_mailgun_dot_v1_dot_mailgun__pb2.SendTaskResponse.FromString,
                )


class MessageInterfaceServicer(object):
    """//////////////////////////////////////////////////////////////////////

    *
    A single message sent using the integration.

    Created and scheduled using its constructor: `await Message.Send(...)`.
    """

    def Send(self, request, context):
        """*
        Construct and send an email message using the Mailgun API.

        Returns a `task_id` which can be used for the message to have
        been sent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendTask(self, request, context):
        """/ PRIVATE
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MessageInterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Send': grpc.unary_unary_rpc_method_handler(
                    servicer.Send,
                    request_deserializer=resemble_dot_thirdparty_dot_mailgun_dot_v1_dot_mailgun__pb2.SendRequest.FromString,
                    response_serializer=resemble_dot_thirdparty_dot_mailgun_dot_v1_dot_mailgun__pb2.SendResponse.SerializeToString,
            ),
            'SendTask': grpc.unary_unary_rpc_method_handler(
                    servicer.SendTask,
                    request_deserializer=resemble_dot_thirdparty_dot_mailgun_dot_v1_dot_mailgun__pb2.SendTaskRequest.FromString,
                    response_serializer=resemble_dot_thirdparty_dot_mailgun_dot_v1_dot_mailgun__pb2.SendTaskResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'resemble.thirdparty.mailgun.v1.MessageInterface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MessageInterface(object):
    """//////////////////////////////////////////////////////////////////////

    *
    A single message sent using the integration.

    Created and scheduled using its constructor: `await Message.Send(...)`.
    """

    @staticmethod
    def Send(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/resemble.thirdparty.mailgun.v1.MessageInterface/Send',
            resemble_dot_thirdparty_dot_mailgun_dot_v1_dot_mailgun__pb2.SendRequest.SerializeToString,
            resemble_dot_thirdparty_dot_mailgun_dot_v1_dot_mailgun__pb2.SendResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/resemble.thirdparty.mailgun.v1.MessageInterface/SendTask',
            resemble_dot_thirdparty_dot_mailgun_dot_v1_dot_mailgun__pb2.SendTaskRequest.SerializeToString,
            resemble_dot_thirdparty_dot_mailgun_dot_v1_dot_mailgun__pb2.SendTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
