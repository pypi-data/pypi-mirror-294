"""Dataclasses for all structs in the IHyperdriveCheckpointRewarder contract.

DO NOT EDIT.  This file was generated by pypechain.  See documentation at
https://github.com/delvtech/pypechain """

# super() call methods are generic, while our version adds values & types
# pylint: disable=arguments-differ

# contracts have PascalCase names
# pylint: disable=invalid-name
# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments
# unable to determine which imports will be used in the generated code
# pylint: disable=unused-import
# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return
from __future__ import annotations

from dataclasses import dataclass

from web3.types import ABIEvent, ABIEventParams

AdminUpdated = ABIEvent(
    anonymous=False,
    inputs=[
        ABIEventParams(indexed=True, name="admin", type="address"),
    ],
    name="AdminUpdated",
    type="event",
)

CheckpointRewardClaimed = ABIEvent(
    anonymous=False,
    inputs=[
        ABIEventParams(indexed=True, name="instance", type="address"),
        ABIEventParams(indexed=True, name="claimant", type="address"),
        ABIEventParams(indexed=True, name="isTrader", type="bool"),
        ABIEventParams(indexed=False, name="checkpointTime", type="uint256"),
        ABIEventParams(indexed=False, name="rewardToken", type="address"),
        ABIEventParams(indexed=False, name="rewardAmount", type="uint256"),
    ],
    name="CheckpointRewardClaimed",
    type="event",
)

SubrewarderUpdated = ABIEvent(
    anonymous=False,
    inputs=[
        ABIEventParams(indexed=True, name="subrewarder", type="address"),
    ],
    name="SubrewarderUpdated",
    type="event",
)


@dataclass
class ErrorInfo:
    """Custom contract error information."""

    name: str
    selector: str
    signature: str
    inputs: list[ErrorParams]


@dataclass
class ErrorParams:
    """Parameter info for custom contract errors."""

    name: str
    solidity_type: str
    python_type: str


UnauthorizedError = ErrorInfo(
    inputs=[],
    name="Unauthorized",
    selector="0x82b42900",
    signature="Unauthorized()",
)
