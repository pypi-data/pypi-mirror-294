"""A web3.py Contract class for the RsETHLineaTarget0Deployer contract.

DO NOT EDIT.  This file was generated by pypechain.  See documentation at
https://github.com/delvtech/pypechain"""

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overriden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long


from __future__ import annotations

from typing import Any, NamedTuple, Type, cast

from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ChecksumAddress, HexStr
from hexbytes import HexBytes
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractFunction,
    ContractFunctions,
)
from web3.types import BlockIdentifier, StateOverride, TxParams

from .IHyperdriveTypes import Fees, PoolConfig
from .LPMathContract import LPMathContract
from .RsETHLineaConversionsContract import RsETHLineaConversionsContract
from .utilities import dataclass_to_tuple, rename_returned_types

structs = {
    "Fees": Fees,
    "PoolConfig": PoolConfig,
}


class RsETHLineaTarget0DeployerDeployTargetContractFunction(ContractFunction):
    """ContractFunction for the deployTarget method."""

    def __call__(self, config: PoolConfig, adminController: str, arg3: bytes, salt: bytes) -> RsETHLineaTarget0DeployerDeployTargetContractFunction:  # type: ignore
        clone = super().__call__(
            dataclass_to_tuple(config),
            dataclass_to_tuple(adminController),
            dataclass_to_tuple(arg3),
            dataclass_to_tuple(salt),
        )
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # Define the expected return types from the smart contract call

        return_types = str

        # Call the function

        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )
        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class RsETHLineaTarget0DeployerRsETHPoolContractFunction(ContractFunction):
    """ContractFunction for the rsETHPool method."""

    def __call__(self) -> RsETHLineaTarget0DeployerRsETHPoolContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # Define the expected return types from the smart contract call

        return_types = str

        # Call the function

        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )
        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class RsETHLineaTarget0DeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the RsETHLineaTarget0Deployer contract."""

    deployTarget: RsETHLineaTarget0DeployerDeployTargetContractFunction

    rsETHPool: RsETHLineaTarget0DeployerRsETHPoolContractFunction

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployTarget = (
            RsETHLineaTarget0DeployerDeployTargetContractFunction.factory(
                "deployTarget",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="deployTarget",
            )
        )
        self.rsETHPool = (
            RsETHLineaTarget0DeployerRsETHPoolContractFunction.factory(
                "rsETHPool",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="rsETHPool",
            )
        )


rsethlineatarget0deployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_rsETHPool",
                    "type": "address",
                    "internalType": "contract IRSETHPoolV2",
                }
            ],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "deployTarget",
            "inputs": [
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {
                            "name": "baseToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "vaultSharesToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "linkerFactory",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "linkerCodeHash",
                            "type": "bytes32",
                            "internalType": "bytes32",
                        },
                        {
                            "name": "initialVaultSharePrice",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumShareReserves",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumTransactionAmount",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "circuitBreakerDelta",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "positionDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "checkpointDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "timeStretch",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "governance",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "feeCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "sweepCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "checkpointRewarder",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {
                                    "name": "curve",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "flat",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceLP",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceZombie",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "_adminController",
                    "type": "address",
                    "internalType": "contract IHyperdriveAdminController",
                },
                {"name": "", "type": "bytes", "internalType": "bytes"},
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [
                {"name": "", "type": "address", "internalType": "address"}
            ],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "rsETHPool",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IRSETHPoolV2",
                }
            ],
            "stateMutability": "view",
        },
    ],
)


class RsETHLineaTarget0DeployerContract(Contract):
    """A web3.py Contract class for the RsETHLineaTarget0Deployer contract."""

    abi: ABI = rsethlineatarget0deployer_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e6109a38561242b565b6040805160e084811b6001600160e01b03191682528351600483015260208401516024830152918301516044820152606083015160648201526080830151608482015260a083015160a482015260c083015160c48201529082015160e482015261010082015161010482015261012082015161012482015261014082015161014482015261016090910151610164820152610184016040805180830381865af4158015610a54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7891906136a8565b509050610a8581846125c1565b90505b604080516101e0810182526002546001600160801b038082168352600454600f81900b60208501526006546001600160701b036201000082041695850195909552600160801b9485900482166060850152918490048116608084015260a0830186905260c08301879052600354849004811660e0840152600554808216610100850152918490048116610120840152908390048116610140830152600754808216610160840152929092049091166101808201526000906101a081018415610b5957610b5484866125d6565b610b5c565b60005b81526003546001600160801b0316602091820152604051919250610b869161059491849101613154565b5050505090565b604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660208201526000916106019101610594565b6001600160a01b0381166000908152600e60209081526040808320548151928301526105a89101610594565b604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660208201526000916106019101610594565b610c45838383336123ab565b505050565b336000818152600c602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610cbe612cdf565b6106016040518061020001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ee8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0c91906136d8565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c415b95c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9c91906136d8565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166310780f736040518163ffffffff1660e01b8152600401602060405180830381865afa158015611008573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102c91906136d8565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f25964586040518163ffffffff1660e01b8152600401602060405180830381865afa158015611098573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110bc91906136d8565b6001600160a01b0316815260200160405180608001604052807f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f0000000000000000000000000000000000000000000000000000000000000000815250815250604051602001610594919061325b565b60006105a86107b0836125eb565b6000818152600b60209081526040808320548151928301526105a89101610594565b606060008267ffffffffffffffff8111156111cb576111cb6136f5565b6040519080825280602002602001820160405280156111f4578160200160208202803683370190505b50905060005b8381101561124d5760008585838181106112165761121661370b565b905060200201359050600081549050808484815181106112385761123861370b565b602090810291909101015250506001016111fa565b506112628160405160200161059491906133c3565b5092915050565b604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660208201526000916106019101610594565b600061060160095460405160200161059491815260200190565b60006105a86107b083612692565b60006105a86107b06113037f000000000000000000000000000000000000000000000000000000000000000085613682565b6126fc565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081018290526101608101919091526106016002604051602001610594919081546001600160801b038082168352608091821c602084015260018401548082166040850152821c60608401526002840154600f81900b83850152821c60a0840152600384015490811660c0840152811c60e083015260049092015460ff8082161515610100840152600882901c1615156101208301526001600160701b03601082901c1661014083015290911c6101608201526101800190565b8461141e816122ee565b6001600160a01b0316336001600160a01b03161461144f57604051632aab8bd360e01b815260040160405180910390fd5b6106858686868686611c7b565b6001600160a01b038281166000908152600c60209081526040808320938516835292815282822054835160ff909116151591810191909152909161079d9101610594565b60408051808201909152600080825260208201526040805180820182526007546001600160801b03808216808452600160801b909204811660209384019081528451938401929092529051169181019190915261060190606001610594565b606060f882901c6001600160f81b038316600061151b82612740565b9050600083600381111561153157611531613656565b03611563576040518060400160405280600d81526020016c048797065726472697665204c5609c1b815250935061161f565b600183600381111561157757611577613656565b036115a3578060405160200161158d9190613721565b604051602081830303815290604052935061161f565b60028360038111156115b7576115b7613656565b036115cd578060405160200161158d919061375a565b60038360038111156115e1576115e1613656565b0361161f576040518060400160405280601b81526020017f48797065726472697665205769746864726177616c205368617265000000000081525093505b505050919050565b80604051636e64089360e11b81526004016116429190612e2f565b60405180910390fd5b6116536127f5565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166310780f736040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d791906136d8565b9050336001600160a01b0382161480159061178557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561174b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176f91906136d8565b6001600160a01b0316336001600160a01b031614155b801561179757506117953361210b565b155b156117b4576040516282b42960e81b815260040160405180910390fd5b60006117be611e3c565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038516906370a0823190602401602060405180830381865afa158015611808573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182c9190613794565b90506118426001600160a01b038516848361281f565b8161184b611e3c565b14611869576040516313dd85ff60e31b815260040160405180910390fd5b836001600160a01b0316836001600160a01b03167f951f51ee88c8e42633698bba90d1e53c0954470938036879e691c0232b47e09660405160405180910390a35050506104786001600055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa158015611914573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193891906136d8565b6001600160a01b0316336001600160a01b03161415801561195f575061195d3361210b565b155b1561197c576040516282b42960e81b815260040160405180910390fd5b600680548215156101000261ff00199091161790556040517f7c4d1fe30fdbfda9e9c4c43e759ef32e4db5128d4cb58ff3ae9583b89b6242a5906119c590831515815260200190565b60405180910390a150565b834211156119f15760405163f87d927160e01b815260040160405180910390fd5b6001600160a01b038716611a185760405163f0dd15fd60e01b815260040160405180910390fd5b6001600160a01b038781166000818152600e602090815260408083205481518084018f905280830195909552948b166060850152891515608085015260a084019490945260c08084018990528451808503909101815260e08401909452835193019290922061190160f01b61010083015261010282018c90526101228201526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611b06573d6000803e3d6000fd5b505050602060405103519050886001600160a01b0316816001600160a01b031614611b4457604051638baa579f60e01b815260040160405180910390fd5b6001600160a01b038981166000818152600e6020908152604080832080546001019055600c8252808320948d1680845294825291829020805460ff19168c151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050505050505050505050565b6001600160a01b0386161580611be457506001600160a01b038516155b15611c025760405163f0dd15fd60e01b815260040160405180910390fd5b828114611c225760405163174861a760e31b815260040160405180910390fd5b60005b83811015611c7257611c6a858583818110611c4257611c4261370b565b905060200201358888868686818110611c5d57611c5d61370b565b9050602002013533611c7b565b600101611c25565b50505050505050565b6001600160a01b0384161580611c9857506001600160a01b038316155b15611cb65760405163f0dd15fd60e01b815260040160405180910390fd5b836001600160a01b0316816001600160a01b031614611d7a576001600160a01b038085166000908152600c602090815260408083209385168352929052205460ff16611d7a576000858152600d602090815260408083206001600160a01b03808916855290835281842090851684529091529020546000198114611d78576000868152600d602090815260408083206001600160a01b03808a168552908352818420908616845290915281208054859290611d72908490613695565b90915550505b505b6000858152600a602090815260408083206001600160a01b038816845290915281208054849290611dac908490613695565b90915550506000858152600a602090815260408083206001600160a01b038716845290915281208054849290611de3908490613682565b909155505060408051868152602081018490526001600160a01b038086169287821692918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611ea3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec79190613794565b905090565b6000611ed66127f5565b611edf82612871565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c415b95c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6391906136d8565b90506001600160a01b038116611f7c6020850185612e57565b6001600160a01b031614611fa357604051630ad13b3360e21b815260040160405180910390fd5b336001600160a01b0382161480159061204f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa158015612015573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061203991906136d8565b6001600160a01b0316336001600160a01b031614155b8015612061575061205f3361210b565b155b1561207e576040516282b42960e81b815260040160405180910390fd5b6000612088612418565b60098054600090915590915061209f8183876128a7565b93506001600160a01b0383167f3e5eb8642141e29a1b4e5c28b467396f814c1698e1adfc3ff327ddb9a603836185846120de60408a0160208b01612e82565b60408051938452602084019290925215159082015260600160405180910390a25050506105a86001600055565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a64c90bf6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561216c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261219491908101906137ad565b905060005b81518110156121e657836001600160a01b03168282815181106121be576121be61370b565b60200260200101516001600160a01b0316036121de575060019392505050565b600101612199565b5060009392505050565b606060f882901c6001600160f81b038316600061220c82612740565b9050600083600381111561222257612222613656565b03612254576040518060400160405280600d81526020016c0485950455244524956452d4c5609c1b815250935061161f565b600183600381111561226857612268613656565b0361227e578060405160200161158d9190613872565b600283600381111561229257612292613656565b036122a8578060405160200161158d91906138aa565b60038360038111156122bc576122bc613656565b0361161f57505060408051808201909152600d81526c485950455244524956452d575360981b60208201529392505050565b604080513060208083019190915281830193909352815180820383018152606080830184528151918501919091206001600160f81b031960808401527f000000000000000000000000000000000000000000000000000000000000000090911b6bffffffffffffffffffffffff1916608183015260958201527f000000000000000000000000000000000000000000000000000000000000000060b5808301919091528251808303909101815260d5909101909152805191012090565b6000848152600d602090815260408083206001600160a01b0385811680865291845282852090881680865290845293829020869055905185815290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050565b6000611ec7670de0b6b3a76400006125eb565b61248f6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e083015260035404821661010082015260055490916101208301916125879116612940565b81526004546001600160801b03600160801b91829004811660208401526005546040909301926125b992900416612940565b905292915050565b600061074b8383670de0b6b3a76400006129b6565b600061074b83670de0b6b3a7640000846129b6565b604051632b63dfd360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526024810182905260009073__$09f36fe1c8069bb875c0cd1810483af6f9$__90632b63dfd3906044015b602060405180830381865af415801561266e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079d9190613794565b6040516336e2794960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526024810182905260009073__$09f36fe1c8069bb875c0cd1810483af6f9$__906336e2794990604401612651565b6000612724600b60006127106002866129d4565b815260200190815260200160002054612a09565b612736600b60006127106001876129d4565b61079d91906138d6565b60408051604e80825260808201909252606091906000908260208201818036833701905050905060005b84156127e75761277b600a8661390c565b612786906030613682565b60f81b8260016127968487613695565b6127a09190613695565b815181106127b0576127b061370b565b60200101906001600160f81b031916908160001a905350806127d181613920565b91506127e09050600a86613939565b945061276a565b918290030190815292915050565b60026000540361281857604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610c45908490612a37565b60006128806020830183612e57565b6001600160a01b0316036104785760405163f0dd15fd60e01b815260040160405180910390fd5b6000806128b485856125c1565b90506128bf81612692565b9450846000036128d357600091505061074b565b8491506128e66040840160208501612e82565b156129155761290e856128fc6020860186612e57565b612909604087018761394d565b612a9a565b9150612938565b612938856129266020860186612e57565b612933604087018761394d565b612ab5565b509392505050565b600080670de0b6b3a7640000612954612b6d565b61295e9190613994565b905080831161296e576000612978565b6129788184613695565b915061074b6129af670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000613994565b83906125d6565b60008260001904841183021582026129cd57600080fd5b5091020490565b60006001600160f81b038211156129fe5760405163b7d0949760e01b815260040160405180910390fd5b5060f89190911b1790565b60006001600160ff1b03821115612a335760405163396ea70160e11b815260040160405180910390fd5b5090565b6000612a4c6001600160a01b03841683612b99565b90508051600014158015612a71575080806020019051810190612a6f91906139ab565b155b15610c4557604051635274afe760e01b81526001600160a01b0384166004820152602401611642565b600060405163350b944160e11b815260040160405180910390fd5b60405163a9059cbb60e01b81526001600160a01b038481166004830152602482018690526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015612b29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b4d91906139ab565b905080610842576040516312171d8360e31b815260040160405180910390fd5b6000611ec7427f0000000000000000000000000000000000000000000000000000000000000000612ba7565b606061074b83836000612bbd565b6000612bb3828461390c565b61074b9084613695565b606081471015612be25760405163cd78605960e01b8152306004820152602401611642565b600080856001600160a01b03168486604051612bfe91906139c8565b60006040518083038185875af1925050503d8060008114612c3b576040519150601f19603f3d011682016040523d82523d6000602084013e612c40565b606091505b5091509150612c50868383612c5a565b9695505050505050565b606082612c6f57612c6a82612cb6565b61074b565b8151158015612c8657506001600160a01b0384163b155b15612caf57604051639996b31560e01b81526001600160a01b0385166004820152602401611642565b508061074b565b805115612cc65780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60405180610200016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600080191681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001612dc16040518060800160405280600081526020016000815260200160008152602001600081525090565b905290565b600060208284031215612dd857600080fd5b5035919050565b60005b83811015612dfa578181015183820152602001612de2565b50506000910152565b60008151808452612e1b816020860160208601612ddf565b601f01601f19169290920160200192915050565b60208152600061074b6020830184612e03565b6001600160a01b038116811461047857600080fd5b600060208284031215612e6957600080fd5b813561074b81612e42565b801515811461047857600080fd5b600060208284031215612e9457600080fd5b813561074b81612e74565b60008060008060008060008060006101208a8c031215612ebe57600080fd5b8935985060208a0135975060408a0135612ed781612e42565b965060608a0135612ee781612e42565b955060808a0135612ef781612e74565b945060a08a0135935060c08a013560ff81168114612f1457600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008083601f840112612f4657600080fd5b50813567ffffffffffffffff811115612f5e57600080fd5b6020830191508360208260051b8501011115612f7957600080fd5b9250929050565b60008060008060008060808789031215612f9957600080fd5b8635612fa481612e42565b95506020870135612fb481612e42565b9450604087013567ffffffffffffffff80821115612fd157600080fd5b612fdd8a838b01612f34565b90965094506060890135915080821115612ff657600080fd5b5061300389828a01612f34565b979a9699509497509295939492505050565b6000806000806080858703121561302b57600080fd5b84359350602085013561303d81612e42565b9250604085013561304d81612e42565b9396929550929360600135925050565b60008060006060848603121561307257600080fd5b83359250602084013561308481612e42565b9150604084013561309481612e42565b809150509250925092565b600080604083850312156130b257600080fd5b8235915060208301356130c481612e42565b809150509250929050565b6000602082840312156130e157600080fd5b813567ffffffffffffffff8111156130f857600080fd5b82016060818503121561074b57600080fd5b6000806000806080858703121561312057600080fd5b84359350602085013561313281612e42565b925060408501359150606085013561314981612e42565b939692955090935050565b815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a080830151908201526101c091820151918101919091526101e00190565b6000806040838503121561320857600080fd5b823561321381612e42565b915060208301356130c481612e74565b60008060006060848603121561323857600080fd5b83359250602084013561324a81612e42565b929592945050506040919091013590565b81516001600160a01b031681526102608101602083015161328760208401826001600160a01b03169052565b5060408301516132a260408401826001600160a01b03169052565b50606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525061014080840151818401525061016080840151613314828501826001600160a01b03169052565b5050610180838101516001600160a01b03908116918401919091526101a0808501518216908401526101c080850151909116908301526101e0808401518051828501526020810151610200850152604081015161022085015260608101516102408501525b505092915050565b6000806020838503121561339457600080fd5b823567ffffffffffffffff8111156133ab57600080fd5b6133b785828601612f34565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b818110156133fb578351835292840192918401916001016133df565b50909695505050505050565b81516001600160801b031681526101808101602083015161343360208401826001600160801b03169052565b50604083015161344e60408401826001600160801b03169052565b50606083015161346960608401826001600160801b03169052565b50608083015161347e6080840182600f0b9052565b5060a083015161349960a08401826001600160801b03169052565b5060c08301516134b460c08401826001600160801b03169052565b5060e08301516134cf60e08401826001600160801b03169052565b506101008381015115159083015261012080840151151590830152610140808401516001600160701b031690830152610160808401516001600160801b03811682850152613379565b600080600080600060a0868803121561353057600080fd5b85359450602086013561354281612e42565b9350604086013561355281612e42565b925060608601359150608086013561356981612e42565b809150509295509295909350565b6000806040838503121561358a57600080fd5b823561359581612e42565b915060208301356130c481612e42565b60006020808352600084548160018260011c915060018316806135c957607f831692505b6020831081036135e757634e487b7160e01b85526022600452602485fd5b6020880183905260408801818015613606576001811461361c57613647565b60ff198616825284151560051b82019650613647565b60008b81526020902060005b8681101561364157815484820152908501908901613628565b83019750505b50949998505050505050505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561079d5761079d61366c565b8181038181111561079d5761079d61366c565b600080604083850312156136bb57600080fd5b8251915060208301516130c481612e74565b80516105a881612e42565b6000602082840312156136ea57600080fd5b815161074b81612e42565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b700243cb832b9323934bb32902637b7339d1607d1b81526000825161374d816011850160208701612ddf565b9190910160110192915050565b710243cb832b9323934bb329029b437b93a1d160751b815260008251613787816012850160208701612ddf565b9190910160120192915050565b6000602082840312156137a657600080fd5b5051919050565b600060208083850312156137c057600080fd5b825167ffffffffffffffff808211156137d857600080fd5b818501915085601f8301126137ec57600080fd5b8151818111156137fe576137fe6136f5565b8060051b604051601f19603f83011681018181108582111715613823576138236136f5565b60405291825284820192508381018501918883111561384157600080fd5b938501935b8285101561386657613857856136cd565b84529385019392850192613846565b98975050505050505050565b6f242ca822a9222924ab2296a627a7239d60811b81526000825161389d816010850160208701612ddf565b9190910160100192915050565b70242ca822a9222924ab2296a9a427a92a1d60791b81526000825161374d816011850160208701612ddf565b81810360008312801583831316838312821617156112625761126261366c565b634e487b7160e01b600052601260045260246000fd5b60008261391b5761391b6138f6565b500690565b6000600182016139325761393261366c565b5060010190565b600082613948576139486138f6565b500490565b6000808335601e1984360301811261396457600080fd5b83018035915067ffffffffffffffff82111561397f57600080fd5b602001915036819003821315612f7957600080fd5b808202811582820484141761079d5761079d61366c565b6000602082840312156139bd57600080fd5b815161074b81612e74565b600082516139da818460208701612ddf565b919091019291505056fea2646970667358221220ac20fd16d7fc666d0c31a67238a1871f4c341ab0f07e1642fb6b7608865744fa64736f6c63430008160033a26469706673582212202705874453d7a042991d378a4d7e8d4a1352d8232951b134279ad52251dbe34564736f6c63430008160033"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = RsETHLineaTarget0DeployerContractFunctions(rsethlineatarget0deployer_abi, self.w3, address)  # type: ignore

    functions: RsETHLineaTarget0DeployerContractFunctions

    class ConstructorArgs(NamedTuple):
        """Arguments to pass the contract's constructor function."""

        rsETHPool: str

    class LinkReferences(NamedTuple):
        """Link references required when deploying."""

        RsETHLineaConversions: RsETHLineaConversionsContract

        LPMath: LPMathContract

    link_references_placeholder_lookup: dict[str, str] = {
        "RsETHLineaConversions": "__$09f36fe1c8069bb875c0cd1810483af6f9$__",
        "LPMath": "__$2b4fa6f02a36eedfe41c65e8dd342257d3$__",
    }

    @classmethod
    def constructor(cls, rsETHPool: str, link_references: LinkReferences) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["RsETHLineaConversions"],
                link_references.RsETHLineaConversions.address[2:].lower(),
            )

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["LPMath"],
                link_references.LPMath.address[2:].lower(),
            )

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor(dataclass_to_tuple(rsETHPool))

    @classmethod
    def deploy(
        cls,
        w3: Web3,
        account: LocalAccount | ChecksumAddress,
        constructor_args: ConstructorArgs,
        link_references: LinkReferences,
    ) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor(
            *constructor_args, link_references
        )

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = RsETHLineaTarget0DeployerContractFunctions(
            rsethlineatarget0deployer_abi, w3, None
        )

        return contract
