"""A web3.py Contract class for the MorphoBlue_wstETH_USDA_HyperdriveTest contract.

DO NOT EDIT.  This file was generated by pypechain.  See documentation at
https://github.com/delvtech/pypechain"""

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overriden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long


from __future__ import annotations

from typing import Any, Iterable, NamedTuple, Sequence, Type, cast, overload

from eth_abi.codec import ABICodec
from eth_abi.registry import registry as default_registry
from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ABIFunction, ChecksumAddress, HexStr
from hexbytes import HexBytes
from typing_extensions import Self
from web3 import Web3
from web3._utils.filters import LogFilter
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractEvent,
    ContractEvents,
    ContractFunction,
    ContractFunctions,
)
from web3.types import BlockIdentifier, EventData, StateOverride, TxParams

from .LPMathContract import LPMathContract
from .MorphoBlueConversionsContract import MorphoBlueConversionsContract
from .StdInvariantTypes import FuzzInterface, FuzzSelector
from .utilities import (
    dataclass_to_tuple,
    get_abi_input_types,
    rename_returned_types,
)

structs = {
    "FuzzSelector": FuzzSelector,
    "FuzzInterface": FuzzInterface,
}


class MorphoBlue_wstETH_USDA_HyperdriveTestIS_TESTContractFunction(
    ContractFunction
):
    """ContractFunction for the IS_TEST method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestIS_TESTContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> bool:
        """returns bool."""
        # Define the expected return types from the smart contract call

        return_types = bool

        # Call the function

        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )
        return cast(
            bool, rename_returned_types(structs, return_types, raw_values)
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestCreateUserContractFunction(
    ContractFunction
):
    """ContractFunction for the createUser method."""

    def __call__(self, name: str) -> MorphoBlue_wstETH_USDA_HyperdriveTestCreateUserContractFunction:  # type: ignore
        clone = super().__call__(dataclass_to_tuple(name))
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # Define the expected return types from the smart contract call

        return_types = str

        # Call the function

        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )
        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestExcludeArtifactsContractFunction(
    ContractFunction
):
    """ContractFunction for the excludeArtifacts method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestExcludeArtifactsContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> list[str]:
        """returns list[str]."""
        # Define the expected return types from the smart contract call

        return_types = list[str]

        # Call the function

        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )
        return cast(
            list[str], rename_returned_types(structs, return_types, raw_values)
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestExcludeContractsContractFunction(
    ContractFunction
):
    """ContractFunction for the excludeContracts method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestExcludeContractsContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> list[str]:
        """returns list[str]."""
        # Define the expected return types from the smart contract call

        return_types = list[str]

        # Call the function

        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )
        return cast(
            list[str], rename_returned_types(structs, return_types, raw_values)
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestExcludeSendersContractFunction(
    ContractFunction
):
    """ContractFunction for the excludeSenders method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestExcludeSendersContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> list[str]:
        """returns list[str]."""
        # Define the expected return types from the smart contract call

        return_types = list[str]

        # Call the function

        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )
        return cast(
            list[str], rename_returned_types(structs, return_types, raw_values)
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestFailedContractFunction(
    ContractFunction
):
    """ContractFunction for the failed method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestFailedContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> bool:
        """returns bool."""
        # Define the expected return types from the smart contract call

        return_types = bool

        # Call the function

        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )
        return cast(
            bool, rename_returned_types(structs, return_types, raw_values)
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestSetUpContractFunction(
    ContractFunction
):
    """ContractFunction for the setUp method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestSetUpContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTargetArtifactSelectorsContractFunction(
    ContractFunction
):
    """ContractFunction for the targetArtifactSelectors method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestTargetArtifactSelectorsContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> list[FuzzSelector]:
        """returns list[FuzzSelector]."""
        # Define the expected return types from the smart contract call

        return_types = list[FuzzSelector]

        # Call the function

        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )
        return cast(
            list[FuzzSelector],
            rename_returned_types(structs, return_types, raw_values),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestTargetArtifactsContractFunction(
    ContractFunction
):
    """ContractFunction for the targetArtifacts method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestTargetArtifactsContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> list[str]:
        """returns list[str]."""
        # Define the expected return types from the smart contract call

        return_types = list[str]

        # Call the function

        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )
        return cast(
            list[str], rename_returned_types(structs, return_types, raw_values)
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestTargetContractsContractFunction(
    ContractFunction
):
    """ContractFunction for the targetContracts method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestTargetContractsContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> list[str]:
        """returns list[str]."""
        # Define the expected return types from the smart contract call

        return_types = list[str]

        # Call the function

        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )
        return cast(
            list[str], rename_returned_types(structs, return_types, raw_values)
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestTargetInterfacesContractFunction(
    ContractFunction
):
    """ContractFunction for the targetInterfaces method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestTargetInterfacesContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> list[FuzzInterface]:
        """returns list[FuzzInterface]."""
        # Define the expected return types from the smart contract call

        return_types = list[FuzzInterface]

        # Call the function

        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )
        return cast(
            list[FuzzInterface],
            rename_returned_types(structs, return_types, raw_values),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestTargetSelectorsContractFunction(
    ContractFunction
):
    """ContractFunction for the targetSelectors method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestTargetSelectorsContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> list[FuzzSelector]:
        """returns list[FuzzSelector]."""
        # Define the expected return types from the smart contract call

        return_types = list[FuzzSelector]

        # Call the function

        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )
        return cast(
            list[FuzzSelector],
            rename_returned_types(structs, return_types, raw_values),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestTargetSendersContractFunction(
    ContractFunction
):
    """ContractFunction for the targetSenders method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestTargetSendersContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> list[str]:
        """returns list[str]."""
        # Define the expected return types from the smart contract call

        return_types = list[str]

        # Call the function

        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )
        return cast(
            list[str], rename_returned_types(structs, return_types, raw_values)
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestTest__deployAndInitialize__asBaseContractFunction(
    ContractFunction
):
    """ContractFunction for the test__deployAndInitialize__asBase method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest__deployAndInitialize__asBaseContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest__deployAndInitialize__asSharesContractFunction(
    ContractFunction
):
    """ContractFunction for the test__deployAndInitialize__asShares method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest__deployAndInitialize__asSharesContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest__kindContractFunction(
    ContractFunction
):
    """ContractFunction for the test__kind method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest__kindContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest__nameContractFunction(
    ContractFunction
):
    """ContractFunction for the test__name method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest__nameContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest__pricePerVaultShareContractFunction(
    ContractFunction
):
    """ContractFunction for the test__pricePerVaultShare method."""

    def __call__(self, basePaid: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest__pricePerVaultShareContractFunction:  # type: ignore
        clone = super().__call__(dataclass_to_tuple(basePaid))
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest__versionContractFunction(
    ContractFunction
):
    """ContractFunction for the test__version method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest__versionContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_close_long_with_baseContractFunction(
    ContractFunction
):
    """ContractFunction for the test_close_long_with_base method."""

    def __call__(self, basePaid: int, variableRate: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_close_long_with_baseContractFunction:  # type: ignore
        clone = super().__call__(
            dataclass_to_tuple(basePaid), dataclass_to_tuple(variableRate)
        )
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_close_long_with_sharesContractFunction(
    ContractFunction
):
    """ContractFunction for the test_close_long_with_shares method."""

    def __call__(self, basePaid: int, variableRate: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_close_long_with_sharesContractFunction:  # type: ignore
        clone = super().__call__(
            dataclass_to_tuple(basePaid), dataclass_to_tuple(variableRate)
        )
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_close_short_with_baseContractFunction(
    ContractFunction
):
    """ContractFunction for the test_close_short_with_base method."""

    def __call__(self, shortAmount: int, variableRate: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_close_short_with_baseContractFunction:  # type: ignore
        clone = super().__call__(
            dataclass_to_tuple(shortAmount), dataclass_to_tuple(variableRate)
        )
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_close_short_with_sharesContractFunction(
    ContractFunction
):
    """ContractFunction for the test_close_short_with_shares method."""

    def __call__(self, shortAmount: int, variableRate: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_close_short_with_sharesContractFunction:  # type: ignore
        clone = super().__call__(
            dataclass_to_tuple(shortAmount), dataclass_to_tuple(variableRate)
        )
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_gettersContractFunction(
    ContractFunction
):
    """ContractFunction for the test_getters method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_gettersContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_long_with_baseContractFunction(
    ContractFunction
):
    """ContractFunction for the test_open_long_with_base method."""

    def __call__(self, basePaid: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_long_with_baseContractFunction:  # type: ignore
        clone = super().__call__(dataclass_to_tuple(basePaid))
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_long_with_ethContractFunction(
    ContractFunction
):
    """ContractFunction for the test_open_long_with_eth method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_long_with_ethContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_long_with_sharesContractFunction(
    ContractFunction
):
    """ContractFunction for the test_open_long_with_shares method."""

    def __call__(self, basePaid: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_long_with_sharesContractFunction:  # type: ignore
        clone = super().__call__(dataclass_to_tuple(basePaid))
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_short_with_baseContractFunction(
    ContractFunction
):
    """ContractFunction for the test_open_short_with_base method."""

    def __call__(self, shortAmount: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_short_with_baseContractFunction:  # type: ignore
        clone = super().__call__(dataclass_to_tuple(shortAmount))
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_short_with_ethContractFunction(
    ContractFunction
):
    """ContractFunction for the test_open_short_with_eth method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_short_with_ethContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_short_with_sharesContractFunction(
    ContractFunction
):
    """ContractFunction for the test_open_short_with_shares method."""

    def __call__(self, shortAmount: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_short_with_sharesContractFunction:  # type: ignore
        clone = super().__call__(dataclass_to_tuple(shortAmount))
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_long_instantaneous_with_baseContractFunction(
    ContractFunction
):
    """ContractFunction for the test_round_trip_long_instantaneous_with_base method."""

    def __call__(self, basePaid: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_long_instantaneous_with_baseContractFunction:  # type: ignore
        clone = super().__call__(dataclass_to_tuple(basePaid))
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_long_instantaneous_with_sharesContractFunction(
    ContractFunction
):
    """ContractFunction for the test_round_trip_long_instantaneous_with_shares method."""

    def __call__(self, vaultSharesPaid: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_long_instantaneous_with_sharesContractFunction:  # type: ignore
        clone = super().__call__(dataclass_to_tuple(vaultSharesPaid))
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_long_maturity_with_baseContractFunction(
    ContractFunction
):
    """ContractFunction for the test_round_trip_long_maturity_with_base method."""

    def __call__(self, basePaid: int, variableRate: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_long_maturity_with_baseContractFunction:  # type: ignore
        clone = super().__call__(
            dataclass_to_tuple(basePaid), dataclass_to_tuple(variableRate)
        )
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_long_maturity_with_sharesContractFunction(
    ContractFunction
):
    """ContractFunction for the test_round_trip_long_maturity_with_shares method."""

    def __call__(self, vaultSharesPaid: int, variableRate: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_long_maturity_with_sharesContractFunction:  # type: ignore
        clone = super().__call__(
            dataclass_to_tuple(vaultSharesPaid),
            dataclass_to_tuple(variableRate),
        )
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_lp_instantaneous_with_baseContractFunction(
    ContractFunction
):
    """ContractFunction for the test_round_trip_lp_instantaneous_with_base method."""

    def __call__(self, contribution: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_lp_instantaneous_with_baseContractFunction:  # type: ignore
        clone = super().__call__(dataclass_to_tuple(contribution))
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_lp_instantaneous_with_sharesContractFunction(
    ContractFunction
):
    """ContractFunction for the test_round_trip_lp_instantaneous_with_shares method."""

    def __call__(self, contribution: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_lp_instantaneous_with_sharesContractFunction:  # type: ignore
        clone = super().__call__(dataclass_to_tuple(contribution))
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_lp_withdrawal_shares_with_baseContractFunction(
    ContractFunction
):
    """ContractFunction for the test_round_trip_lp_withdrawal_shares_with_base method."""

    def __call__(self, contribution: int, variableRate: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_lp_withdrawal_shares_with_baseContractFunction:  # type: ignore
        clone = super().__call__(
            dataclass_to_tuple(contribution), dataclass_to_tuple(variableRate)
        )
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_lp_withdrawal_shares_with_sharesContractFunction(
    ContractFunction
):
    """ContractFunction for the test_round_trip_lp_withdrawal_shares_with_shares method."""

    def __call__(self, contribution: int, variableRate: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_lp_withdrawal_shares_with_sharesContractFunction:  # type: ignore
        clone = super().__call__(
            dataclass_to_tuple(contribution), dataclass_to_tuple(variableRate)
        )
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_short_instantaneous_with_baseContractFunction(
    ContractFunction
):
    """ContractFunction for the test_round_trip_short_instantaneous_with_base method."""

    def __call__(self, shortAmount: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_short_instantaneous_with_baseContractFunction:  # type: ignore
        clone = super().__call__(dataclass_to_tuple(shortAmount))
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_short_instantaneous_with_sharesContractFunction(
    ContractFunction
):
    """ContractFunction for the test_round_trip_short_instantaneous_with_shares method."""

    def __call__(self, shortAmount: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_short_instantaneous_with_sharesContractFunction:  # type: ignore
        clone = super().__call__(dataclass_to_tuple(shortAmount))
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_short_maturity_with_baseContractFunction(
    ContractFunction
):
    """ContractFunction for the test_round_trip_short_maturity_with_base method."""

    def __call__(self, shortAmount: int, variableRate: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_short_maturity_with_baseContractFunction:  # type: ignore
        clone = super().__call__(
            dataclass_to_tuple(shortAmount), dataclass_to_tuple(variableRate)
        )
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_short_maturity_with_sharesContractFunction(
    ContractFunction
):
    """ContractFunction for the test_round_trip_short_maturity_with_shares method."""

    def __call__(self, shortAmount: int, variableRate: int) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_short_maturity_with_sharesContractFunction:  # type: ignore
        clone = super().__call__(
            dataclass_to_tuple(shortAmount), dataclass_to_tuple(variableRate)
        )
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_sweep_failure_directSweepContractFunction(
    ContractFunction
):
    """ContractFunction for the test_sweep_failure_directSweep method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_sweep_failure_directSweepContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestTest_sweep_successContractFunction(
    ContractFunction
):
    """ContractFunction for the test_sweep_success method."""

    def __call__(self) -> MorphoBlue_wstETH_USDA_HyperdriveTestTest_sweep_successContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> None:
        """returns None."""
        # Define the expected return types from the smart contract call

        # Call the function


class MorphoBlue_wstETH_USDA_HyperdriveTestWhaleTransferContractFunction0(
    ContractFunction
):
    """ContractFunction for the whaleTransfer method."""

    def __call__(self, whale: str, token: str, to: str) -> MorphoBlue_wstETH_USDA_HyperdriveTestWhaleTransferContractFunction:  # type: ignore
        super().__call__(dataclass_to_tuple(whale), dataclass_to_tuple(token), dataclass_to_tuple(to))  # type: ignore
        return cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestWhaleTransferContractFunction,
            self,
        )

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> int:
        """returns int."""
        # Define the expected return types from the smart contract call

        return_types = int

        # Call the function
        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )

        return cast(
            int, rename_returned_types(structs, return_types, raw_values)
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestWhaleTransferContractFunction1(
    ContractFunction
):
    """ContractFunction for the whaleTransfer method."""

    def __call__(self, whale: str, token: str, amount: int, to: str) -> MorphoBlue_wstETH_USDA_HyperdriveTestWhaleTransferContractFunction:  # type: ignore
        super().__call__(dataclass_to_tuple(whale), dataclass_to_tuple(token), dataclass_to_tuple(amount), dataclass_to_tuple(to))  # type: ignore
        return cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestWhaleTransferContractFunction,
            self,
        )

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> int:
        """returns int."""
        # Define the expected return types from the smart contract call

        return_types = int

        # Call the function
        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )

        return cast(
            int, rename_returned_types(structs, return_types, raw_values)
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestWhaleTransferContractFunction(
    ContractFunction
):
    """ContractFunction for the whaleTransfer method."""

    # super() call methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ# disable this warning when there is overloading
    # pylint: disable=function-redefined

    @overload
    def __call__(self, whale: str, token: str, to: str) -> MorphoBlue_wstETH_USDA_HyperdriveTestWhaleTransferContractFunction0:  # type: ignore
        ...

    @overload
    def __call__(self, whale: str, token: str, amount: int, to: str) -> MorphoBlue_wstETH_USDA_HyperdriveTestWhaleTransferContractFunction1:  # type: ignore
        ...

    def __call__(self, *args) -> MorphoBlue_wstETH_USDA_HyperdriveTestWhaleTransferContractFunction:  # type: ignore
        clone = super().__call__(*(dataclass_to_tuple(arg) for arg in args))
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self  # type: ignore


class MorphoBlue_wstETH_USDA_HyperdriveTestContractFunctions(ContractFunctions):
    """ContractFunctions for the MorphoBlue_wstETH_USDA_HyperdriveTest contract."""

    IS_TEST: MorphoBlue_wstETH_USDA_HyperdriveTestIS_TESTContractFunction

    createUser: MorphoBlue_wstETH_USDA_HyperdriveTestCreateUserContractFunction

    excludeArtifacts: (
        MorphoBlue_wstETH_USDA_HyperdriveTestExcludeArtifactsContractFunction
    )

    excludeContracts: (
        MorphoBlue_wstETH_USDA_HyperdriveTestExcludeContractsContractFunction
    )

    excludeSenders: (
        MorphoBlue_wstETH_USDA_HyperdriveTestExcludeSendersContractFunction
    )

    failed: MorphoBlue_wstETH_USDA_HyperdriveTestFailedContractFunction

    setUp: MorphoBlue_wstETH_USDA_HyperdriveTestSetUpContractFunction

    targetArtifactSelectors: MorphoBlue_wstETH_USDA_HyperdriveTestTargetArtifactSelectorsContractFunction

    targetArtifacts: (
        MorphoBlue_wstETH_USDA_HyperdriveTestTargetArtifactsContractFunction
    )

    targetContracts: (
        MorphoBlue_wstETH_USDA_HyperdriveTestTargetContractsContractFunction
    )

    targetInterfaces: (
        MorphoBlue_wstETH_USDA_HyperdriveTestTargetInterfacesContractFunction
    )

    targetSelectors: (
        MorphoBlue_wstETH_USDA_HyperdriveTestTargetSelectorsContractFunction
    )

    targetSenders: (
        MorphoBlue_wstETH_USDA_HyperdriveTestTargetSendersContractFunction
    )

    test__deployAndInitialize__asBase: MorphoBlue_wstETH_USDA_HyperdriveTestTest__deployAndInitialize__asBaseContractFunction

    test__deployAndInitialize__asShares: MorphoBlue_wstETH_USDA_HyperdriveTestTest__deployAndInitialize__asSharesContractFunction

    test__kind: MorphoBlue_wstETH_USDA_HyperdriveTestTest__kindContractFunction

    test__name: MorphoBlue_wstETH_USDA_HyperdriveTestTest__nameContractFunction

    test__pricePerVaultShare: MorphoBlue_wstETH_USDA_HyperdriveTestTest__pricePerVaultShareContractFunction

    test__version: (
        MorphoBlue_wstETH_USDA_HyperdriveTestTest__versionContractFunction
    )

    test_close_long_with_base: MorphoBlue_wstETH_USDA_HyperdriveTestTest_close_long_with_baseContractFunction

    test_close_long_with_shares: MorphoBlue_wstETH_USDA_HyperdriveTestTest_close_long_with_sharesContractFunction

    test_close_short_with_base: MorphoBlue_wstETH_USDA_HyperdriveTestTest_close_short_with_baseContractFunction

    test_close_short_with_shares: MorphoBlue_wstETH_USDA_HyperdriveTestTest_close_short_with_sharesContractFunction

    test_getters: (
        MorphoBlue_wstETH_USDA_HyperdriveTestTest_gettersContractFunction
    )

    test_open_long_with_base: MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_long_with_baseContractFunction

    test_open_long_with_eth: MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_long_with_ethContractFunction

    test_open_long_with_shares: MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_long_with_sharesContractFunction

    test_open_short_with_base: MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_short_with_baseContractFunction

    test_open_short_with_eth: MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_short_with_ethContractFunction

    test_open_short_with_shares: MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_short_with_sharesContractFunction

    test_round_trip_long_instantaneous_with_base: MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_long_instantaneous_with_baseContractFunction

    test_round_trip_long_instantaneous_with_shares: MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_long_instantaneous_with_sharesContractFunction

    test_round_trip_long_maturity_with_base: MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_long_maturity_with_baseContractFunction

    test_round_trip_long_maturity_with_shares: MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_long_maturity_with_sharesContractFunction

    test_round_trip_lp_instantaneous_with_base: MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_lp_instantaneous_with_baseContractFunction

    test_round_trip_lp_instantaneous_with_shares: MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_lp_instantaneous_with_sharesContractFunction

    test_round_trip_lp_withdrawal_shares_with_base: MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_lp_withdrawal_shares_with_baseContractFunction

    test_round_trip_lp_withdrawal_shares_with_shares: MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_lp_withdrawal_shares_with_sharesContractFunction

    test_round_trip_short_instantaneous_with_base: MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_short_instantaneous_with_baseContractFunction

    test_round_trip_short_instantaneous_with_shares: MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_short_instantaneous_with_sharesContractFunction

    test_round_trip_short_maturity_with_base: MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_short_maturity_with_baseContractFunction

    test_round_trip_short_maturity_with_shares: MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_short_maturity_with_sharesContractFunction

    test_sweep_failure_directSweep: MorphoBlue_wstETH_USDA_HyperdriveTestTest_sweep_failure_directSweepContractFunction

    test_sweep_success: (
        MorphoBlue_wstETH_USDA_HyperdriveTestTest_sweep_successContractFunction
    )

    whaleTransfer: (
        MorphoBlue_wstETH_USDA_HyperdriveTestWhaleTransferContractFunction
    )

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.IS_TEST = MorphoBlue_wstETH_USDA_HyperdriveTestIS_TESTContractFunction.factory(
            "IS_TEST",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="IS_TEST",
        )
        self.createUser = MorphoBlue_wstETH_USDA_HyperdriveTestCreateUserContractFunction.factory(
            "createUser",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="createUser",
        )
        self.excludeArtifacts = MorphoBlue_wstETH_USDA_HyperdriveTestExcludeArtifactsContractFunction.factory(
            "excludeArtifacts",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="excludeArtifacts",
        )
        self.excludeContracts = MorphoBlue_wstETH_USDA_HyperdriveTestExcludeContractsContractFunction.factory(
            "excludeContracts",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="excludeContracts",
        )
        self.excludeSenders = MorphoBlue_wstETH_USDA_HyperdriveTestExcludeSendersContractFunction.factory(
            "excludeSenders",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="excludeSenders",
        )
        self.failed = (
            MorphoBlue_wstETH_USDA_HyperdriveTestFailedContractFunction.factory(
                "failed",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="failed",
            )
        )
        self.setUp = (
            MorphoBlue_wstETH_USDA_HyperdriveTestSetUpContractFunction.factory(
                "setUp",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="setUp",
            )
        )
        self.targetArtifactSelectors = MorphoBlue_wstETH_USDA_HyperdriveTestTargetArtifactSelectorsContractFunction.factory(
            "targetArtifactSelectors",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="targetArtifactSelectors",
        )
        self.targetArtifacts = MorphoBlue_wstETH_USDA_HyperdriveTestTargetArtifactsContractFunction.factory(
            "targetArtifacts",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="targetArtifacts",
        )
        self.targetContracts = MorphoBlue_wstETH_USDA_HyperdriveTestTargetContractsContractFunction.factory(
            "targetContracts",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="targetContracts",
        )
        self.targetInterfaces = MorphoBlue_wstETH_USDA_HyperdriveTestTargetInterfacesContractFunction.factory(
            "targetInterfaces",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="targetInterfaces",
        )
        self.targetSelectors = MorphoBlue_wstETH_USDA_HyperdriveTestTargetSelectorsContractFunction.factory(
            "targetSelectors",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="targetSelectors",
        )
        self.targetSenders = MorphoBlue_wstETH_USDA_HyperdriveTestTargetSendersContractFunction.factory(
            "targetSenders",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="targetSenders",
        )
        self.test__deployAndInitialize__asBase = MorphoBlue_wstETH_USDA_HyperdriveTestTest__deployAndInitialize__asBaseContractFunction.factory(
            "test__deployAndInitialize__asBase",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test__deployAndInitialize__asBase",
        )
        self.test__deployAndInitialize__asShares = MorphoBlue_wstETH_USDA_HyperdriveTestTest__deployAndInitialize__asSharesContractFunction.factory(
            "test__deployAndInitialize__asShares",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test__deployAndInitialize__asShares",
        )
        self.test__kind = MorphoBlue_wstETH_USDA_HyperdriveTestTest__kindContractFunction.factory(
            "test__kind",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test__kind",
        )
        self.test__name = MorphoBlue_wstETH_USDA_HyperdriveTestTest__nameContractFunction.factory(
            "test__name",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test__name",
        )
        self.test__pricePerVaultShare = MorphoBlue_wstETH_USDA_HyperdriveTestTest__pricePerVaultShareContractFunction.factory(
            "test__pricePerVaultShare",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test__pricePerVaultShare",
        )
        self.test__version = MorphoBlue_wstETH_USDA_HyperdriveTestTest__versionContractFunction.factory(
            "test__version",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test__version",
        )
        self.test_close_long_with_base = MorphoBlue_wstETH_USDA_HyperdriveTestTest_close_long_with_baseContractFunction.factory(
            "test_close_long_with_base",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_close_long_with_base",
        )
        self.test_close_long_with_shares = MorphoBlue_wstETH_USDA_HyperdriveTestTest_close_long_with_sharesContractFunction.factory(
            "test_close_long_with_shares",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_close_long_with_shares",
        )
        self.test_close_short_with_base = MorphoBlue_wstETH_USDA_HyperdriveTestTest_close_short_with_baseContractFunction.factory(
            "test_close_short_with_base",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_close_short_with_base",
        )
        self.test_close_short_with_shares = MorphoBlue_wstETH_USDA_HyperdriveTestTest_close_short_with_sharesContractFunction.factory(
            "test_close_short_with_shares",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_close_short_with_shares",
        )
        self.test_getters = MorphoBlue_wstETH_USDA_HyperdriveTestTest_gettersContractFunction.factory(
            "test_getters",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_getters",
        )
        self.test_open_long_with_base = MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_long_with_baseContractFunction.factory(
            "test_open_long_with_base",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_open_long_with_base",
        )
        self.test_open_long_with_eth = MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_long_with_ethContractFunction.factory(
            "test_open_long_with_eth",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_open_long_with_eth",
        )
        self.test_open_long_with_shares = MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_long_with_sharesContractFunction.factory(
            "test_open_long_with_shares",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_open_long_with_shares",
        )
        self.test_open_short_with_base = MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_short_with_baseContractFunction.factory(
            "test_open_short_with_base",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_open_short_with_base",
        )
        self.test_open_short_with_eth = MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_short_with_ethContractFunction.factory(
            "test_open_short_with_eth",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_open_short_with_eth",
        )
        self.test_open_short_with_shares = MorphoBlue_wstETH_USDA_HyperdriveTestTest_open_short_with_sharesContractFunction.factory(
            "test_open_short_with_shares",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_open_short_with_shares",
        )
        self.test_round_trip_long_instantaneous_with_base = MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_long_instantaneous_with_baseContractFunction.factory(
            "test_round_trip_long_instantaneous_with_base",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_round_trip_long_instantaneous_with_base",
        )
        self.test_round_trip_long_instantaneous_with_shares = MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_long_instantaneous_with_sharesContractFunction.factory(
            "test_round_trip_long_instantaneous_with_shares",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_round_trip_long_instantaneous_with_shares",
        )
        self.test_round_trip_long_maturity_with_base = MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_long_maturity_with_baseContractFunction.factory(
            "test_round_trip_long_maturity_with_base",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_round_trip_long_maturity_with_base",
        )
        self.test_round_trip_long_maturity_with_shares = MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_long_maturity_with_sharesContractFunction.factory(
            "test_round_trip_long_maturity_with_shares",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_round_trip_long_maturity_with_shares",
        )
        self.test_round_trip_lp_instantaneous_with_base = MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_lp_instantaneous_with_baseContractFunction.factory(
            "test_round_trip_lp_instantaneous_with_base",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_round_trip_lp_instantaneous_with_base",
        )
        self.test_round_trip_lp_instantaneous_with_shares = MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_lp_instantaneous_with_sharesContractFunction.factory(
            "test_round_trip_lp_instantaneous_with_shares",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_round_trip_lp_instantaneous_with_shares",
        )
        self.test_round_trip_lp_withdrawal_shares_with_base = MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_lp_withdrawal_shares_with_baseContractFunction.factory(
            "test_round_trip_lp_withdrawal_shares_with_base",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_round_trip_lp_withdrawal_shares_with_base",
        )
        self.test_round_trip_lp_withdrawal_shares_with_shares = MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_lp_withdrawal_shares_with_sharesContractFunction.factory(
            "test_round_trip_lp_withdrawal_shares_with_shares",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_round_trip_lp_withdrawal_shares_with_shares",
        )
        self.test_round_trip_short_instantaneous_with_base = MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_short_instantaneous_with_baseContractFunction.factory(
            "test_round_trip_short_instantaneous_with_base",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_round_trip_short_instantaneous_with_base",
        )
        self.test_round_trip_short_instantaneous_with_shares = MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_short_instantaneous_with_sharesContractFunction.factory(
            "test_round_trip_short_instantaneous_with_shares",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_round_trip_short_instantaneous_with_shares",
        )
        self.test_round_trip_short_maturity_with_base = MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_short_maturity_with_baseContractFunction.factory(
            "test_round_trip_short_maturity_with_base",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_round_trip_short_maturity_with_base",
        )
        self.test_round_trip_short_maturity_with_shares = MorphoBlue_wstETH_USDA_HyperdriveTestTest_round_trip_short_maturity_with_sharesContractFunction.factory(
            "test_round_trip_short_maturity_with_shares",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_round_trip_short_maturity_with_shares",
        )
        self.test_sweep_failure_directSweep = MorphoBlue_wstETH_USDA_HyperdriveTestTest_sweep_failure_directSweepContractFunction.factory(
            "test_sweep_failure_directSweep",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_sweep_failure_directSweep",
        )
        self.test_sweep_success = MorphoBlue_wstETH_USDA_HyperdriveTestTest_sweep_successContractFunction.factory(
            "test_sweep_success",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="test_sweep_success",
        )
        self.whaleTransfer = MorphoBlue_wstETH_USDA_HyperdriveTestWhaleTransferContractFunction.factory(
            "whaleTransfer",
            w3=w3,
            contract_abi=abi,
            address=address,
            decode_tuples=decode_tuples,
            abi_element_identifier="whaleTransfer",
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestAddLiquidityContractEvent(
    ContractEvent
):
    """ContractEvent for AddLiquidity."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestAddLiquidityContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestAddLiquidityContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestAddLiquidityContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestAddLiquidityContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestApprovalContractEvent(ContractEvent):
    """ContractEvent for Approval."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestApprovalContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type["MorphoBlue_wstETH_USDA_HyperdriveTestApprovalContractEvent"],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestApprovalContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type["MorphoBlue_wstETH_USDA_HyperdriveTestApprovalContractEvent"],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestApprovalForAllContractEvent(
    ContractEvent
):
    """ContractEvent for ApprovalForAll."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestApprovalForAllContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestApprovalForAllContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestApprovalForAllContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestApprovalForAllContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestCloseLongContractEvent(
    ContractEvent
):
    """ContractEvent for CloseLong."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestCloseLongContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestCloseLongContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestCloseLongContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestCloseLongContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestCloseShortContractEvent(
    ContractEvent
):
    """ContractEvent for CloseShort."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestCloseShortContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestCloseShortContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestCloseShortContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestCloseShortContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestCollectGovernanceFeeContractEvent(
    ContractEvent
):
    """ContractEvent for CollectGovernanceFee."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestCollectGovernanceFeeContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestCollectGovernanceFeeContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestCollectGovernanceFeeContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestCollectGovernanceFeeContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestCreateCheckpointContractEvent(
    ContractEvent
):
    """ContractEvent for CreateCheckpoint."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestCreateCheckpointContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestCreateCheckpointContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestCreateCheckpointContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestCreateCheckpointContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestDeployedContractEvent(ContractEvent):
    """ContractEvent for Deployed."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestDeployedContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type["MorphoBlue_wstETH_USDA_HyperdriveTestDeployedContractEvent"],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestDeployedContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type["MorphoBlue_wstETH_USDA_HyperdriveTestDeployedContractEvent"],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestInitializeContractEvent(
    ContractEvent
):
    """ContractEvent for Initialize."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestInitializeContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestInitializeContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestInitializeContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestInitializeContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestOpenLongContractEvent(ContractEvent):
    """ContractEvent for OpenLong."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestOpenLongContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type["MorphoBlue_wstETH_USDA_HyperdriveTestOpenLongContractEvent"],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestOpenLongContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type["MorphoBlue_wstETH_USDA_HyperdriveTestOpenLongContractEvent"],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestOpenShortContractEvent(
    ContractEvent
):
    """ContractEvent for OpenShort."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestOpenShortContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestOpenShortContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestOpenShortContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestOpenShortContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestPauseStatusUpdatedContractEvent(
    ContractEvent
):
    """ContractEvent for PauseStatusUpdated."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestPauseStatusUpdatedContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestPauseStatusUpdatedContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestPauseStatusUpdatedContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestPauseStatusUpdatedContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestRedeemWithdrawalSharesContractEvent(
    ContractEvent
):
    """ContractEvent for RedeemWithdrawalShares."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestRedeemWithdrawalSharesContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestRedeemWithdrawalSharesContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestRedeemWithdrawalSharesContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestRedeemWithdrawalSharesContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestRemoveLiquidityContractEvent(
    ContractEvent
):
    """ContractEvent for RemoveLiquidity."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestRemoveLiquidityContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestRemoveLiquidityContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestRemoveLiquidityContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestRemoveLiquidityContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestSweepContractEvent(ContractEvent):
    """ContractEvent for Sweep."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestSweepContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type["MorphoBlue_wstETH_USDA_HyperdriveTestSweepContractEvent"],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestSweepContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type["MorphoBlue_wstETH_USDA_HyperdriveTestSweepContractEvent"],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestTransferSingleContractEvent(
    ContractEvent
):
    """ContractEvent for TransferSingle."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestTransferSingleContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestTransferSingleContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestTransferSingleContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestTransferSingleContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLogContractEvent(ContractEvent):
    """ContractEvent for log."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLogContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type["MorphoBlue_wstETH_USDA_HyperdriveTestLogContractEvent"],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLogContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type["MorphoBlue_wstETH_USDA_HyperdriveTestLogContractEvent"],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLog_addressContractEvent(
    ContractEvent
):
    """ContractEvent for log_address."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_addressContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_addressContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_addressContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_addressContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLog_arrayContractEvent(
    ContractEvent
):
    """ContractEvent for log_array."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_arrayContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_arrayContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_arrayContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_arrayContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLog_bytesContractEvent(
    ContractEvent
):
    """ContractEvent for log_bytes."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_bytesContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_bytesContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_bytesContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_bytesContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLog_bytes32ContractEvent(
    ContractEvent
):
    """ContractEvent for log_bytes32."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_bytes32ContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_bytes32ContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_bytes32ContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_bytes32ContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLog_intContractEvent(ContractEvent):
    """ContractEvent for log_int."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_intContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type["MorphoBlue_wstETH_USDA_HyperdriveTestLog_intContractEvent"],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_intContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type["MorphoBlue_wstETH_USDA_HyperdriveTestLog_intContractEvent"],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_addressContractEvent(
    ContractEvent
):
    """ContractEvent for log_named_address."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_addressContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_addressContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_addressContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_addressContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_arrayContractEvent(
    ContractEvent
):
    """ContractEvent for log_named_array."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_arrayContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_arrayContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_arrayContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_arrayContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_bytesContractEvent(
    ContractEvent
):
    """ContractEvent for log_named_bytes."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_bytesContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_bytesContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_bytesContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_bytesContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_bytes32ContractEvent(
    ContractEvent
):
    """ContractEvent for log_named_bytes32."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_bytes32ContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_bytes32ContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_bytes32ContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_bytes32ContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_decimal_intContractEvent(
    ContractEvent
):
    """ContractEvent for log_named_decimal_int."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_decimal_intContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_decimal_intContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_decimal_intContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_decimal_intContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_decimal_uintContractEvent(
    ContractEvent
):
    """ContractEvent for log_named_decimal_uint."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_decimal_uintContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_decimal_uintContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_decimal_uintContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_decimal_uintContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_intContractEvent(
    ContractEvent
):
    """ContractEvent for log_named_int."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_intContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_intContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_intContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_intContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_stringContractEvent(
    ContractEvent
):
    """ContractEvent for log_named_string."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_stringContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_stringContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_stringContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_stringContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_uintContractEvent(
    ContractEvent
):
    """ContractEvent for log_named_uint."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_uintContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_uintContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_uintContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_uintContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLog_stringContractEvent(
    ContractEvent
):
    """ContractEvent for log_string."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_stringContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_stringContractEvent"
        ],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_stringContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLog_stringContractEvent"
        ],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLog_uintContractEvent(ContractEvent):
    """ContractEvent for log_uint."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_uintContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type["MorphoBlue_wstETH_USDA_HyperdriveTestLog_uintContractEvent"],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLog_uintContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type["MorphoBlue_wstETH_USDA_HyperdriveTestLog_uintContractEvent"],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestLogsContractEvent(ContractEvent):
    """ContractEvent for logs."""

    # super() get_logs and create_filter methods are generic, while our version adds values & types
    # pylint: disable=arguments-differ

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # pylint: disable=useless-parent-delegation
    def __init__(self, *argument_names: tuple[str]) -> None:
        super().__init__(*argument_names)

    def get_logs(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLogsContractEvent",
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    @classmethod
    def get_logs(  # type: ignore
        cls: Type["MorphoBlue_wstETH_USDA_HyperdriveTestLogsContractEvent"],
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier | None = None,
        block_hash: HexBytes | None = None,
    ) -> Iterable[EventData]:
        return cast(
            Iterable[EventData],
            super().get_logs(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                block_hash=block_hash,
            ),
        )

    def create_filter(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLogsContractEvent",
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )

    @classmethod
    def create_filter(  # type: ignore
        cls: Type["MorphoBlue_wstETH_USDA_HyperdriveTestLogsContractEvent"],
        *,  # PEP 3102
        argument_filters: dict[str, Any] | None = None,
        from_block: BlockIdentifier | None = None,
        to_block: BlockIdentifier = "latest",
        address: ChecksumAddress | None = None,
        topics: Sequence[Any] | None = None,
    ) -> LogFilter:
        return cast(
            LogFilter,
            super().create_filter(
                argument_filters=argument_filters,
                from_block=from_block,
                to_block=to_block,
                address=address,
                topics=topics,
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestContractEvents(ContractEvents):
    """ContractEvents for the MorphoBlue_wstETH_USDA_HyperdriveTest contract."""

    AddLiquidity: MorphoBlue_wstETH_USDA_HyperdriveTestAddLiquidityContractEvent

    Approval: MorphoBlue_wstETH_USDA_HyperdriveTestApprovalContractEvent

    ApprovalForAll: (
        MorphoBlue_wstETH_USDA_HyperdriveTestApprovalForAllContractEvent
    )

    CloseLong: MorphoBlue_wstETH_USDA_HyperdriveTestCloseLongContractEvent

    CloseShort: MorphoBlue_wstETH_USDA_HyperdriveTestCloseShortContractEvent

    CollectGovernanceFee: (
        MorphoBlue_wstETH_USDA_HyperdriveTestCollectGovernanceFeeContractEvent
    )

    CreateCheckpoint: (
        MorphoBlue_wstETH_USDA_HyperdriveTestCreateCheckpointContractEvent
    )

    Deployed: MorphoBlue_wstETH_USDA_HyperdriveTestDeployedContractEvent

    Initialize: MorphoBlue_wstETH_USDA_HyperdriveTestInitializeContractEvent

    OpenLong: MorphoBlue_wstETH_USDA_HyperdriveTestOpenLongContractEvent

    OpenShort: MorphoBlue_wstETH_USDA_HyperdriveTestOpenShortContractEvent

    PauseStatusUpdated: (
        MorphoBlue_wstETH_USDA_HyperdriveTestPauseStatusUpdatedContractEvent
    )

    RedeemWithdrawalShares: (
        MorphoBlue_wstETH_USDA_HyperdriveTestRedeemWithdrawalSharesContractEvent
    )

    RemoveLiquidity: (
        MorphoBlue_wstETH_USDA_HyperdriveTestRemoveLiquidityContractEvent
    )

    Sweep: MorphoBlue_wstETH_USDA_HyperdriveTestSweepContractEvent

    TransferSingle: (
        MorphoBlue_wstETH_USDA_HyperdriveTestTransferSingleContractEvent
    )

    log: MorphoBlue_wstETH_USDA_HyperdriveTestLogContractEvent

    log_address: MorphoBlue_wstETH_USDA_HyperdriveTestLog_addressContractEvent

    log_array: MorphoBlue_wstETH_USDA_HyperdriveTestLog_arrayContractEvent

    log_bytes: MorphoBlue_wstETH_USDA_HyperdriveTestLog_bytesContractEvent

    log_bytes32: MorphoBlue_wstETH_USDA_HyperdriveTestLog_bytes32ContractEvent

    log_int: MorphoBlue_wstETH_USDA_HyperdriveTestLog_intContractEvent

    log_named_address: (
        MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_addressContractEvent
    )

    log_named_array: (
        MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_arrayContractEvent
    )

    log_named_bytes: (
        MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_bytesContractEvent
    )

    log_named_bytes32: (
        MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_bytes32ContractEvent
    )

    log_named_decimal_int: (
        MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_decimal_intContractEvent
    )

    log_named_decimal_uint: (
        MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_decimal_uintContractEvent
    )

    log_named_int: (
        MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_intContractEvent
    )

    log_named_string: (
        MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_stringContractEvent
    )

    log_named_uint: (
        MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_uintContractEvent
    )

    log_string: MorphoBlue_wstETH_USDA_HyperdriveTestLog_stringContractEvent

    log_uint: MorphoBlue_wstETH_USDA_HyperdriveTestLog_uintContractEvent

    logs: MorphoBlue_wstETH_USDA_HyperdriveTestLogsContractEvent

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
    ) -> None:
        super().__init__(abi, w3, address)
        self.AddLiquidity = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestAddLiquidityContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestAddLiquidityContractEvent.factory(
                "AddLiquidity",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="AddLiquidity",
            ),
        )
        self.Approval = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestApprovalContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestApprovalContractEvent.factory(
                "Approval",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="Approval",
            ),
        )
        self.ApprovalForAll = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestApprovalForAllContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestApprovalForAllContractEvent.factory(
                "ApprovalForAll",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="ApprovalForAll",
            ),
        )
        self.CloseLong = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestCloseLongContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestCloseLongContractEvent.factory(
                "CloseLong",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="CloseLong",
            ),
        )
        self.CloseShort = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestCloseShortContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestCloseShortContractEvent.factory(
                "CloseShort",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="CloseShort",
            ),
        )
        self.CollectGovernanceFee = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestCollectGovernanceFeeContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestCollectGovernanceFeeContractEvent.factory(
                "CollectGovernanceFee",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="CollectGovernanceFee",
            ),
        )
        self.CreateCheckpoint = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestCreateCheckpointContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestCreateCheckpointContractEvent.factory(
                "CreateCheckpoint",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="CreateCheckpoint",
            ),
        )
        self.Deployed = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestDeployedContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestDeployedContractEvent.factory(
                "Deployed",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="Deployed",
            ),
        )
        self.Initialize = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestInitializeContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestInitializeContractEvent.factory(
                "Initialize",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="Initialize",
            ),
        )
        self.OpenLong = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestOpenLongContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestOpenLongContractEvent.factory(
                "OpenLong",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="OpenLong",
            ),
        )
        self.OpenShort = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestOpenShortContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestOpenShortContractEvent.factory(
                "OpenShort",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="OpenShort",
            ),
        )
        self.PauseStatusUpdated = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestPauseStatusUpdatedContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestPauseStatusUpdatedContractEvent.factory(
                "PauseStatusUpdated",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="PauseStatusUpdated",
            ),
        )
        self.RedeemWithdrawalShares = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestRedeemWithdrawalSharesContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestRedeemWithdrawalSharesContractEvent.factory(
                "RedeemWithdrawalShares",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="RedeemWithdrawalShares",
            ),
        )
        self.RemoveLiquidity = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestRemoveLiquidityContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestRemoveLiquidityContractEvent.factory(
                "RemoveLiquidity",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="RemoveLiquidity",
            ),
        )
        self.Sweep = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestSweepContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestSweepContractEvent.factory(
                "Sweep",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="Sweep",
            ),
        )
        self.TransferSingle = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestTransferSingleContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestTransferSingleContractEvent.factory(
                "TransferSingle",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="TransferSingle",
            ),
        )
        self.log = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLogContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLogContractEvent.factory(
                "log",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log",
            ),
        )
        self.log_address = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_addressContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_addressContractEvent.factory(
                "log_address",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log_address",
            ),
        )
        self.log_array = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_arrayContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_arrayContractEvent.factory(
                "log_array",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log_array",
            ),
        )
        self.log_bytes = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_bytesContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_bytesContractEvent.factory(
                "log_bytes",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log_bytes",
            ),
        )
        self.log_bytes32 = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_bytes32ContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_bytes32ContractEvent.factory(
                "log_bytes32",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log_bytes32",
            ),
        )
        self.log_int = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_intContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_intContractEvent.factory(
                "log_int",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log_int",
            ),
        )
        self.log_named_address = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_addressContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_addressContractEvent.factory(
                "log_named_address",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log_named_address",
            ),
        )
        self.log_named_array = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_arrayContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_arrayContractEvent.factory(
                "log_named_array",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log_named_array",
            ),
        )
        self.log_named_bytes = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_bytesContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_bytesContractEvent.factory(
                "log_named_bytes",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log_named_bytes",
            ),
        )
        self.log_named_bytes32 = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_bytes32ContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_bytes32ContractEvent.factory(
                "log_named_bytes32",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log_named_bytes32",
            ),
        )
        self.log_named_decimal_int = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_decimal_intContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_decimal_intContractEvent.factory(
                "log_named_decimal_int",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log_named_decimal_int",
            ),
        )
        self.log_named_decimal_uint = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_decimal_uintContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_decimal_uintContractEvent.factory(
                "log_named_decimal_uint",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log_named_decimal_uint",
            ),
        )
        self.log_named_int = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_intContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_intContractEvent.factory(
                "log_named_int",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log_named_int",
            ),
        )
        self.log_named_string = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_stringContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_stringContractEvent.factory(
                "log_named_string",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log_named_string",
            ),
        )
        self.log_named_uint = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_uintContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_named_uintContractEvent.factory(
                "log_named_uint",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log_named_uint",
            ),
        )
        self.log_string = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_stringContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_stringContractEvent.factory(
                "log_string",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log_string",
            ),
        )
        self.log_uint = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_uintContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLog_uintContractEvent.factory(
                "log_uint",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="log_uint",
            ),
        )
        self.logs = cast(
            MorphoBlue_wstETH_USDA_HyperdriveTestLogsContractEvent,
            MorphoBlue_wstETH_USDA_HyperdriveTestLogsContractEvent.factory(
                "logs",
                w3=w3,
                contract_abi=abi,
                address=address,
                event_name="logs",
            ),
        )


class MorphoBlue_wstETH_USDA_HyperdriveTestExpInvalidExponentContractError:
    """ContractError for ExpInvalidExponent."""

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # 4 byte error selector
    selector: str
    # error signature, i.e. CustomError(uint256,bool)
    signature: str

    # pylint: disable=useless-parent-delegation
    def __init__(
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestExpInvalidExponentContractError",
    ) -> None:
        self.selector = "0x73a2d6b1"
        self.signature = "ExpInvalidExponent()"

    def decode_error_data(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestExpInvalidExponentContractError",
        data: HexBytes,
        # TODO: instead of returning a tuple, return a dataclass with the input names and types just like we do for functions
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "ExpInvalidExponent"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded

    @classmethod
    def decode_error_data(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestExpInvalidExponentContractError"
        ],
        data: HexBytes,
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "ExpInvalidExponent"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded


class MorphoBlue_wstETH_USDA_HyperdriveTestInsufficientLiquidityContractError:
    """ContractError for InsufficientLiquidity."""

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # 4 byte error selector
    selector: str
    # error signature, i.e. CustomError(uint256,bool)
    signature: str

    # pylint: disable=useless-parent-delegation
    def __init__(
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestInsufficientLiquidityContractError",
    ) -> None:
        self.selector = "0xbb55fd27"
        self.signature = "InsufficientLiquidity()"

    def decode_error_data(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestInsufficientLiquidityContractError",
        data: HexBytes,
        # TODO: instead of returning a tuple, return a dataclass with the input names and types just like we do for functions
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "InsufficientLiquidity"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded

    @classmethod
    def decode_error_data(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestInsufficientLiquidityContractError"
        ],
        data: HexBytes,
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "InsufficientLiquidity"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded


class MorphoBlue_wstETH_USDA_HyperdriveTestInvalidTimestampContractError:
    """ContractError for InvalidTimestamp."""

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # 4 byte error selector
    selector: str
    # error signature, i.e. CustomError(uint256,bool)
    signature: str

    # pylint: disable=useless-parent-delegation
    def __init__(
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestInvalidTimestampContractError",
    ) -> None:
        self.selector = "0xb7d09497"
        self.signature = "InvalidTimestamp()"

    def decode_error_data(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestInvalidTimestampContractError",
        data: HexBytes,
        # TODO: instead of returning a tuple, return a dataclass with the input names and types just like we do for functions
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "InvalidTimestamp"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded

    @classmethod
    def decode_error_data(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestInvalidTimestampContractError"
        ],
        data: HexBytes,
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "InvalidTimestamp"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded


class MorphoBlue_wstETH_USDA_HyperdriveTestLnInvalidInputContractError:
    """ContractError for LnInvalidInput."""

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # 4 byte error selector
    selector: str
    # error signature, i.e. CustomError(uint256,bool)
    signature: str

    # pylint: disable=useless-parent-delegation
    def __init__(
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLnInvalidInputContractError",
    ) -> None:
        self.selector = "0xe61b4975"
        self.signature = "LnInvalidInput()"

    def decode_error_data(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestLnInvalidInputContractError",
        data: HexBytes,
        # TODO: instead of returning a tuple, return a dataclass with the input names and types just like we do for functions
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "LnInvalidInput"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded

    @classmethod
    def decode_error_data(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestLnInvalidInputContractError"
        ],
        data: HexBytes,
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "LnInvalidInput"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded


class MorphoBlue_wstETH_USDA_HyperdriveTestUnsafeCastToInt256ContractError:
    """ContractError for UnsafeCastToInt256."""

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # 4 byte error selector
    selector: str
    # error signature, i.e. CustomError(uint256,bool)
    signature: str

    # pylint: disable=useless-parent-delegation
    def __init__(
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestUnsafeCastToInt256ContractError",
    ) -> None:
        self.selector = "0x72dd4e02"
        self.signature = "UnsafeCastToInt256()"

    def decode_error_data(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestUnsafeCastToInt256ContractError",
        data: HexBytes,
        # TODO: instead of returning a tuple, return a dataclass with the input names and types just like we do for functions
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "UnsafeCastToInt256"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded

    @classmethod
    def decode_error_data(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestUnsafeCastToInt256ContractError"
        ],
        data: HexBytes,
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "UnsafeCastToInt256"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded


class MorphoBlue_wstETH_USDA_HyperdriveTestUnsafeCastToUint256ContractError:
    """ContractError for UnsafeCastToUint256."""

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # 4 byte error selector
    selector: str
    # error signature, i.e. CustomError(uint256,bool)
    signature: str

    # pylint: disable=useless-parent-delegation
    def __init__(
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestUnsafeCastToUint256ContractError",
    ) -> None:
        self.selector = "0xe3a26e20"
        self.signature = "UnsafeCastToUint256()"

    def decode_error_data(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestUnsafeCastToUint256ContractError",
        data: HexBytes,
        # TODO: instead of returning a tuple, return a dataclass with the input names and types just like we do for functions
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "UnsafeCastToUint256"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded

    @classmethod
    def decode_error_data(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestUnsafeCastToUint256ContractError"
        ],
        data: HexBytes,
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "UnsafeCastToUint256"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded


class MorphoBlue_wstETH_USDA_HyperdriveTestUnsupportedTokenContractError:
    """ContractError for UnsupportedToken."""

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # 4 byte error selector
    selector: str
    # error signature, i.e. CustomError(uint256,bool)
    signature: str

    # pylint: disable=useless-parent-delegation
    def __init__(
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestUnsupportedTokenContractError",
    ) -> None:
        self.selector = "0x6a172882"
        self.signature = "UnsupportedToken()"

    def decode_error_data(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestUnsupportedTokenContractError",
        data: HexBytes,
        # TODO: instead of returning a tuple, return a dataclass with the input names and types just like we do for functions
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "UnsupportedToken"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded

    @classmethod
    def decode_error_data(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestUnsupportedTokenContractError"
        ],
        data: HexBytes,
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "UnsupportedToken"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded


class MorphoBlue_wstETH_USDA_HyperdriveTestWhaleBalanceExceededContractError:
    """ContractError for WhaleBalanceExceeded."""

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # 4 byte error selector
    selector: str
    # error signature, i.e. CustomError(uint256,bool)
    signature: str

    # pylint: disable=useless-parent-delegation
    def __init__(
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestWhaleBalanceExceededContractError",
    ) -> None:
        self.selector = "0xc4649d28"
        self.signature = "WhaleBalanceExceeded()"

    def decode_error_data(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestWhaleBalanceExceededContractError",
        data: HexBytes,
        # TODO: instead of returning a tuple, return a dataclass with the input names and types just like we do for functions
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "WhaleBalanceExceeded"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded

    @classmethod
    def decode_error_data(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestWhaleBalanceExceededContractError"
        ],
        data: HexBytes,
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "WhaleBalanceExceeded"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded


class MorphoBlue_wstETH_USDA_HyperdriveTestWhaleIsContractContractError:
    """ContractError for WhaleIsContract."""

    # @combomethod destroys return types, so we are redefining functions as both class and instance
    # pylint: disable=function-redefined

    # 4 byte error selector
    selector: str
    # error signature, i.e. CustomError(uint256,bool)
    signature: str

    # pylint: disable=useless-parent-delegation
    def __init__(
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestWhaleIsContractContractError",
    ) -> None:
        self.selector = "0x98d85a67"
        self.signature = "WhaleIsContract()"

    def decode_error_data(  # type: ignore
        self: "MorphoBlue_wstETH_USDA_HyperdriveTestWhaleIsContractContractError",
        data: HexBytes,
        # TODO: instead of returning a tuple, return a dataclass with the input names and types just like we do for functions
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "WhaleIsContract"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded

    @classmethod
    def decode_error_data(  # type: ignore
        cls: Type[
            "MorphoBlue_wstETH_USDA_HyperdriveTestWhaleIsContractContractError"
        ],
        data: HexBytes,
    ) -> tuple[Any, ...]:
        """Decodes error data returns from a smart contract."""
        error_abi = cast(
            ABIFunction,
            [
                item
                for item in morphoblue_wsteth_usda_hyperdrivetest_abi
                if item.get("name") == "WhaleIsContract"
                and item.get("type") == "error"
            ][0],
        )
        types = get_abi_input_types(error_abi)
        abi_codec = ABICodec(default_registry)
        decoded = abi_codec.decode(types, data)
        return decoded


class MorphoBlue_wstETH_USDA_HyperdriveTestContractErrors:
    """ContractErrors for the MorphoBlue_wstETH_USDA_HyperdriveTest contract."""

    ExpInvalidExponent: (
        MorphoBlue_wstETH_USDA_HyperdriveTestExpInvalidExponentContractError
    )

    InsufficientLiquidity: (
        MorphoBlue_wstETH_USDA_HyperdriveTestInsufficientLiquidityContractError
    )

    InvalidTimestamp: (
        MorphoBlue_wstETH_USDA_HyperdriveTestInvalidTimestampContractError
    )

    LnInvalidInput: (
        MorphoBlue_wstETH_USDA_HyperdriveTestLnInvalidInputContractError
    )

    UnsafeCastToInt256: (
        MorphoBlue_wstETH_USDA_HyperdriveTestUnsafeCastToInt256ContractError
    )

    UnsafeCastToUint256: (
        MorphoBlue_wstETH_USDA_HyperdriveTestUnsafeCastToUint256ContractError
    )

    UnsupportedToken: (
        MorphoBlue_wstETH_USDA_HyperdriveTestUnsupportedTokenContractError
    )

    WhaleBalanceExceeded: (
        MorphoBlue_wstETH_USDA_HyperdriveTestWhaleBalanceExceededContractError
    )

    WhaleIsContract: (
        MorphoBlue_wstETH_USDA_HyperdriveTestWhaleIsContractContractError
    )

    def __init__(
        self,
    ) -> None:
        self.ExpInvalidExponent = (
            MorphoBlue_wstETH_USDA_HyperdriveTestExpInvalidExponentContractError()
        )
        self.InsufficientLiquidity = (
            MorphoBlue_wstETH_USDA_HyperdriveTestInsufficientLiquidityContractError()
        )
        self.InvalidTimestamp = (
            MorphoBlue_wstETH_USDA_HyperdriveTestInvalidTimestampContractError()
        )
        self.LnInvalidInput = (
            MorphoBlue_wstETH_USDA_HyperdriveTestLnInvalidInputContractError()
        )
        self.UnsafeCastToInt256 = (
            MorphoBlue_wstETH_USDA_HyperdriveTestUnsafeCastToInt256ContractError()
        )
        self.UnsafeCastToUint256 = (
            MorphoBlue_wstETH_USDA_HyperdriveTestUnsafeCastToUint256ContractError()
        )
        self.UnsupportedToken = (
            MorphoBlue_wstETH_USDA_HyperdriveTestUnsupportedTokenContractError()
        )
        self.WhaleBalanceExceeded = (
            MorphoBlue_wstETH_USDA_HyperdriveTestWhaleBalanceExceededContractError()
        )
        self.WhaleIsContract = (
            MorphoBlue_wstETH_USDA_HyperdriveTestWhaleIsContractContractError()
        )

        self._all = [
            self.ExpInvalidExponent,
            self.InsufficientLiquidity,
            self.InvalidTimestamp,
            self.LnInvalidInput,
            self.UnsafeCastToInt256,
            self.UnsafeCastToUint256,
            self.UnsupportedToken,
            self.WhaleBalanceExceeded,
            self.WhaleIsContract,
        ]

    def decode_custom_error(self, data: str) -> tuple[Any, ...]:
        """Decodes a custom contract error."""
        selector = data[:10]
        for err in self._all:
            if err.selector == selector:
                return err.decode_error_data(HexBytes(data[10:]))

        raise ValueError(
            f"MorphoBlue_wstETH_USDA_HyperdriveTest does not have a selector matching {selector}"
        )


morphoblue_wsteth_usda_hyperdrivetest_abi: ABI = cast(
    ABI,
    [
        {"type": "constructor", "inputs": [], "stateMutability": "nonpayable"},
        {
            "type": "function",
            "name": "IS_TEST",
            "inputs": [],
            "outputs": [{"name": "", "type": "bool", "internalType": "bool"}],
            "stateMutability": "view",
        },
        {
            "type": "function",
            "name": "createUser",
            "inputs": [
                {"name": "name", "type": "string", "internalType": "string"}
            ],
            "outputs": [
                {"name": "_user", "type": "address", "internalType": "address"}
            ],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "excludeArtifacts",
            "inputs": [],
            "outputs": [
                {
                    "name": "excludedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]",
                }
            ],
            "stateMutability": "view",
        },
        {
            "type": "function",
            "name": "excludeContracts",
            "inputs": [],
            "outputs": [
                {
                    "name": "excludedContracts_",
                    "type": "address[]",
                    "internalType": "address[]",
                }
            ],
            "stateMutability": "view",
        },
        {
            "type": "function",
            "name": "excludeSenders",
            "inputs": [],
            "outputs": [
                {
                    "name": "excludedSenders_",
                    "type": "address[]",
                    "internalType": "address[]",
                }
            ],
            "stateMutability": "view",
        },
        {
            "type": "function",
            "name": "failed",
            "inputs": [],
            "outputs": [{"name": "", "type": "bool", "internalType": "bool"}],
            "stateMutability": "view",
        },
        {
            "type": "function",
            "name": "setUp",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "targetArtifactSelectors",
            "inputs": [],
            "outputs": [
                {
                    "name": "targetedArtifactSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                        {
                            "name": "addr",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "selectors",
                            "type": "bytes4[]",
                            "internalType": "bytes4[]",
                        },
                    ],
                }
            ],
            "stateMutability": "view",
        },
        {
            "type": "function",
            "name": "targetArtifacts",
            "inputs": [],
            "outputs": [
                {
                    "name": "targetedArtifacts_",
                    "type": "string[]",
                    "internalType": "string[]",
                }
            ],
            "stateMutability": "view",
        },
        {
            "type": "function",
            "name": "targetContracts",
            "inputs": [],
            "outputs": [
                {
                    "name": "targetedContracts_",
                    "type": "address[]",
                    "internalType": "address[]",
                }
            ],
            "stateMutability": "view",
        },
        {
            "type": "function",
            "name": "targetInterfaces",
            "inputs": [],
            "outputs": [
                {
                    "name": "targetedInterfaces_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzInterface[]",
                    "components": [
                        {
                            "name": "addr",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "artifacts",
                            "type": "string[]",
                            "internalType": "string[]",
                        },
                    ],
                }
            ],
            "stateMutability": "view",
        },
        {
            "type": "function",
            "name": "targetSelectors",
            "inputs": [],
            "outputs": [
                {
                    "name": "targetedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                        {
                            "name": "addr",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "selectors",
                            "type": "bytes4[]",
                            "internalType": "bytes4[]",
                        },
                    ],
                }
            ],
            "stateMutability": "view",
        },
        {
            "type": "function",
            "name": "targetSenders",
            "inputs": [],
            "outputs": [
                {
                    "name": "targetedSenders_",
                    "type": "address[]",
                    "internalType": "address[]",
                }
            ],
            "stateMutability": "view",
        },
        {
            "type": "function",
            "name": "test__deployAndInitialize__asBase",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test__deployAndInitialize__asShares",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test__kind",
            "inputs": [],
            "outputs": [],
            "stateMutability": "view",
        },
        {
            "type": "function",
            "name": "test__name",
            "inputs": [],
            "outputs": [],
            "stateMutability": "view",
        },
        {
            "type": "function",
            "name": "test__pricePerVaultShare",
            "inputs": [
                {
                    "name": "basePaid",
                    "type": "uint256",
                    "internalType": "uint256",
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test__version",
            "inputs": [],
            "outputs": [],
            "stateMutability": "view",
        },
        {
            "type": "function",
            "name": "test_close_long_with_base",
            "inputs": [
                {
                    "name": "basePaid",
                    "type": "uint256",
                    "internalType": "uint256",
                },
                {
                    "name": "variableRate",
                    "type": "int256",
                    "internalType": "int256",
                },
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_close_long_with_shares",
            "inputs": [
                {
                    "name": "basePaid",
                    "type": "uint256",
                    "internalType": "uint256",
                },
                {
                    "name": "variableRate",
                    "type": "int256",
                    "internalType": "int256",
                },
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_close_short_with_base",
            "inputs": [
                {
                    "name": "shortAmount",
                    "type": "uint256",
                    "internalType": "uint256",
                },
                {
                    "name": "variableRate",
                    "type": "int256",
                    "internalType": "int256",
                },
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_close_short_with_shares",
            "inputs": [
                {
                    "name": "shortAmount",
                    "type": "uint256",
                    "internalType": "uint256",
                },
                {
                    "name": "variableRate",
                    "type": "int256",
                    "internalType": "int256",
                },
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_getters",
            "inputs": [],
            "outputs": [],
            "stateMutability": "view",
        },
        {
            "type": "function",
            "name": "test_open_long_with_base",
            "inputs": [
                {
                    "name": "basePaid",
                    "type": "uint256",
                    "internalType": "uint256",
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_open_long_with_eth",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_open_long_with_shares",
            "inputs": [
                {
                    "name": "basePaid",
                    "type": "uint256",
                    "internalType": "uint256",
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_open_short_with_base",
            "inputs": [
                {
                    "name": "shortAmount",
                    "type": "uint256",
                    "internalType": "uint256",
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_open_short_with_eth",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_open_short_with_shares",
            "inputs": [
                {
                    "name": "shortAmount",
                    "type": "uint256",
                    "internalType": "uint256",
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_round_trip_long_instantaneous_with_base",
            "inputs": [
                {
                    "name": "_basePaid",
                    "type": "uint256",
                    "internalType": "uint256",
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_round_trip_long_instantaneous_with_shares",
            "inputs": [
                {
                    "name": "_vaultSharesPaid",
                    "type": "uint256",
                    "internalType": "uint256",
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_round_trip_long_maturity_with_base",
            "inputs": [
                {
                    "name": "_basePaid",
                    "type": "uint256",
                    "internalType": "uint256",
                },
                {
                    "name": "_variableRate",
                    "type": "uint256",
                    "internalType": "uint256",
                },
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_round_trip_long_maturity_with_shares",
            "inputs": [
                {
                    "name": "_vaultSharesPaid",
                    "type": "uint256",
                    "internalType": "uint256",
                },
                {
                    "name": "_variableRate",
                    "type": "uint256",
                    "internalType": "uint256",
                },
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_round_trip_lp_instantaneous_with_base",
            "inputs": [
                {
                    "name": "_contribution",
                    "type": "uint256",
                    "internalType": "uint256",
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_round_trip_lp_instantaneous_with_shares",
            "inputs": [
                {
                    "name": "_contribution",
                    "type": "uint256",
                    "internalType": "uint256",
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_round_trip_lp_withdrawal_shares_with_base",
            "inputs": [
                {
                    "name": "_contribution",
                    "type": "uint256",
                    "internalType": "uint256",
                },
                {
                    "name": "_variableRate",
                    "type": "uint256",
                    "internalType": "uint256",
                },
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_round_trip_lp_withdrawal_shares_with_shares",
            "inputs": [
                {
                    "name": "_contribution",
                    "type": "uint256",
                    "internalType": "uint256",
                },
                {
                    "name": "_variableRate",
                    "type": "uint256",
                    "internalType": "uint256",
                },
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_round_trip_short_instantaneous_with_base",
            "inputs": [
                {
                    "name": "_shortAmount",
                    "type": "uint256",
                    "internalType": "uint256",
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_round_trip_short_instantaneous_with_shares",
            "inputs": [
                {
                    "name": "_shortAmount",
                    "type": "uint256",
                    "internalType": "uint256",
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_round_trip_short_maturity_with_base",
            "inputs": [
                {
                    "name": "_shortAmount",
                    "type": "uint256",
                    "internalType": "uint256",
                },
                {
                    "name": "_variableRate",
                    "type": "uint256",
                    "internalType": "uint256",
                },
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_round_trip_short_maturity_with_shares",
            "inputs": [
                {
                    "name": "_shortAmount",
                    "type": "uint256",
                    "internalType": "uint256",
                },
                {
                    "name": "_variableRate",
                    "type": "int256",
                    "internalType": "int256",
                },
            ],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_sweep_failure_directSweep",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "test_sweep_success",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "whaleTransfer",
            "inputs": [
                {"name": "whale", "type": "address", "internalType": "address"},
                {
                    "name": "token",
                    "type": "address",
                    "internalType": "contract IERC20",
                },
                {"name": "to", "type": "address", "internalType": "address"},
            ],
            "outputs": [
                {"name": "", "type": "uint256", "internalType": "uint256"}
            ],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "whaleTransfer",
            "inputs": [
                {"name": "whale", "type": "address", "internalType": "address"},
                {
                    "name": "token",
                    "type": "address",
                    "internalType": "contract IERC20",
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256",
                },
                {"name": "to", "type": "address", "internalType": "address"},
            ],
            "outputs": [
                {"name": "", "type": "uint256", "internalType": "uint256"}
            ],
            "stateMutability": "nonpayable",
        },
        {
            "type": "event",
            "name": "AddLiquidity",
            "inputs": [
                {
                    "name": "provider",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "lpAmount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "vaultSharePrice",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "asBase",
                    "type": "bool",
                    "indexed": False,
                    "internalType": "bool",
                },
                {
                    "name": "lpSharePrice",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "extraData",
                    "type": "bytes",
                    "indexed": False,
                    "internalType": "bytes",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "ApprovalForAll",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "approved",
                    "type": "bool",
                    "indexed": False,
                    "internalType": "bool",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "CloseLong",
            "inputs": [
                {
                    "name": "trader",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "destination",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "assetId",
                    "type": "uint256",
                    "indexed": True,
                    "internalType": "uint256",
                },
                {
                    "name": "maturityTime",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "vaultSharePrice",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "asBase",
                    "type": "bool",
                    "indexed": False,
                    "internalType": "bool",
                },
                {
                    "name": "bondAmount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "extraData",
                    "type": "bytes",
                    "indexed": False,
                    "internalType": "bytes",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "CloseShort",
            "inputs": [
                {
                    "name": "trader",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "destination",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "assetId",
                    "type": "uint256",
                    "indexed": True,
                    "internalType": "uint256",
                },
                {
                    "name": "maturityTime",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "vaultSharePrice",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "asBase",
                    "type": "bool",
                    "indexed": False,
                    "internalType": "bool",
                },
                {
                    "name": "basePayment",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "bondAmount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "extraData",
                    "type": "bytes",
                    "indexed": False,
                    "internalType": "bytes",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "CollectGovernanceFee",
            "inputs": [
                {
                    "name": "collector",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "vaultSharePrice",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "asBase",
                    "type": "bool",
                    "indexed": False,
                    "internalType": "bool",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "CreateCheckpoint",
            "inputs": [
                {
                    "name": "checkpointTime",
                    "type": "uint256",
                    "indexed": True,
                    "internalType": "uint256",
                },
                {
                    "name": "checkpointVaultSharePrice",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "vaultSharePrice",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "maturedShorts",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "maturedLongs",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "lpSharePrice",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "Deployed",
            "inputs": [
                {
                    "name": "deployerCoordinator",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "hyperdrive",
                    "type": "address",
                    "indexed": False,
                    "internalType": "address",
                },
                {
                    "name": "name",
                    "type": "string",
                    "indexed": False,
                    "internalType": "string",
                },
                {
                    "name": "config",
                    "type": "tuple",
                    "indexed": False,
                    "internalType": "struct IHyperdrive.PoolDeployConfig",
                    "components": [
                        {
                            "name": "baseToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "vaultSharesToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "linkerFactory",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "linkerCodeHash",
                            "type": "bytes32",
                            "internalType": "bytes32",
                        },
                        {
                            "name": "minimumShareReserves",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumTransactionAmount",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "circuitBreakerDelta",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "positionDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "checkpointDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "timeStretch",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "governance",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "feeCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "sweepCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "checkpointRewarder",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {
                                    "name": "curve",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "flat",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceLP",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceZombie",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "extraData",
                    "type": "bytes",
                    "indexed": False,
                    "internalType": "bytes",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "Initialize",
            "inputs": [
                {
                    "name": "provider",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "lpAmount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "vaultSharePrice",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "asBase",
                    "type": "bool",
                    "indexed": False,
                    "internalType": "bool",
                },
                {
                    "name": "apr",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "extraData",
                    "type": "bytes",
                    "indexed": False,
                    "internalType": "bytes",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "OpenLong",
            "inputs": [
                {
                    "name": "trader",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "assetId",
                    "type": "uint256",
                    "indexed": True,
                    "internalType": "uint256",
                },
                {
                    "name": "maturityTime",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "vaultSharePrice",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "asBase",
                    "type": "bool",
                    "indexed": False,
                    "internalType": "bool",
                },
                {
                    "name": "bondAmount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "extraData",
                    "type": "bytes",
                    "indexed": False,
                    "internalType": "bytes",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "OpenShort",
            "inputs": [
                {
                    "name": "trader",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "assetId",
                    "type": "uint256",
                    "indexed": True,
                    "internalType": "uint256",
                },
                {
                    "name": "maturityTime",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "vaultSharePrice",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "asBase",
                    "type": "bool",
                    "indexed": False,
                    "internalType": "bool",
                },
                {
                    "name": "baseProceeds",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "bondAmount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "extraData",
                    "type": "bytes",
                    "indexed": False,
                    "internalType": "bytes",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "PauseStatusUpdated",
            "inputs": [
                {
                    "name": "isPaused",
                    "type": "bool",
                    "indexed": False,
                    "internalType": "bool",
                }
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "RedeemWithdrawalShares",
            "inputs": [
                {
                    "name": "provider",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "destination",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "withdrawalShareAmount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "vaultSharePrice",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "asBase",
                    "type": "bool",
                    "indexed": False,
                    "internalType": "bool",
                },
                {
                    "name": "extraData",
                    "type": "bytes",
                    "indexed": False,
                    "internalType": "bytes",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "RemoveLiquidity",
            "inputs": [
                {
                    "name": "provider",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "destination",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "lpAmount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "vaultSharePrice",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "asBase",
                    "type": "bool",
                    "indexed": False,
                    "internalType": "bool",
                },
                {
                    "name": "withdrawalShareAmount",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "lpSharePrice",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "extraData",
                    "type": "bytes",
                    "indexed": False,
                    "internalType": "bytes",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "Sweep",
            "inputs": [
                {
                    "name": "collector",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "target",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "TransferSingle",
            "inputs": [
                {
                    "name": "operator",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "from",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": True,
                    "internalType": "address",
                },
                {
                    "name": "id",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log",
            "inputs": [
                {
                    "name": "",
                    "type": "string",
                    "indexed": False,
                    "internalType": "string",
                }
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_address",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "indexed": False,
                    "internalType": "address",
                }
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_array",
            "inputs": [
                {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": False,
                    "internalType": "uint256[]",
                }
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_array",
            "inputs": [
                {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": False,
                    "internalType": "int256[]",
                }
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_array",
            "inputs": [
                {
                    "name": "val",
                    "type": "address[]",
                    "indexed": False,
                    "internalType": "address[]",
                }
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_bytes",
            "inputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "indexed": False,
                    "internalType": "bytes",
                }
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_bytes32",
            "inputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "indexed": False,
                    "internalType": "bytes32",
                }
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_int",
            "inputs": [
                {
                    "name": "",
                    "type": "int256",
                    "indexed": False,
                    "internalType": "int256",
                }
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_named_address",
            "inputs": [
                {
                    "name": "key",
                    "type": "string",
                    "indexed": False,
                    "internalType": "string",
                },
                {
                    "name": "val",
                    "type": "address",
                    "indexed": False,
                    "internalType": "address",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_named_array",
            "inputs": [
                {
                    "name": "key",
                    "type": "string",
                    "indexed": False,
                    "internalType": "string",
                },
                {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": False,
                    "internalType": "uint256[]",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_named_array",
            "inputs": [
                {
                    "name": "key",
                    "type": "string",
                    "indexed": False,
                    "internalType": "string",
                },
                {
                    "name": "val",
                    "type": "int256[]",
                    "indexed": False,
                    "internalType": "int256[]",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_named_array",
            "inputs": [
                {
                    "name": "key",
                    "type": "string",
                    "indexed": False,
                    "internalType": "string",
                },
                {
                    "name": "val",
                    "type": "address[]",
                    "indexed": False,
                    "internalType": "address[]",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_named_bytes",
            "inputs": [
                {
                    "name": "key",
                    "type": "string",
                    "indexed": False,
                    "internalType": "string",
                },
                {
                    "name": "val",
                    "type": "bytes",
                    "indexed": False,
                    "internalType": "bytes",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_named_bytes32",
            "inputs": [
                {
                    "name": "key",
                    "type": "string",
                    "indexed": False,
                    "internalType": "string",
                },
                {
                    "name": "val",
                    "type": "bytes32",
                    "indexed": False,
                    "internalType": "bytes32",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_named_decimal_int",
            "inputs": [
                {
                    "name": "key",
                    "type": "string",
                    "indexed": False,
                    "internalType": "string",
                },
                {
                    "name": "val",
                    "type": "int256",
                    "indexed": False,
                    "internalType": "int256",
                },
                {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_named_decimal_uint",
            "inputs": [
                {
                    "name": "key",
                    "type": "string",
                    "indexed": False,
                    "internalType": "string",
                },
                {
                    "name": "val",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
                {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_named_int",
            "inputs": [
                {
                    "name": "key",
                    "type": "string",
                    "indexed": False,
                    "internalType": "string",
                },
                {
                    "name": "val",
                    "type": "int256",
                    "indexed": False,
                    "internalType": "int256",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_named_string",
            "inputs": [
                {
                    "name": "key",
                    "type": "string",
                    "indexed": False,
                    "internalType": "string",
                },
                {
                    "name": "val",
                    "type": "string",
                    "indexed": False,
                    "internalType": "string",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_named_uint",
            "inputs": [
                {
                    "name": "key",
                    "type": "string",
                    "indexed": False,
                    "internalType": "string",
                },
                {
                    "name": "val",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                },
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_string",
            "inputs": [
                {
                    "name": "",
                    "type": "string",
                    "indexed": False,
                    "internalType": "string",
                }
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "log_uint",
            "inputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "indexed": False,
                    "internalType": "uint256",
                }
            ],
            "anonymous": False,
        },
        {
            "type": "event",
            "name": "logs",
            "inputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "indexed": False,
                    "internalType": "bytes",
                }
            ],
            "anonymous": False,
        },
        {"type": "error", "name": "ExpInvalidExponent", "inputs": []},
        {"type": "error", "name": "InsufficientLiquidity", "inputs": []},
        {"type": "error", "name": "InvalidTimestamp", "inputs": []},
        {"type": "error", "name": "LnInvalidInput", "inputs": []},
        {"type": "error", "name": "UnsafeCastToInt256", "inputs": []},
        {"type": "error", "name": "UnsafeCastToUint256", "inputs": []},
        {"type": "error", "name": "UnsupportedToken", "inputs": []},
        {"type": "error", "name": "WhaleBalanceExceeded", "inputs": []},
        {"type": "error", "name": "WhaleIsContract", "inputs": []},
    ],
)


class MorphoBlue_wstETH_USDA_HyperdriveTestContract(Contract):
    """A web3.py Contract class for the MorphoBlue_wstETH_USDA_HyperdriveTest contract."""

    abi: ABI = morphoblue_wsteth_usda_hyperdrivetest_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "$04b283107449142c3a86c88d1d4ad5a326$__966349124ca396620099d2966001600160a01b0393841696928416959184169490841693909216918b90600401620121a1565b602060405180830381865af4158015620099f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009962919062011b13565b601e546040516303223eab60e11b81526101009091046001600160a01b03166004820152600080516020620522a7833981519152906306447d5690602401600060405180830381600087803b15801562009a6f57600080fd5b505af115801562009a84573d6000803e3d6000fd5b5050505060005b606f60009054906101000a90046001600160a01b03166001600160a01b031663e99be3966040518163ffffffff1660e01b8152600401602060405180830381865afa15801562009adf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009b05919062011b13565b81101562009bb457606e54606f546001600160a01b03918216916349f13de791889116605c62009b346200a15e565b66b1a2bc2ec5000080888c6040518963ffffffff1660e01b815260040162009b64989796959493929190620122d2565b6020604051808303816000875af115801562009b84573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009baa919062011fcb565b5060010162009a8b565b5080801562009be157507f0000000000000000000000000000000000000000000000000000000000000000155b1562009c6c57603b54606f5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262009c1f92911690869060040162011feb565b6020604051808303816000875af115801562009c3f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009c65919062012015565b5062009d4d565b8015801562009c7e575060475460ff16155b1562009cbc57603c54606f5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262009c1f92911690869060040162011feb565b8062009d4d57603c54606f546001600160a01b039182169163095ea7b3911662009ce6856200b8d8565b6040518363ffffffff1660e01b815260040162009d0592919062011feb565b6020604051808303816000875af115801562009d25573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009d4b919062012015565b505b60455460ff1615801562009d5e5750805b1562009e0957600080516020620522a783398151915263c31eb0e07f000000000000000000000000000000000000000000000000000000000000000062009dad5763350b944160e11b62009db6565b631574f9f360e01b5b6040518263ffffffff1660e01b815260040162009dd4919062011fb6565b600060405180830381600087803b15801562009def57600080fd5b505af115801562009e04573d6000803e3d6000fd5b505050505b604554610100900460ff1615801562009e20575080155b1562009e9657604051630618f58760e51b8152600080516020620522a78339815191529063c31eb0e09062009e619063350b944160e11b9060040162011fb6565b600060405180830381600087803b15801562009e7c57600080fd5b505af115801562009e91573d6000803e3d6000fd5b505050505b601e54606e546001600160a01b036101009092048216319116632e7cd97183801562009edf57507f00000000000000000000000000000000000000000000000000000000000000005b62009eec57600062009ef9565b62009ef985600262011c51565b606f5488906001600160a01b03166036605c62009f156200a15e565b60408051606081018252601e5461010090046001600160a01b031681528b151560208201528c9166b1a2bc2ec50000918291810160006040519080825280601f01601f19166020018201604052801562009f76576020820181803683370190505b508152508f6040518c63ffffffff1660e01b815260040162009fa29a9998979695949392919062012339565b60206040518083038185885af115801562009fc1573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062009fe8919062011fcb565b603480546001600160a01b0319166001600160a01b039290921691909117905560455460ff1680156200a0185750815b80156200a04257507f00000000000000000000000000000000000000000000000000000000000000005b156200a076576200a0706200a058848362011c98565b601e5461010090046001600160a01b0316316200a090565b62002806565b601e546200280690829061010090046001600160a01b0316315b60405163260a5b1560e21b81526004810183905260248101829052600080516020620522a7833981519152906398296c54906044015b60006040518083038186803b1580156200a0df57600080fd5b505afa158015620069ba573d6000803e3d6000fd5b604051630b6903e360e11b8152600481018490526024810183905260448101829052600080516020620522a7833981519152906316d207c69060640160006040518083038186803b1580156200a14957600080fd5b505afa158015620022ac573d6000803e3d6000fd5b604080516070546001600160a01b0390811660208301526071548116828401526072548116606083015260735416608082015260745460a0808301919091528251808303909101815260c090910190915290565b6000600080516020620522c783398151915260001c6001600160a01b031663191553a46040518163ffffffff1660e01b81526004016000604051808303816000875af11580156200a207573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200a2319190810190620123f7565b905060006200a261827fb25b0f0f93209be08152122f1321f6b0ef559a93a67695fff5fea3e5ed2344656200d363565b90506200a271815160016200a090565b6200a2db816000815181106200a28b576200a28b6201218b565b6020026020010151600001516000815181106200a2ac576200a2ac6201218b565b60200260200101517fb25b0f0f93209be08152122f1321f6b0ef559a93a67695fff5fea3e5ed2344656200c164565b6200a331816000815181106200a2f5576200a2f56201218b565b6020026020010151600001516001815181106200a316576200a3166201218b565b602002602001015160001c8c6001600160a01b03166200a090565b600080600080846000815181106200a34d576200a34d6201218b565b6020026020010151602001518060200190518101906200a36e919062012570565b93509350935093506200a382848f6200c120565b6200a3f6838f6001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200a3c6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200a3f09190810190620120ba565b6200bab9565b60008e6001600160a01b031663b0d965806040518163ffffffff1660e01b815260040161026060405180830381865afa1580156200a438573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a45e919062011d4e565b835181519192506200a470916200c120565b6200a484836020015182602001516200c120565b6200a498836040015182604001516200c120565b6200a4ac836060015182606001516200c164565b6200a4c083608001518260a001516200a090565b6200a4d48360a001518260c001516200a090565b6200a4e98360e001518261010001516200a090565b6200a4ff8361010001518261012001516200a090565b6200a5158361012001518261014001516200a090565b6200a52b8361014001518261016001516200c120565b6200a5418361016001518261018001516200c120565b6101c0830151516101e0820151516200a55b91906200a090565b6200a579836101c0015160200151826101e00151602001516200a090565b6200a597836101c0015160400151826101e00151604001516200a090565b6200a5b5836101c0015160600151826101e00151606001516200a090565b6200a611826040516020016200a5cc919062012033565b604051602081830303815290604052805190602001208a6040516020016200a5f5919062012033565b604051602081830303815290604052805190602001206200c164565b50505050505060006200a645827f4931b9953a65531203c17d9abe77870a3e49d8b13af522ec3321c18b5abb8af36200d363565b90506200a655815160016200a090565b6200a6bf816000815181106200a66f576200a66f6201218b565b6020026020010151600001516000815181106200a690576200a6906201218b565b60200260200101517f4931b9953a65531203c17d9abe77870a3e49d8b13af522ec3321c18b5abb8af36200c164565b6200a70c816000815181106200a6d9576200a6d96201218b565b6020026020010151600001516001815181106200a6fa576200a6fa6201218b565b602002602001015160001c8a6200c120565b60008a90506000806000806000866000815181106200a72f576200a72f6201218b565b6020026020010151602001518060200190518101906200a750919062012705565b9398509196509450925090508d8c156200a805576200a7ff866200a7768e600262011c51565b6200a7ec8a6001600160a01b031663b0d965806040518163ffffffff1660e01b815260040161026060405180830381865afa1580156200a7ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a7e0919062011d4e565b6080015185906200bbe3565b6200a7f8919062011c98565b8c6200a0f4565b6200a823565b6200a823866200a8178e600262011c51565b6200a7f8908462011c98565b6200a82f85826200a090565b6200a8a884886001600160a01b031663b0d965806040518163ffffffff1660e01b815260040161026060405180830381865afa1580156200a874573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a89a919062011d4e565b60800151620186a06200a0f4565b6200a8b4838e6200d485565b6200a8c0828f6200a090565b505050505050505050505050505050505050565b6000620099628260076200d4c2565b6000818311156200a92c5760405162461bcd60e51b815260206004820152600e60248201526d098d2c47440dad2dc407c40dac2f60931b60448201526064015b60405180910390fd5b60006200a93a848462011c98565b6200a94790600162011f1f565b905060006200a957828762012751565b90506200a965858262011f1f565b9695505050505050565b6000806200aa0685856040518060e001604052808715158152602001896001600160a01b0316815260200160006001600160401b038111156200a9b6576200a9b6620117ab565b6040519080825280601f01601f1916602001820160405280156200a9e1576020820181803683370190505b508152602001888152602001600081526020018881526020016000198152506200d6c5565b915091505b935093915050565b600080516020620522a783398151915263e5d6bf026200aa34844262011f1f565b6040518263ffffffff1660e01b81526004016200aa5391815260200190565b600060405180830381600087803b1580156200aa6e57600080fd5b505af11580156200aa83573d6000803e3d6000fd5b50506040805160a08082018352603b546001600160a01b0390811683526071548116602084015260725481168385015260735481166060840152607454608084015291206070548351632e3071cd60e11b81526004810183905293519195506000945090911691635c60e39a9160248083019260c09291908290030181865afa1580156200ab15573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200ab3b919062012780565b80519091506000906200ab59906001600160801b031685876200c1ff565b50905060008360036040516020016200ab7f92919091825260ff16602082015260400190565b60408051808303601f19018152908290528051602091820120607054918601516370ca10bb60e01b84526001600160a01b0390921660048401526024830181905260809190911b6001600160801b031916841760448301529150600080516020620522a7833981519152906370ca10bb90606401600060405180830381600087803b1580156200ac0e57600080fd5b505af11580156200ac23573d6000803e3d6000fd5b5050607054600080516020620522a783398151915292506370ca10bb91506001600160a01b03166200ac5784600262011f1f565b60a087015160405160e085901b6001600160e01b03191681526001600160a01b03909316600484015260248301919091524260809190911b6001600160801b031916176044820152606401600060405180830381600087803b1580156200acbd57600080fd5b505af11580156200acd2573d6000803e3d6000fd5b5050607054620069ba92506001600160a01b03169050836200dafe565b6040805160a081018252603b546001600160a01b039081168252607154811660208301526072548116928201929092526073548216606082015260745460808201526070546000928392839283926200ad4b929116906200bc97565b5091969095509350505050565b6200ad7d60405180606001604052806000815260200160008152602001600081525090565b6000806200ad8b846200bfbe565b6040805160608101825291825260208201929092526001600160a01b039095163190850152509192915050565b60006200ae3b858585604051806080016040528087151581526020018a6001600160a01b0316815260200160006001600160401b038111156200adff576200adff620117ab565b6040519080825280601f01601f1916602001820160405280156200ae2a576020820181803683370190505b50815260200160008152506200dbb5565b95945050505050565b60006200995f8383670de0b6b3a76400006200c101565b604051638466f41560e01b81526004810183905260248101829052600080516020620522a783398151915290638466f415906044016200a0c6565b60408051608081018252600181526001600160a01b038516602082015260009162000830918691869186918101866200adff565b846200aee95760405163350b944160e11b815260040160405180910390fd5b6040805160a081018252603b546001600160a01b0390811682526071548116602083015260725481169282019290925260735482166060820152607454608082015260705460009283926200af4292909116906200bc97565b5050915091506200af638289886200af5b919062011c98565b60016200a0f4565b6034546040516363737ac960e11b8152600481018a90526200afee9183916001600160a01b039091169063c6e6f59290602401602060405180830381865afa1580156200afb4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200afda919062011b13565b6200afe6908862011c98565b60036200a0f4565b60345460408401516200b00c916001600160a01b031631906200a090565b601f5460408501516200b02a916001600160a01b031631906200a090565b603b546034546040516370a0823160e01b81526001600160a01b0391821660048201526200b0b19291909116906370a0823190602401602060405180830381865afa1580156200b07e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b0a4919062011b13565b846020015160016200a0f4565b603b546040516370a0823160e01b81526001600160a01b038b811660048301526200b1379216906370a0823190602401602060405180830381865afa1580156200b0ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b125919062011b13565b898660200151620009fa919062011f1f565b6034546000906200b151906001600160a01b03166200bfbe565b91505060006200b1618b6200bfbe565b6034546040516363737ac960e11b8152600481018e90529193506200b1ea925084916001600160a01b039091169063c6e6f59290602401602060405180830381865afa1580156200b1b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b1dc919062011b13565b87516200afe6919062011c98565b6200723281876000015160016200a0f4565b60006200083084846040518060e001604052808615158152602001886001600160a01b0316815260200160006001600160401b038111156200b242576200b242620117ab565b6040519080825280601f01601f1916602001820160405280156200b26d576020820181803683370190505b50815260200187815260200160008152602001600081526020016000198152506200dd2e565b6000806200aa06858560405180608001604052808715158152602001896001600160a01b0316815260200160006001600160401b038111156200b2da576200b2da620117ab565b6040519080825280601f01601f1916602001820160405280156200b305576020820181803683370190505b50815260200160008152506200e108565b60408051608081018252600181526001600160a01b038416602082015260009182916200b34a91869186918101856200b2da565b915091505b9250929050565b6000620099628260076200e27f565b6000806200aa0685856040518060e001604052808715158152602001896001600160a01b0316815260200160006001600160401b038111156200b3ac576200b3ac620117ab565b6040519080825280601f01601f1916602001820160405280156200b3d7576020820181803683370190505b5081526020018881526020016000815260200160008152602001888152506200e478565b60006200ae3b858585604051806080016040528087151581526020018a6001600160a01b0316815260200160006001600160401b038111156200b442576200b442620117ab565b6040519080825280601f01601f1916602001820160405280156200b46d576020820181803683370190505b50815260200160008152506200e8f9565b60405163b12fc00560e01b81526004810183905260248101829052600080516020620522a78339815191529063b12fc005906044016200a0c6565b60408051608081018252600181526001600160a01b038516602082015260009162000830918691869186918101866200b442565b60006001600160f81b038211156200b5185760405163b7d0949760e01b815260040160405180910390fd5b5060f89190911b1790565b846200b5425760405163350b944160e11b815260040160405180910390fd5b6040805160a081018252603b546001600160a01b0390811682526071548116602083015260725481169282019290925260735482166060820152607454608082015260705460009283926200b59b92909116906200bc97565b5050915091506200b5b48289886200af5b919062011f1f565b6034546040516363737ac960e11b8152600481018a90526200b6379183916001600160a01b039091169063c6e6f59290602401602060405180830381865afa1580156200b605573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b62b919062011b13565b6200af5b908862011f1f565b60345460408401516200b655916001600160a01b031631906200a090565b601f5460408501516200b673916001600160a01b031631906200a090565b603b546034546040516370a0823160e01b81526001600160a01b0391821660048201526200b6f89291909116906370a0823190602401602060405180830381865afa1580156200b6c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b6ed919062011b13565b84602001516200a090565b603b546040516370a0823160e01b81526001600160a01b038b811660048301526200b77e9216906370a0823190602401602060405180830381865afa1580156200b746573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b76c919062011b13565b898660200151620009fa919062011c98565b6034546000906200b798906001600160a01b03166200bfbe565b91505060006200b7a88b6200bfbe565b6034546040516363737ac960e11b8152600481018e90529193506200b831925084916001600160a01b039091169063c6e6f59290602401602060405180830381865afa1580156200b7fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b823919062011b13565b87516200afe6919062011f1f565b620072328187600001516200a090565b6000818313156200b8865760405162461bcd60e51b815260206004820152600e60248201526d098d2c47440dad2dc407c40dac2f60931b60448201526064016200a923565b60006200b89484846201282e565b6200b8a190600162012851565b905060006200b8b182876201287c565b905060008112156200b8cc576200b8c9828262012851565b90505b6200a965858262012851565b607054603b546071546072546073546074546040516303c2063f60e41b815260009673__$04b283107449142c3a86c88d1d4ad5a326$__96633c2063f096620099d2966001600160a01b0393841696928416959184169490841693909216918b90600401620121a1565b604051636d83fe6960e11b81526004810183905260248101829052600080516020620522a78339815191529063db07fcd2906044016200a0c6565b6000816001600160a01b031663b0d965806040518163ffffffff1660e01b815260040161026060405180830381865afa1580156200b9bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200b9e5919062011d4e565b61012001516200b9f6904262012751565b62009962904262011c98565b6000806200aa06858560405180608001604052808715158152602001896001600160a01b0316815260200160006001600160401b038111156200ba49576200ba49620117ab565b6040519080825280601f01601f1916602001820160405280156200ba74576020820181803683370190505b50815260200160008152506200ea2c565b60408051608081018252600181526001600160a01b038416602082015260009182916200b34a91869186918101856200ba49565b60405163f320d96360e01b8152600080516020620522a78339815191529063f320d963906200a0c6908590859060040162012893565b6040805160e081018252600181526001600160a01b038416602080830191909152825160008082529181018452909283926200b34a928792879291908201908152602001878152602001600081526020018781526020016000198152506200d6c5565b6000670de0b6b3a764000082111580156200bb6d5750600082115b6200bbc55760405162461bcd60e51b815260206004820152602160248201527f457870656374696e67204e6f726d616c697a656454696d6552656d61696e696e6044820152606760f81b60648201526084016200a923565b620008306200bbd585846200ae44565b6200bbe1868662011c98565b905b60006200995f83670de0b6b3a7640000846200c101565b60405163a8d4d1d960e01b81526004810183905260248101829052600080516020620522a78339815191529063a8d4d1d9906044016200a0c6565b6040805160e081018252600181526001600160a01b038416602080830191909152825160008082529181018452909283926200b34a9287928792919082019081526020018781526020016000815260200160008152602001878152506200e478565b60008060008060006200bcab8660a0902090565b604051632e3071cd60e11b8152600481018290529091506000906001600160a01b03891690635c60e39a9060240160c060405180830381865afa1580156200bcf7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200bd1d919062012780565b9050600081608001516001600160801b0316426200bd3c919062011c98565b905080158015906200bd5a575060408201516001600160801b031615155b80156200bd73575060608801516001600160a01b031615155b156200bf8a576060888101805160408051638c00bf6b60e01b81528c516001600160a01b0390811660048301526020808f015182166024840152838f0151821660448401529451811660648301526080808f0151608484015288516001600160801b0390811660a485015295890151861660c484015292880151851660e483015294870151841661010482015290860151831661012482015260a08601519092166101448301526000921690638c00bf6b9061016401602060405180830381865afa1580156200be47573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200be6d919062011b13565b905060006200be966200be8183856200eb5e565b60408601516001600160801b0316906200ebcc565b90506200bea3816200ebe3565b846040018181516200beb69190620128bc565b6001600160801b03169052506200becd816200ebe3565b845185906200bede908390620128bc565b6001600160801b0390811690915260a0860151161590506200bf875760006200bf1e8560a001516001600160801b0316836200ebcc90919063ffffffff16565b905060006200bf588287600001516001600160801b03166200bf41919062011c98565b60208801518491906001600160801b03166200ec43565b90506200bf65816200ebe3565b866020018181516200bf789190620128bc565b6001600160801b031690525050505b50505b508051602082015160408301516060909301516001600160801b039283169b9183169a509282169850911695509350505050565b603b546040516370a0823160e01b81526001600160a01b03838116600483015260009283929116906370a0823190602401602060405180830381865afa1580156200c00d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c033919062011b13565b6070546040805160a08082018352603b546001600160a01b0390811683526071548116602084015260725481169383019390935260735483166060830152607454608083015290209116906393c52062906040516001600160e01b031960e084901b16815260048101919091526001600160a01b0387166024820152604401606060405180830381865afa1580156200c0d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c0f69190620128df565b519094909350915050565b60008260001904841183021582026200c11957600080fd5b5091020490565b6040516328a9b0fb60e11b81526001600160a01b03808416600483015282166024820152600080516020620522a78339815191529063515361f6906044016200a0c6565b604051637c84c69b60e01b81526004810183905260248101829052600080516020620522a783398151915290637c84c69b906044016200a0c6565b6040805160e081018252600181526001600160a01b03841660208083019190915282516000808252918101845290926200995f9286928692820190815260200186815260200160008152602001600081526020016000198152506200dd2e565b600080806200c213846301e133806200bbe3565b905060008512156200c253576200c2426200c23a826200c233886201292d565b906200ae44565b87906200ae44565b6200c24d906201292d565b6200c263565b6200c2636200c23a86836200ae44565b91506200c271828762012851565b925050935093915050565b6000808212156200c2a05760405163071d137160e51b815260040160405180910390fd5b5090565b6200c2ae6200ec6e565b601e546040516303223eab60e11b81526101009091046001600160a01b03166004820152600080516020620522a7833981519152906306447d5690602401600060405180830381600087803b1580156200c30757600080fd5b505af11580156200c31c573d6000803e3d6000fd5b5050505060126000806000196040516200c33690620112bb565b60c08082526004908201819052634261736560e01b60e083015261010060208301819052820152634241534560e01b61012082015260ff90941660408501526001600160a01b0390921660608401521515608083015260a082015261014001604051809103906000f0801580156200c3b2573d6000803e3d6000fd5b50603180546001600160a01b0319166001600160a01b03929092169190911790556040516200c3e190620112c9565b60208082526010908201526f466f72776172646572466163746f727960801b6040820152606001604051809103906000f0801580156200c425573d6000803e3d6000fd5b50603060016101000a8154816001600160a01b0302191690836001600160a01b03160217905550600080516020620522c783398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200c49a57600080fd5b505af11580156200c4af573d6000803e3d6000fd5b50506029546040516303223eab60e11b81526001600160a01b039091166004820152600080516020620522a783398151915292506306447d569150602401600060405180830381600087803b1580156200c50857600080fd5b505af11580156200c51d573d6000803e3d6000fd5b505050506040516200c52f90620112d7565b60208082526012908201527148797065726472697665526567697374727960701b6040820152606001604051809103906000f0801580156200c575573d6000803e3d6000fd5b50603280546001600160a01b0319166001600160a01b039290921691909117905560006200c5af66b1a2bc2ec500006301e133806200f03e565b6040805160018082528183019092529192506000919060208083019080368337505060285482519293506001600160a01b0316918391506000906200c5f8576200c5f86201218b565b60200260200101906001600160a01b031690816001600160a01b031681525050816101600151826101800151836101a00151846101c00151846040516200c63f90620112e5565b6200c64f9594939291906201294c565b604051809103906000f0801580156200c66c573d6000803e3d6000fd5b50603580546001600160a01b0319166001600160a01b03928316179055601e546200c69f9161010090910416836200f130565b600080516020620522c783398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200c6ed57600080fd5b505af11580156200c702573d6000803e3d6000fd5b50506027546040516303223eab60e11b81526001600160a01b039091166004820152600080516020620522a783398151915292506306447d569150602401600060405180830381600087803b1580156200c75b57600080fd5b505af11580156200c770573d6000803e3d6000fd5b50506034546028546040516338c0646560e11b81526001600160a01b0391821660048201526001602482015291169250637180c8ca9150604401600060405180830381600087803b1580156200c7c557600080fd5b505af11580156200c7da573d6000803e3d6000fd5b505060305460ff169150620007ac905057600080516020620522a783398151915263e5d6bf026200c8116301e13380600362011c51565b6040518263ffffffff1660e01b81526004016200c83091815260200190565b600060405180830381600087803b1580156200993757600080fd5b6040516370a0823160e01b81526001600160a01b038381166004830152600091908516906370a0823190602401602060405180830381865afa1580156200c896573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c8bc919062011b13565b905060005b8251811015620069ba576200c90384868551856200c8e0919062011c81565b8685815181106200c8f5576200c8f56201218b565b6020026020010151620022b5565b50600080516020620522c783398151915260001c6001600160a01b03166306447d568483815181106200c93a576200c93a6201218b565b60200260200101516040518263ffffffff1660e01b81526004016200c96e91906001600160a01b0391909116815260200190565b600060405180830381600087803b1580156200c98957600080fd5b505af11580156200c99e573d6000803e3d6000fd5b505060405163095ea7b360e01b81526001600160a01b038816925063095ea7b391506200c9d49089906000199060040162011feb565b6020604051808303816000875af11580156200c9f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200ca1a919062012015565b506001016200c8c1565b602480546040516303223eab60e11b81526001600160a01b039091166004820152600080516020620522a7833981519152916306447d569101600060405180830381600087803b1580156200ca7857600080fd5b505af11580156200ca8d573d6000803e3d6000fd5b5060009250600191506200ca9e9050565b6040519080825280602002602001820160405280156200cac8578160200160208202803683370190505b50601f5481519192506001600160a01b03169082906000906200caef576200caef6201218b565b60200260200101906001600160a01b031690816001600160a01b0316815250506040516200cb1d90620112c9565b60208082526010908201526f466f72776172646572466163746f727960801b6040820152606001604051809103906000f0801580156200cb61573d6000803e3d6000fd5b5060308054610100600160a81b0319166101006001600160a01b0393841681029190911791829055604080516102c081018252601e5483900485168152602080548616818301819052601f548716838501526060808401899052608080850192909252602654881660a0850152600060c08501819052610e1060e0860152617080858801526201518061012086015262093a806101408601526312cc0300610160860152670214e8348c4f0000610180860152671bc16d674ec800006101a086015266038d7ea4c680006101c08601526706f05b59d3b200006101e086018190526611c37937e08000610200870152610220860152855180840187528181528085018290528087018290528083019190915261024085015284519182018552670de0b6b3a764000080835282840181905282860181905290820152610260830152929093049093166102808301819052835163d13053bb60e01b8152935192936102a0850193919263d13053bb926004808401938290030181865afa1580156200ccef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200cd15919062011b13565b90526040516200cd2590620112f3565b6200cd3191906201298a565b604051809103906000f0801580156200cd4e573d6000803e3d6000fd5b50606e80546001600160a01b0319166001600160a01b03928316908117909155604080516101e081018252603b5484168152603c5490931660208085019190915281516399623bb160e01b8152825192850193926399623bb1926004808401939192918290030181865afa1580156200cdcb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200cdf1919062011fcb565b6001600160a01b03168152602001606e60009054906101000a90046001600160a01b03166001600160a01b031663c905a4b56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200ce53573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200ce79919062011b13565b815260200160366008015481526020016036600901548152602001671bc16d674ec8000081526020016036600e0154815260200162015180815260200160008152602001606e60009054906101000a90046001600160a01b03166001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200cf11573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200cf37919062011fcb565b6001600160a01b03168152602001606e60009054906101000a90046001600160a01b03166001600160a01b031663c415b95c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200cf99573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200cfbf919062011fcb565b6001600160a01b03168152602001606e60009054906101000a90046001600160a01b03166001600160a01b03166310780f736040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200d021573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200d047919062011fcb565b6001600160a01b03908116825260006020808401919091526040805160808082018352825482526041548285015260425482840152604354606080840191909152958301919091528551605c80549186166001600160a01b031992831617905586840151605d805491871691831691909117905586830151605e805491871691831691909117905586860151605f5590860151855560a086015160615560c086015160625560e08601516063556101008601516064556101208601516065556101408601516066805491861691831691909117905561016086015160678054918616918316919091179055610180860151606880549186169183169190911790556101a086015160698054919095169116179092556101c0909301518051606a5592830151606b55820151606c550151606d5550565b601e546040516303223eab60e11b81526101009091046001600160a01b03166004820152600090600080516020620522a7833981519152906306447d5690602401600060405180830381600087803b1580156200d1d957600080fd5b505af11580156200d1ee573d6000803e3d6000fd5b50506040516200d206925060369150602001620120f2565b604051602081830303815290604052826040516200d2249062011301565b604051809103906000f0801580156200d241573d6000803e3d6000fd5b506040516200d250906201130f565b604051809103906000f0801580156200d26d573d6000803e3d6000fd5b506040516200d27c906201131d565b604051809103906000f0801580156200d299573d6000803e3d6000fd5b506040516200d2a8906201132b565b604051809103906000f0801580156200d2c5573d6000803e3d6000fd5b506040516200d2d49062011339565b604051809103906000f0801580156200d2f1573d6000803e3d6000fd5b506040516200d3009062011347565b604051809103906000f0801580156200d31d573d6000803e3d6000fd5b506040516200d32c9062011355565b6200d33f98979695949392919062012b94565b604051809103906000f0801580156200d35c573d6000803e3d6000fd5b5092915050565b6060600083516001600160401b038111156200d383576200d383620117ab565b6040519080825280602002602001820160405280156200d3d257816020015b604080516060808201835280825260208201526000918101919091528152602001906001900390816200d3a25790505b50915060005b84518110156200d47c57838582815181106200d3f8576200d3f86201218b565b6020026020010151600001516000815181106200d419576200d4196201218b565b6020026020010151036200d473578481815181106200d43c576200d43c6201218b565b60200260200101518383806200d4529062012bf4565b9450815181106200d467576200d4676201218b565b60200260200101819052505b6001016200d3d8565b50815292915050565b60405163f7fe347760e01b815282151560048201528115156024820152600080516020620522a78339815191529063f7fe3477906044016200a0c6565b600080836001600160a01b031663b0d965806040518163ffffffff1660e01b815260040161026060405180830381865afa1580156200d505573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200d52b919062011d4e565b90506000846001600160a01b03166360246c886040518163ffffffff1660e01b81526004016101e060405180830381865afa1580156200d56f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200d595919062011e61565b90506200d6bb6040518061018001604052808360000151815260200183602001518152602001836080015181526020018360e001518152602001836101c00151815260200184610140015181526020018360c001518152602001846080015181526020018460a001518152602001846101e00151600001518152602001846101e00151602001518152602001846101e0015160400151815250866001600160a01b031663cf210e656200d651896001600160a01b03166200b97d565b6040518263ffffffff1660e01b81526004016200d67091815260200190565b602060405180830381865afa1580156200d68e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200d6b4919062011b13565b866200f653565b5095945050505050565b600080600080516020620522c783398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200d71657600080fd5b505af11580156200d72b573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0388166004820152600080516020620522a783398151915292506306447d569150602401600060405180830381600087803b1580156200d78057600080fd5b505af11580156200d795573d6000803e3d6000fd5b50505050603460009054906101000a90046001600160a01b03166001600160a01b031663b0d965806040518163ffffffff1660e01b815260040161026060405180830381865afa1580156200d7ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200d814919062011d4e565b5060345460408051630161b2cb60e71b8152905173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee926001600160a01b03169163b0d96580916004808301926102609291908290030181865afa1580156200d874573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200d89a919062011d4e565b516001600160a01b03161480156200d8b0575082515b156200d9715760345460608085015160a086015160808701516040805194850181526020808a01516001600160a01b0390811687528a51151591870191909152818a015186830152905163cba2e58d60e01b815295169463cba2e58d946200d922938b93909290919060040162011f6a565b604080518083038185885af11580156200d940573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200d967919062011f91565b915091506200aa0b565b60315460405163140e25ad60e31b8152600481018690526001600160a01b039091169063a0712d6890602401600060405180830381600087803b1580156200d9b857600080fd5b505af11580156200d9cd573d6000803e3d6000fd5b505060315460345460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b393506200da0a9290911690889060040162011feb565b6020604051808303816000875af11580156200da2a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200da50919062012015565b5060345460a08401516080850151604080516060810182526020808901516001600160a01b03908116835289511515918301919091528289015182840152915163cba2e58d60e01b8152919094169363cba2e58d936200dab9938a939192909160040162011f6a565b60408051808303816000875af11580156200dad8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200d967919062011f91565b604080516001600160a01b038416602082015260339181019190915260009060600160408051808303601f190181529082905280516020909101206370ca10bb60e01b825271206329b97db379d5e1bf586bbdb969c63274600483015260248201819052604482018490529150600080516020620522a7833981519152906370ca10bb90606401600060405180830381600087803b1580156200dba057600080fd5b505af1158015620022ac573d6000803e3d6000fd5b6000600080516020620522c783398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200dc0557600080fd5b505af11580156200dc1a573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0388166004820152600080516020620522a783398151915292506306447d569150602401600060405180830381600087803b1580156200dc6f57600080fd5b505af11580156200dc84573d6000803e3d6000fd5b50506034546060808601516040805192830181526020808901516001600160a01b03908116855289511515918501919091528189015184830152905163ded0623160e01b81529316945063ded0623193506200dce892899289929160040162011f6a565b6020604051808303816000875af11580156200dd08573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200ae3b919062011b13565b6000600080516020620522c783398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200dd7e57600080fd5b505af11580156200dd93573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0387166004820152600080516020620522a783398151915292506306447d569150602401600060405180830381600087803b1580156200dde857600080fd5b505af11580156200ddfd573d6000803e3d6000fd5b505060345460408051630161b2cb60e71b8152905173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee94506001600160a01b03909216925063b0d96580916004808301926102609291908290030181865afa1580156200de62573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200de88919062011d4e565b516001600160a01b03161480156200de9e575081515b156200df6557603454606080840151608085015160a086015160c08701516040805195860181526020808a01516001600160a01b0390811688528a51151591880191909152818a0151878301529051634c2ac1d960e01b8152961695634c2ac1d9956200df17948b949093909290919060040162012c10565b60206040518083038185885af11580156200df36573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200df5d919062011b13565b905062000833565b603154606083015160405163140e25ad60e31b81526001600160a01b039092169163a0712d68916200df9d9160040190815260200190565b600060405180830381600087803b1580156200dfb857600080fd5b505af11580156200dfcd573d6000803e3d6000fd5b5050603154603454606086015160405163095ea7b360e01b81526001600160a01b03938416955063095ea7b394506200e00d939092169160040162011feb565b6020604051808303816000875af11580156200e02d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200e053919062012015565b50603454608083015160a084015160c0850151604080516060810182526020808901516001600160a01b039081168352895115159183019190915282890151828401529151634c2ac1d960e01b81529190951694634c2ac1d9946200e0c2948a94919390929060040162012c10565b6020604051808303816000875af11580156200e0e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200df5d919062011b13565b600080600080516020620522c783398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200e15957600080fd5b505af11580156200e16e573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0388166004820152600080516020620522a783398151915292506306447d569150602401600060405180830381600087803b1580156200e1c357600080fd5b505af11580156200e1d8573d6000803e3d6000fd5b50506034546060808701516040805192830181526020808a01516001600160a01b0390811685528a51151591850191909152818a01518483015290516332f04d0d60e21b81529316945063cbc1343493506200e23a9289929060040162012c3d565b60408051808303816000875af11580156200e259573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200aa06919062011f91565b600080836001600160a01b031663b0d965806040518163ffffffff1660e01b815260040161026060405180830381865afa1580156200e2c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200e2e8919062011d4e565b90506000846001600160a01b03166360246c886040518163ffffffff1660e01b81526004016101e060405180830381865afa1580156200e32c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200e352919062011e61565b90506200ae3b6040518061018001604052808360000151815260200183602001518152602001836080015181526020018360e001518152602001836101c00151815260200184610140015181526020018360c001518152602001846080015181526020018460a001518152602001846101e00151600001518152602001846101e00151602001518152602001846101e0015160400151815250866001600160a01b031663cf210e656200e40e896001600160a01b03166200b97d565b6040518263ffffffff1660e01b81526004016200e42d91815260200190565b602060405180830381865afa1580156200e44b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200e471919062011b13565b866200f881565b600080600080516020620522c783398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200e4c957600080fd5b505af11580156200e4de573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0388166004820152600080516020620522a783398151915292506306447d569150602401600060405180830381600087803b1580156200e53357600080fd5b505af11580156200e548573d6000803e3d6000fd5b50506034546200e56492506001600160a01b031690506200fa4b565b915073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b0316603460009054906101000a90046001600160a01b03166001600160a01b031663b0d965806040518163ffffffff1660e01b815260040161026060405180830381865afa1580156200e5d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200e5ff919062011d4e565b516001600160a01b03161480156200e615575082515b156200e6d75760345460608085015160c086015160808701516040805194850181526020808a01516001600160a01b0390811687528a51151591870191909152818a0151868301529051630dbbe80760e41b815295169463dbbe8070946200e687938b93909290919060040162011f6a565b604080518083038185885af11580156200e6a5573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200e6cc919062011f91565b90925090506200aa0b565b603154606084015160405163140e25ad60e31b81526001600160a01b039092169163a0712d68916200e70f9160040190815260200190565b600060405180830381600087803b1580156200e72a57600080fd5b505af11580156200e73f573d6000803e3d6000fd5b505060315460345460c087015160405163095ea7b360e01b81526001600160a01b03938416955063095ea7b394506200e77f939092169160040162011feb565b6020604051808303816000875af11580156200e79f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200e7c5919062012015565b5060345460c08401516080850151604080516060810182526020808901516001600160a01b039081168352895115159183019190915282890151828401529151630dbbe80760e41b8152919094169363dbbe8070936200e82e938a939192909160040162011f6a565b60408051808303816000875af11580156200e84d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200e873919062011f91565b60315460608601519294509092506001600160a01b0316906342966c68906200e89e90849062011c98565b6040518263ffffffff1660e01b81526004016200e8bd91815260200190565b600060405180830381600087803b1580156200e8d857600080fd5b505af11580156200e8ed573d6000803e3d6000fd5b50505050935093915050565b6000600080516020620522c783398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200e94957600080fd5b505af11580156200e95e573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0388166004820152600080516020620522a783398151915292506306447d569150602401600060405180830381600087803b1580156200e9b357600080fd5b505af11580156200e9c8573d6000803e3d6000fd5b50506034546060808601516040805192830181526020808901516001600160a01b0390811685528951151591850191909152818901518483015290516329b23fc160e01b8152931694506329b23fc193506200dce892899289929160040162011f6a565b600080600080516020620522c783398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200ea7d57600080fd5b505af11580156200ea92573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0388166004820152600080516020620522a783398151915292506306447d569150602401600060405180830381600087803b1580156200eae757600080fd5b505af11580156200eafc573d6000803e3d6000fd5b50506034546060808701516040805192830181526020808a01516001600160a01b0390811685528a51151591850191909152818a015184830152905163074a6de960e01b81529316945063074a6de993506200e23a9289929060040162012c3d565b6000806200eb6d838562011c51565b905060006200eb9282806200eb8c670de0b6b3a7640000600262011c51565b6200facf565b905060006200ebb182846200eb8c670de0b6b3a7640000600362011c51565b9050806200ebc0838562011f1f565b6200a965919062011f1f565b60006200995f8383670de0b6b3a76400006200facf565b6040805180820190915260148152731b585e081d5a5b9d0c4c8e08195e18d95959195960621b60208201526000906001600160801b038311156200ec3c5760405162461bcd60e51b81526004016200a923919062012033565b5090919050565b6000620008306200ec58620f42408462011f1f565b6200ec6560018662011f1f565b8691906200facf565b6200ec9660405180604001604052806005815260200164616c69636560d81b815250620032df565b601e60016101000a8154816001600160a01b0302191690836001600160a01b031602179055506200ece2604051806040016040528060038152602001623137b160e91b815250620032df565b601f80546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600681526563656c696e6560d01b60208201526200ed2a90620032df565b602060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506200ed76604051806040016040528060038152602001623230b760e91b815250620032df565b602180546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600381526265766560e81b60208201526200edbb90620032df565b602280546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260088152673232b83637bcb2b960c11b60208201526200ee0590620032df565b602480546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600681526536b4b73a32b960d11b60208201526200ee4d90620032df565b602380546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600c81526b3332b2a1b7b63632b1ba37b960a11b60208201526200ee9b90620032df565b602580546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600e81526d39bbb2b2b821b7b63632b1ba37b960911b60208201526200eeeb90620032df565b602680546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600a815269676f7665726e616e636560b01b60208201526200ef3790620032df565b602780546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260068152653830bab9b2b960d11b60208201526200ef7f90620032df565b602880546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260098152683932b3b4b9ba3930b960b91b60208201526200efca90620032df565b602980546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600c81526b726577617264536f7572636560a01b60208201526200f01890620032df565b602a80546001600160a01b0319166001600160a01b039290921691909117905542602b55565b6200f04862011363565b60006200f05684846200faea565b80516001600160a01b0390811684526020808301518216908501526040808301518216908501526060808301519085015260808083015160a08087019190915283015160c08087019190915283015160e08087019190915283015161010080870191909152830151610120808701919091528301516101408087019190915283015182166101608087019190915283015182166101808087019190915283015182166101a0808701919091528301519091166101c080860191909152909101516101e0840152670de0b6b3a7640000908301525092915050565b600080516020620522c783398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200f17e57600080fd5b505af11580156200f193573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020620522a783398151915292506306447d569150602401600060405180830381600087803b1580156200f1e857600080fd5b505af11580156200f1fd573d6000803e3d6000fd5b50506035546040518493506001600160a01b0390911691506200f220906201144b565b6200f22d92919062012c5e565b604051809103906000f0801580156200f24a573d6000803e3d6000fd5b50603480546001600160a01b0319166001600160a01b0392831617905560355461016083015160405163dd2b8fbb60e01b8152908316600482015291169063dd2b8fbb90602401600060405180830381600087803b1580156200f2ac57600080fd5b505af11580156200f2c1573d6000803e3d6000fd5b5050603554610180840151604051631a586b9d60e31b81526001600160a01b0391821660048201529116925063d2c35ce89150602401600060405180830381600087803b1580156200f31257600080fd5b505af11580156200f327573d6000803e3d6000fd5b50506035546101808401516040516308627a4f60e41b81526001600160a01b03918216600482015291169250638627a4f09150602401600060405180830381600087803b1580156200f37857600080fd5b505af11580156200f38d573d6000803e3d6000fd5b50506035546101c0840151604051630f8b480560e21b81526001600160a01b03918216600482015291169250633e2d20149150602401600060405180830381600087803b1580156200f3de57600080fd5b505af11580156200f3f3573d6000803e3d6000fd5b50505050600080516020620522c783398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200f44557600080fd5b505af11580156200f45a573d6000803e3d6000fd5b50506029546040516303223eab60e11b81526001600160a01b039091166004820152600080516020620522a783398151915292506306447d569150602401600060405180830381600087803b1580156200f4b357600080fd5b505af11580156200f4c8573d6000803e3d6000fd5b5060009250600191506200f4d99050565b6040519080825280602002602001820160405280156200f503578160200160208202803683370190505b5060408051600180825281830190925291925060009190602080830190803683375050604080516001808252818301909252929350600092915060208083019080368337505060345485519293506001600160a01b0316918591506000906200f570576200f5706201218b565b60200260200101906001600160a01b031690816001600160a01b0316815250506001826000815181106200f5a8576200f5a86201218b565b60200260200101906001600160801b031690816001600160801b0316815250506000816000815181106200f5e0576200f5e06201218b565b6001600160a01b039283166020918202929092010152603254604051630ff9856960e11b8152911690631ff30ad2906200f6239086908690869060040162012d8d565b600060405180830381600087803b1580156200f63e57600080fd5b505af1158015620014e4573d6000803e3d6000fd5b60008060006200f66c866000015187602001516200fc37565b905060006200f68a8288604001518960e001518a60a001516200fc5b565b90506000806200f69c8985856200fc76565b909250905060006200f6b28a8a8585886200ff0d565b91505080156200f6cb575090945092506200aa0b915050565b506200f6da89838a8662010069565b95506200f6ea8987868662010121565b94506000806200f6fe8b8b8a8a896200ff0d565b91509150806200f76b5760405162461bcd60e51b815260206004820152603160248201527f496e697469616c20677565737320696e206063616c63756c6174654d61784c6f6044820152703733b01034b99034b739b7b63b32b73a1760791b60648201526084016200a923565b60005b898110156200f872578489106200f7e45760405162461bcd60e51b815260206004820152603360248201527f52656163686564206162736f6c757465206d617820626f6e6420616d6f756e746044820152721034b7103033b2ba2fb6b0bc2fb637b733b01760691b60648201526084016200a923565b60006200f7f48d8b8a8a6201017c565b93509050826200f80557506200f872565b60006200f81385836200bbe3565b6200f81f908c62011f1f565b905060006200f8318f838c8c62010121565b90506200f8428f8f84848d6200ff0d565b909650945084156200f85a57819b50809a506200f863565b5050506200f872565b5050508060010190506200f76e565b50505050505050935093915050565b6040805160608101825260008082526020820181905291810182905260006200f8b3866000015187602001516200fc37565b905060006200f8d18288604001518960e001518a60a001516200fc5b565b905060006200f8e1888462010224565b90506200f8f2888285858b62010369565b15801560408701529085526200f90e5793506200083392505050565b60006200f91d89848a620104ec565b90506200f92e898286868c62010369565b1515604087018190529086526200f9a25760405162461bcd60e51b815260206004820152603160248201527f496e697469616c20677565737320696e206063616c63756c6174654d617853686044820152701bdc9d18081a5cc81a5b9cdbdb1d995b9d607a1b60648201526084016200a923565b60005b878110156200fa3e576200f9bc8a838688620105de565b158015604089015260208801919091526200fa3e57602086015186516000916200f9e791906200bbe3565b6200f9f3908462011f1f565b9050838111156200fa0557506200fa3e565b6200fa148b8288888e62010369565b15801560408a01529088526200fa2d578092506200fa34565b506200fa3e565b506001016200f9a5565b5098975050505050505050565b6000816001600160a01b031663b0d965806040518163ffffffff1660e01b815260040161026060405180830381865afa1580156200fa8d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200fab3919062011d4e565b61010001516200fac3836200b97d565b62009962919062011f1f565b6000816200fade848662011c51565b62000830919062011c81565b6200faf46201145a565b6040805160808101825260008082526020808301829052828401829052606080840183905284516101e0810186526031546001600160a01b039081168252818401949094526030546101009004909316838601819052855163d13053bb60e01b815295519495939491850193909263d13053bb926004808401938290030181865afa1580156200fb88573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200fbae919062011b13565b8152602001670de0b6b3a7640000815260200166038d7ea4c680008152602001671bc16d674ec8000081526020018481526020016201518081526020016200fbf7868662010674565b81526027546001600160a01b039081166020830152602554811660408301526026548116606083015260335416608082015260a001919091529392505050565b6000806200fc46848462010729565b9092509050806200d35c576200d35c6201076b565b60006200ae3b826200fc6f8588886200c101565b9062010784565b6000806000806200fcb08688604001518960a00151670de0b6b3a76400006200fca0919062011c98565b8a60c001518b60e00151620107f7565b90506200fd0a876101400151670de0b6b3a76400006200fcd1919062011c98565b6200fd03670de0b6b3a76400006200fcea818a62010823565b6200fcf6919062011c98565b6101208b0151906201083a565b906201083a565b91506200fd46876101400151670de0b6b3a76400006200fd2b919062011c98565b6200fd3f84670de0b6b3a764000062011f1f565b9062010823565b60a08801519092506200fd74906200fd6c906200bbe181670de0b6b3a764000062011c98565b839062010784565b91506200fd938760e001518860c001516201082390919063ffffffff16565b6200fd9f908362011f1f565b91506200fdad81836200bbe3565b91506200fde16200fd6c8860a00151670de0b6b3a76400006200fdd1919062011c98565b670de0b6b3a7640000906200bbe3565b91505060006200fdff8760e00151836200bbe390919063ffffffff16565b90506000806200fe55896101400151670de0b6b3a76400006200fe23919062011c98565b6200c233670de0b6b3a76400006200fe3c818c6200bbe3565b6200fe48919062011c98565b6101208d0151906200ae44565b90506200feb4846200c2336200fe818c60a00151670de0b6b3a76400006201082390919063ffffffff16565b6200fc6f8d6101400151670de0b6b3a76400006200fea0919062011c98565b6200bbe187670de0b6b3a764000062011f1f565b9150506200fece8860c0015188846200c233919062011c98565b94506200fee285878a610120015162010851565b8189604001516200fef4919062011c98565b6200ff00919062011c98565b9350505050935093915050565b60008060006200ff2a86858a61012001518b610160015162010885565b905060006200ff478960c00151836200bbe390919063ffffffff16565b60c08a01516200ff599089906200bbe3565b8a516200ff67919062011f1f565b6200ff73919062011c98565b90506000868a608001516200ff89919062011f1f565b905060006200ff998a826201089e565b6200ffa4906201292d565b90508a61010001516200ffc58c60c00151846200bbe390919063ffffffff16565b6200ffd1919062011f1f565b60c08c01516200ffe39083906200bbe3565b6200ffef908562011f1f565b1062010053576101008b015160c08c01516201000d9084906200bbe3565b60c08d01516201001f9084906200bbe3565b6201002b908662011f1f565b62010037919062011c98565b62010043919062011c98565b600195509550505050506201005f565b60008095509550505050505b9550959350505050565b6000806201007a86858586620108af565b90506000620100c9670b1a2bc2ec5000006200c233620100bd8a60a00151670de0b6b3a7640000620100ad919062011c98565b670de0b6b3a76400009062010823565b6200fc6f868b6200bbe3565b90506000620100e1670de0b6b3a7640000836200ae44565b620100f96200c23a84670de0b6b3a764000062011c98565b62010105919062011f1f565b90506201011588878784620108af565b98975050505050505050565b6000806201015c848760400151620101478960c00151896200bbe390919063ffffffff16565b8960a001518a60c001518b60e00151620109e0565b905062010170858488610120015162010851565b6200a965908262011c98565b6000806201018d8686868662010a05565b909250905080620101a257600091506201021b565b620101d1620101ba84670de0b6b3a764000062011c98565b6101208801516101608901516200c233916200ae44565b620101dd908362011f1f565b9150620101f3670de0b6b3a76400008362011c98565b915062010218670de0b6b3a76400008760c00151846200c1019092919063ffffffff16565b91505b94509492505050565b600080620102416000856020015162010b7890919063ffffffff16565b84610100015162010253919062011f1f565b905060006201028b8486604001518760a00151670de0b6b3a76400006201027b919062011c98565b8860c001518960e00151620107f7565b90506000620102e3620102d18760a00151670de0b6b3a7640000620102b1919062011c98565b6200fc6f620102c5878b602001516200fc37565b60e08b0151906201083a565b60e088015160c0890151919062010b89565b620102ef908362011c98565b9050670de0b6b3a7640000811062010333576201032b620103238760a00151670de0b6b3a76400006200fdd1919062011c98565b829062010784565b905062010358565b62010355620103238760a00151670de0b6b3a7640000620100ad919062011c98565b90505b60408601516200a965908262011c98565b600080600080620103a4878a604001518a8c60a00151670de0b6b3a764000062010394919062011c98565b8d60c001518e60e0015162010bb0565b9150915080620103bd576000809350935050506201005f565b6000620103fe8a60c00151620103e08b8a8e61012001518f610160015162010c88565b620103f28c8b8f610120015162010c97565b6200fd3f919062011c98565b9050808310156201041957600080945094505050506201005f565b600062010427828562011c98565b9050808b600001511015620104475760008095509550505050506201005f565b8a516000906201045990839062011c98565b905060006201048d8d60c001516201047c60008c62010b7890919063ffffffff16565b8f608001516200bbe1919062011c98565b90508c610100015181620104a2919062011f1f565b8210620104d9576101008d0151620104bb828462011c98565b620104c7919062011c98565b6001975097505050505050506201005f565b600080975097505050505050506201005f565b6000808390506000620105648661010001516201051b8860c0015189608001516200bbe390919063ffffffff16565b60c089015162010532906200bbe189600062010b78565b895162010540919062011f1f565b6201054c919062011c98565b62010558919062011c98565b60c0880151906200ae44565b90506200a965620105996201058287670de0b6b3a764000062011c98565b6101208901516101608a01516200c233916200ae44565b620105be620105b188670de0b6b3a764000062011c98565b6101208a0151906200ae44565b620105ca908562011c98565b620105d6919062011f1f565b82906200bbe3565b6000806000620105f087878662010cb6565b90506000620106418860c001516200bbe18a6101600151670de0b6b3a76400006201061c919062011c98565b6200c233620106348b670de0b6b3a764000062011c98565b6101208e0151906200ae44565b9050808210620106655762010657818362011c98565b60019350935050506201021b565b6000809350935050506201021b565b600080620106ab6201069b6201068c86606462011c51565b66a5bbed86c5a000906200ae44565b6748cd4072281e0000906200bbe3565b9050620106c1670de0b6b3a7640000826200bbe3565b905062010721816200c233620106f4620106ee620106e889670de0b6b3a764000062011f1f565b62010da5565b62010dd0565b6200bbe1620106ee6201070d8a8a6301e133806200c101565b620106e890670de0b6b3a764000062011f1f565b949350505050565b6000806000836201073a8662010da5565b6201074691906201282e565b90506000811215620107605760008092509250506200b34f565b946001945092505050565b60405163bb55fd2760e01b815260040160405180910390fd5b6000816000036201079f5750670de0b6b3a764000062009962565b82600003620107b15750600062009962565b6000620107be8362010da5565b90506000620107d1620106ee8662010da5565b9050818102620107ea670de0b6b3a76400008262012dfa565b90506200a9658162010ff8565b600062010805858562010784565b6200ebc06201081a866200fc6f868b6200ae44565b8590856200c101565b60006200995f83670de0b6b3a76400008462010b89565b60006200995f8383670de0b6b3a764000062010b89565b600062000830846200fd03670de0b6b3a764000062010871818862010823565b6201087d919062011c98565b85906201083a565b60006200ae3b846200c233846200c23389898962010851565b60008183136200995d57826200995f565b600080620108be85826201089e565b620108c9906201292d565b90506000620109428760c00151671bc16d674ec80000896101000151620109028b60c001518c608001516200bbe390919063ffffffff16565b60c08c0151620109149088906200bbe3565b8c5162010922919062011f1f565b6201092e919062011c98565b6201093a919062011c98565b91906200c101565b9050620109d56201096d670de0b6b3a76400006201096181896200bbe3565b620105b1919062011c98565b670de0b6b3a76400006201099d62010986898362011c98565b6101208c01516101608d01516200c233916200ae44565b620109b1670de0b6b3a7640000896200bbe3565b620109bd919062011f1f565b620109c9919062011c98565b620105d6919062011c98565b979650505050505050565b6000620109d5878787620109fd88670de0b6b3a764000062011c98565b878762011191565b600080600062010a238760c00151876200bbe390919063ffffffff16565b9050600062010a4362010a37838862011f1f565b60e08a0151906200ae44565b9050600062010a7b878a604001518b60a00151670de0b6b3a764000062010a6b919062011c98565b8c60c001518d60e00151620107f7565b905062010a9a6200fdd18a60a00151846201078490919063ffffffff16565b9450600062010acd62010abb8b60a00151856201078490919063ffffffff16565b60e08c015160c08d015191906200c101565b90508082101562010ae95760008095509550505050506201021b565b62010b276200c23a62010b1b8c60a00151670de0b6b3a764000062010b0f919062011c98565b60a08e01519062010823565b6200fc6f848662011c98565b955062010b5b670de0b6b3a764000062010b42818a6200bbe3565b62010b4e919062011c98565b6101208c0151906200ae44565b62010b67908762011c98565b9a60019a5098505050505050505050565b60008183136200ec3c57816200995f565b600082600019048411830215820262010ba157600080fd5b50910281810615159190040190565b600080600062010bc48989888888620111c4565b905062010bd7866200fc6f898b62011f1f565b97508781101562010bf057600080925092505062010c7d565b87810362010c0081868862010b89565b9050670de0b6b3a7640000811062010c325762010c2a62010323670de0b6b3a76400008962010823565b905062010c4d565b62010c4a62010323670de0b6b3a7640000896200bbe3565b90505b62010c59818662010823565b9050808a101562010c735760008093509350505062010c7d565b8903925060019150505b965096945050505050565b60006200ae3b826200c2338787875b600062000830846200fd036201087d86670de0b6b3a764000062011c98565b60008062010cdd8386604001518760a00151670de0b6b3a76400006201027b919062011c98565b9050600062010d106200fdd162010d048860a00151888a604001516200fc6f919062011f1f565b60c0890151906201083a565b9050600062010d9762010d428860a00151670de0b6b3a764000062010d36919062011c98565b60a08a01519062010823565b6200fc6f62010d768a60a00151670de0b6b3a764000062010d64919062011c98565b8a8c604001516200fc6f919062011f1f565b62010d82908762011c98565b60c08b015160e08c01516200c233916200bbe3565b9050620109d582826200ae44565b60006001600160ff1b038211156200c2a05760405163396ea70160e11b815260040160405180910390fd5b600080821362010df35760405163e61b497560e01b815260040160405180910390fd5b506001600160801b03811160071b81811c6001600160401b031060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f1982019062010e779084901c62010da5565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6000680248ce36a70cb26b3e1982136201101457506000919050565b680755bf798b4a1bf1e582126201103e576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b3988102909303926c240c330e9fb2d9cbaf0fd5aafb1984018402606090811d6d0277594991cfc85f6e2461837cd9018502811d6d1a521255e34f6a5061b25ef1c9c319018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d6e02c72388d9f74f51a9331fed693f1419018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087016d01d3967ed30fc4f89c02bab570811901810290921d6e0587f503bb6ea29d25fcb7401964500186026d360d7aeea093263ecc6e0ecb291760621b0181810595509293509091906200a96574029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c62010da5565b600080620111a4888888888888620111f0565b909250905080620111b957620111b96201076b565b509695505050505050565b6000620111d2858562010784565b6200ebc0620111e7866200fc6f868b6201083a565b85908562010b89565b6000806000620112048989888888620111c4565b90506201121b866200fc6f6200c23a8a8d62011f1f565b98506201122a858a866200c101565b9850888110156201124357600080925092505062010c7d565b888103670de0b6b3a7640000811062011276576201126e62010323670de0b6b3a76400008962010823565b905062011291565b6201128e62010323670de0b6b3a7640000896200bbe3565b90505b80891015620112a95760008093509350505062010c7d565b90970398600198509650505050505050565b6120358062012e2f83390190565b6118f48062014e6483390190565b612763806201675883390190565b6105498062018ebb83390190565b61412c806201940483390190565b61240d806201d53083390190565b6151b8806201f93d83390190565b614d0e8062024af583390190565b61514b806202980383390190565b6150e3806202e94e83390190565b6141138062033a3183390190565b612ca68062037b4483390190565b60405180610200016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600080191681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001620114466040518060800160405280600081526020016000815260200160008152602001600081525090565b905290565b62017abd806203a7ea83390190565b604051806101e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000801916815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001620114466040518060800160405280600081526020016000815260200160008152602001600081525090565b6001600160a01b03811681146200174c57600080fd5b6000806000606084860312156201156257600080fd5b83356201156f8162011536565b92506020840135620115818162011536565b91506040840135620115938162011536565b809150509250925092565b60008151808452602080850194506020840160005b83811015620115da5781516001600160a01b031687529582019590820190600101620115b3565b509495945050505050565b6020815260006200995f60208301846201159e565b600080604083850312156201160e57600080fd5b50508035926020909101359150565b60005b838110156201163a57818101518382015260200162011620565b50506000910152565b600081518084526201165d8160208601602086016201161d565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156201172757603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b818110156201171057605f19898503018352620116fd84865162011643565b948e01949350918d0191600101620116de565b505050978a01979450509188019160010162011698565b50919a9950505050505050505050565b6000602082840312156201174a57600080fd5b5035919050565b600080600080608085870312156201176857600080fd5b8435620117758162011536565b93506020850135620117878162011536565b9250604085013591506060850135620117a08162011536565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b60405161020081016001600160401b0381118282101715620117e757620117e7620117ab565b60405290565b6040516101e081016001600160401b0381118282101715620117e757620117e7620117ab565b604051606081016001600160401b0381118282101715620117e757620117e7620117ab565b604051601f8201601f191681016001600160401b0381118282101715620118635762011863620117ab565b604052919050565b60006001600160401b03821115620118875762011887620117ab565b50601f01601f191660200190565b600060208284031215620118a857600080fd5b81356001600160401b03811115620118bf57600080fd5b8201601f81018413620118d157600080fd5b8035620118e8620118e2826201186b565b62011838565b818152856020838501011115620118fe57600080fd5b81602084016020830137600091810160200191909152949350505050565b600060208083018184528085518083526040925060408601915060408160051b8701018488016000805b84811015620119c657898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620119b05783516001600160e01b0319168252928b019260019290920191908b019062011984565b50978a0197955050509187019160010162011946565b50919998505050505050505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101562011a3057603f1988860301845262011a1d85835162011643565b94509285019290850190600101620119fe565b5092979650505050505050565b600181811c9082168062011a5257607f821691505b60208210810362011a7357634e487b7160e01b600052602260045260246000fd5b50919050565b6000815462011a888162011a3d565b80855260206001838116801562011aa8576001811462011ac35762011af3565b60ff1985168884015283151560051b88018301955062011af3565b866000528260002060005b8581101562011aeb5781548a820186015290830190840162011ace565b890184019650505b505050505092915050565b6020815260006200995f602083018462011a79565b60006020828403121562011b2657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562011b8457816000190482111562011b685762011b6862011b2d565b8085161562011b7657918102915b93841c939080029062011b48565b509250929050565b60008262011b9d5750600162009962565b8162011bac5750600062009962565b816001811462011bc5576002811462011bd05762011bf0565b600191505062009962565b60ff84111562011be45762011be462011b2d565b50506001821b62009962565b5060208310610133831016604e8410600b841016171562011c15575081810a62009962565b62011c21838362011b43565b806000190482111562011c385762011c3862011b2d565b029392505050565b60006200995f60ff84168362011b8c565b808202811582820484141762009962576200996262011b2d565b634e487b7160e01b600052601260045260246000fd5b60008262011c935762011c9362011c6b565b500490565b8181038181111562009962576200996262011b2d565b60006020828403121562011cc157600080fd5b815160ff811681146200083357600080fd5b805162011ce08162011536565b919050565b60006080828403121562011cf857600080fd5b604051608081018181106001600160401b038211171562011d1d5762011d1d620117ab565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b6000610260828403121562011d6257600080fd5b62011d6c620117c1565b62011d778362011cd3565b815262011d876020840162011cd3565b602082015262011d9a6040840162011cd3565b6040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e082015261010080840151818301525061012080840151818301525061014080840151818301525061016062011e0581850162011cd3565b9082015261018062011e1984820162011cd3565b908201526101a062011e2d84820162011cd3565b908201526101c062011e4184820162011cd3565b908201526101e062011e568585830162011ce5565b908201529392505050565b60006101e0828403121562011e7557600080fd5b62011e7f620117ed565b825181526020808401519082015260408084015190820152606080840151908201526080808401519082015260a0808401519082015260c0808401519082015260e08084015190820152610100808401519082015261012080840151908201526101408084015190820152610160808401519082015261018080840151908201526101a080840151908201526101c0928301519281019290925250919050565b8082018082111562009962576200996262011b2d565b60018060a01b038151168252602081015115156020830152600060408201516060604085015262010721606085018262011643565b8481528360208201528260408201526080606082015260006200a965608083018462011f35565b6000806040838503121562011fa557600080fd5b505080516020909101519092909150565b6001600160e01b031991909116815260200190565b60006020828403121562011fde57600080fd5b8151620008338162011536565b6001600160a01b03929092168252602082015260400190565b8051801515811462011ce057600080fd5b6000602082840312156201202857600080fd5b6200995f8262012004565b6020815260006200995f602083018462011643565b6001600160a01b0383168152604060208201819052600090620008309083018462011643565b600082601f8301126201208057600080fd5b815162012091620118e2826201186b565b818152846020838601011115620120a757600080fd5b620107218260208301602087016201161d565b600060208284031215620120cd57600080fd5b81516001600160401b03811115620120e457600080fd5b62010721848285016201206e565b6000808354620121028162011a3d565b600182811680156201211d5760018114620121335762012164565b60ff198416875282151583028701945062012164565b8760005260208060002060005b858110156201215b5781548a82015290840190820162012140565b50505082870194505b5050722232b83637bcb2b921b7b7b93234b730ba37b960691b835250506013019392505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039788168152958716602087015293861660408601529185166060850152909316608083015260a082019290925260c081019190915260e00190565b6201220882620121fb83546001600160a01b031690565b6001600160a01b03169052565b60018101546001600160a01b0390811660208401526002820154811660408401526003820154606084015260048201546080840152600582015460a0840152600682015460c0840152600782015460e084015260088201546101008401526009820154610120840152600a8201548116610140840152600b8201548116610160840152600c8201548116610180840152600d820154166101a0830152600e8101546101c0830152600f8101546101e083015260108101546102008301526011015461022090910152565b8881526001600160a01b03881660208201526000610320620122f8604084018a620121e4565b806102808401526201230d8184018962011643565b915050856102a0830152846102c0830152836102e0830152826103008301529998505050505050505050565b8a81526001600160a01b038a16602082015261036060408201819052600090620123668382018c62011a79565b905062012377606084018b620121e4565b8281036102a08401526201238c818a62011643565b9050876102c0840152866102e084015285610300840152828103610320840152620123b8818662011f35565b915050826103408301529b9a5050505050505050505050565b60006001600160401b03821115620123ed57620123ed620117ab565b5060051b60200190565b600060208083850312156201240b57600080fd5b82516001600160401b03808211156201242357600080fd5b818501915085601f8301126201243857600080fd5b815162012449620118e282620123d1565b81815260059190911b830184019084810190888311156201246957600080fd5b8585015b838110156200fa3e578051858111156201248657600080fd5b86016060818c03601f190112156201249d57600080fd5b620124a762011813565b8882015187811115620124b957600080fd5b8201603f81018d13620124cb57600080fd5b89810151620124de620118e282620123d1565b81815260059190911b8201604001908b8101908f831115620124ff57600080fd5b6040840193505b82841015620125215783518252928c0192908c019062012506565b84525050506040820151878111156201253957600080fd5b620125498d8b838601016201206e565b8a830152506201255c6060830162011cd3565b60408201528452509186019186016201246d565b6000806000808486036102a08112156201258957600080fd5b8551620125968162011536565b60208701519095506001600160401b0380821115620125b457600080fd5b620125c289838a016201206e565b9550610240603f1984011215620125d857600080fd5b620125e2620117ed565b9250620125f26040890162011cd3565b8352620126026060890162011cd3565b6020840152620126156080890162011cd3565b604084015260a0880151606084015260c0880151608084015260e088015160a084015261010091508188015160c08401526101208089015160e0850152610140808a0151848601526101609350838a01518286015261018091506201267c828b0162011cd3565b908501526101a0620126908a820162011cd3565b848601526101c09350620126a6848b0162011cd3565b82860152620126b96101e08b0162011cd3565b9085015250620126ce896102008a0162011ce5565b8383015261028088015192945080831115620126e957600080fd5b5050620126f9878288016201206e565b91505092959194509250565b600080600080600060a086880312156201271e57600080fd5b8551945060208601519350604086015192506201273e6060870162012004565b9150608086015190509295509295909350565b60008262012763576201276362011c6b565b500690565b80516001600160801b038116811462011ce057600080fd5b600060c082840312156201279357600080fd5b60405160c081018181106001600160401b0382111715620127b857620127b8620117ab565b604052620127c68362012768565b8152620127d66020840162012768565b6020820152620127e96040840162012768565b6040820152620127fc6060840162012768565b60608201526201280f6080840162012768565b60808201526201282260a0840162012768565b60a08201529392505050565b81810360008312801583831316838312821617156200d35c576200d35c62011b2d565b808201828112600083128015821682158216171562012874576201287462011b2d565b505092915050565b6000826201288e576201288e62011c6b565b500790565b604081526000620128a8604083018562011643565b82810360208401526200ae3b818562011643565b6001600160801b038181168382160190808211156200d35c576200d35c62011b2d565b600060608284031215620128f257600080fd5b620128fc62011813565b825181526201290e6020840162012768565b6020820152620129216040840162012768565b60408201529392505050565b6000600160ff1b820162012945576201294562011b2d565b5060000390565b6001600160a01b038681168252858116602083015284811660408301528316606082015260a060808201819052600090620109d5908301846201159e565b60408152620129a56040820183516001600160a01b03169052565b60006020830151620129c260608401826001600160a01b03169052565b5060408301516001600160a01b03166080830152606083015161038060a08401819052620129f56103c08501836201159e565b9150608085015162012a1260c08601826001600160a01b03169052565b5060a08501516001600160a01b03811660e08601525060c085015161010062012a45818701836001600160a01b03169052565b60e087015161012087810191909152908701516101408088019190915290870151610160808801919091529087015161018080880191909152908701516101a080880191909152908701516101c080880191909152908701516101e08088019190915290870151610200808801919091529087015161022080880191909152908701516102408088019190915290870151610260808801919091529087015191506102809062012b1882880184805182526020810151602083015260408101516040830152606081015160608301525050565b87015180516103008801526020808201516103208901526040808301516103408a0152606090920151610360890152918801516001600160a01b0316938701939093526102a08701516103a087015285840381870152601184527048797065726472697665466163746f727960781b9084015250810162010721565b600061010080835262012baa8184018c62011643565b6001600160a01b039a8b166020850152988a16604084015250509487166060860152928616608085015290851660a0840152841660c083015290921660e090920191909152919050565b60006001820162012c095762012c0962011b2d565b5060010190565b85815284602082015283604082015282606082015260a060808201526000620109d560a083018462011f35565b8381528260208201526060604082015260006200ae3b606083018462011f35565b82516001600160a01b031681526102808101602084015162012c8b60208401826001600160a01b03169052565b50604084015162012ca760408401826001600160a01b03169052565b50606084015160608301526080840151608083015260a084015160a083015260c084015160c083015260e084015160e08301526101008085015181840152506101208085015181840152506101408085015181840152506101608085015162012d1a828501826001600160a01b03169052565b5050610180848101516001600160a01b03908116918401919091526101a0808601518216908401526101c0808601518216908401526101e0808601518051918501919091526020810151610200850152604081015161022085015260600151610240840152831661026083015262000833565b60608152600062012da260608301866201159e565b82810360208481019190915285518083528682019282019060005b8181101562012de45784516001600160801b03168352938301939183019160010162012dbd565b505084810360408601526201011581876201159e565b60008262012e0c5762012e0c62011c6b565b600160ff1b82146000198414161562012e295762012e2962011b2d565b50059056fe6101006040523480156200001257600080fd5b506040516200203538038062002035833981016040819052620000359162000298565b8230818189898960006200004a8482620003e8565b506001620000598382620003e8565b5060ff81166080524660a0526200006f6200011e565b60c0525050600680546001600160a01b038086166001600160a01b03199283168117909355600780549186169190921617905560405190915033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050505090151560e052600c55506200053292505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620001529190620004b4565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001e257600080fd5b81516001600160401b0380821115620001ff57620001ff620001ba565b604051601f8301601f19908116603f011681019082821181831017156200022a576200022a620001ba565b81604052838152602092508660208588010111156200024857600080fd5b600091505b838210156200026c57858201830151818301840152908201906200024d565b6000602085830101528094505050505092915050565b805180151581146200029357600080fd5b919050565b60008060008060008060c08789031215620002b257600080fd5b86516001600160401b0380821115620002ca57600080fd5b620002d88a838b01620001d0565b97506020890151915080821115620002ef57600080fd5b50620002fe89828a01620001d0565b955050604087015160ff811681146200031657600080fd5b60608801519094506001600160a01b03811681146200033457600080fd5b9250620003446080880162000282565b915060a087015190509295509295509295565b600181811c908216806200036c57607f821691505b6020821081036200038d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003e3576000816000526020600020601f850160051c81016020861015620003be5750805b601f850160051c820191505b81811015620003df57828155600101620003ca565b5050505b505050565b81516001600160401b03811115620004045762000404620001ba565b6200041c8162000415845462000357565b8462000393565b602080601f8311600181146200045457600084156200043b5750858301515b600019600386901b1c1916600185901b178555620003df565b600085815260208120601f198616915b82811015620004855788860151825594840194600190910190840162000464565b5085821015620004a45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620004c48162000357565b60018281168015620004df5760018114620004f55762000526565b60ff198416875282151583028701945062000526565b8760005260208060002060005b858110156200051d5781548a82015290840190820162000502565b50505082870194505b50929695505050505050565b60805160a05160c05160e051611a9f62000596600039600081816103d4015281816105e701528181610701015281816109e001528181610a7f01528181610dbe0152610e20015260006109bc01526000610987015260006103140152611a9f6000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80637a8c63b511610125578063b7009613116100ad578063dd62ed3e1161007c578063dd62ed3e1461051a578063e688747b14610545578063ea7ca2761461057b578063ed0d0efb146105b2578063f2fde38b146105d257600080fd5b8063b7009613146104b8578063bf7e214f146104cb578063c53a3985146104de578063d505accf1461050757600080fd5b806395d89b41116100f457806395d89b41146104545780639dc29fac1461045c578063a0712d681461046f578063a9059cbb14610482578063aed307771461049557600080fd5b80637a8c63b5146103cf5780637a9e5e4b146103f65780637ecebe00146104095780638da5cb5b1461042957600080fd5b806323b872dd116101a857806342966c681161017757806342966c68146103635780634b5159da1461037657806367aff4841461038957806370a082311461039c578063728b952b146103bc57600080fd5b806323b872dd146102fc578063313ce5671461030f5780633644e5151461034857806340c10f191461035057600080fd5b8063095ea7b3116101ef578063095ea7b3146102915780630bade8a4146102b45780630ea9b75b146102d757806318160ddd146102ea578063239c70ae146102f357600080fd5b806305f05a941461022157806306a36aee1461023657806306fdde0314610269578063088a4ed01461027e575b600080fd5b61023461022f366004611502565b6105e5565b005b61025661024436600461153b565b60096020526000908152604090205481565b6040519081526020015b60405180910390f35b610271610671565b6040516102609190611558565b61023461028c3660046115a7565b6106ff565b6102a461029f3660046115c0565b61075c565b6040519015158152602001610260565b6102a46102c2366004611609565b600a6020526000908152604090205460ff1681565b6102346102e5366004611635565b6107c9565b61025660025481565b610256600c5481565b6102a461030a36600461167c565b6108a1565b6103367f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610260565b610256610983565b61023461035e3660046115c0565b6109de565b6102346103713660046115a7565b610a7d565b6102346103843660046116bd565b610ae2565b6102346103973660046116d9565b610b74565b6102566103aa36600461153b565b60036020526000908152604090205481565b6102346103ca366004611707565b610c3c565b6102a47f000000000000000000000000000000000000000000000000000000000000000081565b61023461040436600461153b565b610cc5565b61025661041736600461153b565b60056020526000908152604090205481565b60065461043c906001600160a01b031681565b6040516001600160a01b039091168152602001610260565b610271610daf565b61023461046a3660046115c0565b610dbc565b61023461047d3660046115a7565b610e1e565b6102a46104903660046115c0565b610eb9565b6102a46104a336600461153b565b600d6020526000908152604090205460ff1681565b6102a46104c6366004611735565b610f1f565b60075461043c906001600160a01b031681565b61043c6104ec36600461153b565b6008602052600090815260409020546001600160a01b031681565b61023461051536600461177c565b61101d565b610256610528366004611707565b600460209081526000928352604080842090915290825290205481565b6102a46105533660046117ea565b6001600160e01b0319166000908152600b602052604090205460ff919091161c600116151590565b6102a461058936600461181d565b6001600160a01b0391909116600090815260096020526040902054600160ff9092161c16151590565b6102566105c0366004611609565b600b6020526000908152604090205481565b6102346105e036600461153b565b611261565b7f00000000000000000000000000000000000000000000000000000000000000001561064657610621336000356001600160e01b0319166112df565b6106465760405162461bcd60e51b815260040161063d90611849565b60405180910390fd5b6001600160a01b03919091166000908152600d60205260409020805460ff1916911515919091179055565b6000805461067e90611880565b80601f01602080910402602001604051908101604052809291908181526020018280546106aa90611880565b80156106f75780601f106106cc576101008083540402835291602001916106f7565b820191906000526020600020905b8154815290600101906020018083116106da57829003601f168201915b505050505081565b7f0000000000000000000000000000000000000000000000000000000000000000156107575761073b336000356001600160e01b0319166112df565b6107575760405162461bcd60e51b815260040161063d90611849565b600c55565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906107b79086815260200190565b60405180910390a35060015b92915050565b6107df336000356001600160e01b0319166112df565b6107fb5760405162461bcd60e51b815260040161063d906118ba565b801561082b576001600160e01b031982166000908152600b602052604090208054600160ff86161b179055610852565b6001600160e01b031982166000908152600b602052604090208054600160ff86161b191690555b816001600160e01b0319168360ff167fbfe16b2c35ce23dfd1ab0e7b5d086a10060c9b52d1574e1680c881b3b3a2b15183604051610894911515815260200190565b60405180910390a3505050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146108fd576108d883826118f6565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906109259084906118f6565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020611a4a8339815191529061096e9087815260200190565b60405180910390a360019150505b9392505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146109b9576109b4611389565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000015610a3657610a1a336000356001600160e01b0319166112df565b610a365760405162461bcd60e51b815260040161063d90611849565b336000908152600d602052604090205460ff16610a6f57600c54811115610a6f5760405162461bcd60e51b815260040161063d90611909565b610a798282611423565b5050565b7f000000000000000000000000000000000000000000000000000000000000000015610ad557610ab9336000356001600160e01b0319166112df565b610ad55760405162461bcd60e51b815260040161063d90611849565b610adf338261147d565b50565b610af8336000356001600160e01b0319166112df565b610b145760405162461bcd60e51b815260040161063d906118ba565b6001600160e01b031982166000818152600a6020908152604091829020805460ff191685151590811790915591519182527f36d28126bef21a4f3765d7fcb7c45cead463ae4c41094ef3b771ede598544103910160405180910390a25050565b610b8a336000356001600160e01b0319166112df565b610ba65760405162461bcd60e51b815260040161063d906118ba565b8015610bd5576001600160a01b03831660009081526009602052604090208054600160ff85161b179055610bfb565b6001600160a01b03831660009081526009602052604090208054600160ff85161b191690555b8160ff16836001600160a01b03167f4c9bdd0c8e073eb5eda2250b18d8e5121ff27b62064fbeeeed4869bb99bc5bf283604051610894911515815260200190565b610c52336000356001600160e01b0319166112df565b610c6e5760405162461bcd60e51b815260040161063d906118ba565b6001600160a01b0382811660008181526008602052604080822080546001600160a01b0319169486169485179055517fa4908e11a5f895b13d51526c331ac93cdd30e59772361c5d07874eb36bff20659190a35050565b6006546001600160a01b0316331480610d5a575060075460405163b700961360e01b81526001600160a01b039091169063b700961390610d1990339030906001600160e01b0319600035169060040161194b565b602060405180830381865afa158015610d36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5a9190611978565b610d6357600080fd5b600780546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6001805461067e90611880565b7f000000000000000000000000000000000000000000000000000000000000000015610e1457610df8336000356001600160e01b0319166112df565b610e145760405162461bcd60e51b815260040161063d90611849565b610a79828261147d565b7f000000000000000000000000000000000000000000000000000000000000000015610e7657610e5a336000356001600160e01b0319166112df565b610e765760405162461bcd60e51b815260040161063d90611849565b336000908152600d602052604090205460ff16610eaf57600c54811115610eaf5760405162461bcd60e51b815260040161063d90611909565b610adf3382611423565b33600090815260036020526040812080548391908390610eda9084906118f6565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020611a4a833981519152906107b79086815260200190565b6001600160a01b038083166000908152600860205260408120549091168015610fbb5760405163b700961360e01b81526001600160a01b0382169063b700961390610f729088908890889060040161194b565b602060405180830381865afa158015610f8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb39190611978565b91505061097c565b6001600160e01b031983166000908152600a602052604090205460ff168061101457506001600160e01b031983166000908152600b60209081526040808320546001600160a01b03891684526009909252909120541615155b95945050505050565b4284101561106d5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f45585049524544000000000000000000604482015260640161063d565b60006001611079610983565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015611185573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906111bb5750876001600160a01b0316816001600160a01b0316145b6111f85760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b604482015260640161063d565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b611277336000356001600160e01b0319166112df565b6112935760405162461bcd60e51b815260040161063d906118ba565b600680546001600160a01b0319166001600160a01b03831690811790915560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b6007546000906001600160a01b03168015801590611369575060405163b700961360e01b81526001600160a01b0382169063b7009613906113289087903090889060040161194b565b602060405180830381865afa158015611345573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113699190611978565b8061138157506006546001600160a01b038581169116145b949350505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516113bb9190611995565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546114359190611a36565b90915550506001600160a01b038216600081815260036020908152604080832080548601905551848152600080516020611a4a83398151915291015b60405180910390a35050565b6001600160a01b038216600090815260036020526040812080548392906114a59084906118f6565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020611a4a83398151915290602001611471565b6001600160a01b0381168114610adf57600080fd5b8015158114610adf57600080fd5b6000806040838503121561151557600080fd5b8235611520816114df565b91506020830135611530816114f4565b809150509250929050565b60006020828403121561154d57600080fd5b813561097c816114df565b60006020808352835180602085015260005b818110156115865785810183015185820160400152820161156a565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156115b957600080fd5b5035919050565b600080604083850312156115d357600080fd5b82356115de816114df565b946020939093013593505050565b80356001600160e01b03198116811461160457600080fd5b919050565b60006020828403121561161b57600080fd5b61097c826115ec565b803560ff8116811461160457600080fd5b60008060006060848603121561164a57600080fd5b61165384611624565b9250611661602085016115ec565b91506040840135611671816114f4565b809150509250925092565b60008060006060848603121561169157600080fd5b833561169c816114df565b925060208401356116ac816114df565b929592945050506040919091013590565b600080604083850312156116d057600080fd5b611520836115ec565b6000806000606084860312156116ee57600080fd5b83356116f9816114df565b925061166160208501611624565b6000806040838503121561171a57600080fd5b8235611725816114df565b91506020830135611530816114df565b60008060006060848603121561174a57600080fd5b8335611755816114df565b92506020840135611765816114df565b9150611773604085016115ec565b90509250925092565b600080600080600080600060e0888a03121561179757600080fd5b87356117a2816114df565b965060208801356117b2816114df565b955060408801359450606088013593506117ce60808901611624565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156117fd57600080fd5b61180683611624565b9150611814602084016115ec565b90509250929050565b6000806040838503121561183057600080fd5b823561183b816114df565b915061181460208401611624565b6020808252601d908201527f45524332304d696e7461626c653a206e6f7420617574686f72697a6564000000604082015260600190565b600181811c9082168061189457607f821691505b6020821081036118b457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156107c3576107c36118e0565b60208082526022908201527f45524332304d696e7461626c653a20496e76616c6964206d696e7420616d6f756040820152611b9d60f21b606082015260800190565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b60006020828403121561198a57600080fd5b815161097c816114f4565b60008083548160018260011c915060018316806119b357607f831692505b602080841082036119d257634e487b7160e01b86526022600452602486fd5b8180156119e657600181146119fb57611a28565b60ff1986168952841515850289019650611a28565b60008a81526020902060005b86811015611a205781548b820152908501908301611a07565b505084890196505b509498975050505050505050565b808201808211156107c3576107c36118e056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212200955870bf9fec1ec20fed2a6e9697581499564616d0d5e565935f42d0f4415e464736f6c634300081600336080604052600180546001600160a01b0319168117815560025534801561002557600080fd5b506040516118f43803806118f48339810160408190526100449161006d565b600061005082826101c1565b5050610280565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561008057600080fd5b82516001600160401b038082111561009757600080fd5b818501915085601f8301126100ab57600080fd5b8151818111156100bd576100bd610057565b604051601f8201601f19908116603f011681019083821181831017156100e5576100e5610057565b8160405282815288868487010111156100fd57600080fd5b600093505b8284101561011f5784840186015181850187015292850192610102565b600086848301015280965050505050505092915050565b600181811c9082168061014a57607f821691505b60208210810361016a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101bc576000816000526020600020601f850160051c810160208610156101995750805b601f850160051c820191505b818110156101b8578281556001016101a5565b5050505b505050565b81516001600160401b038111156101da576101da610057565b6101ee816101e88454610136565b84610170565b602080601f831160018114610223576000841561020b5750858301515b600019600386901b1c1916600185901b1785556101b8565b600085815260208120601f198616915b8281101561025257888601518255948401946001909101908401610233565b50858210156102705787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6116658061028f6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80630ecaea731161005b5780630ecaea73146100ff57806354fd4d5014610112578063600eb4ba14610138578063d13053bb1461016e57600080fd5b806304baa00b1461008257806306fdde03146100cc5780630710fd58146100d4575b600080fd5b6100b6604051806040016040528060158152602001744552433230466f72776172646572466163746f727960581b81525081565b6040516100c391906103fe565b60405180910390f35b6100b6610184565b6100e76100e236600461044d565b610212565b6040516001600160a01b0390911681526020016100c3565b6100e761010d36600461044d565b6102e7565b6100b6604051806040016040528060078152602001660ec625c605c62760cb1b81525081565b61014f6001546002546001600160a01b0390911691565b604080516001600160a01b0390931683526020830191909152016100c3565b6101766103c4565b6040519081526020016100c3565b6000805461019190610485565b80601f01602080910402602001604051908101604052809291908181526020018280546101bd90610485565b801561020a5780601f106101df5761010080835404028352916020019161020a565b820191906000526020600020905b8154815290600101906020018083116101ed57829003601f168201915b505050505081565b604080516001600160a01b03841660208201529081018290526000908190606001604051602081830303815290604052805190602001209050600060ff60f81b308360405180602001610264906103f1565b6020820181038252601f19601f82011660405250805190602001206040516020016102c694939291906001600160f81b031994909416845260609290921b6bffffffffffffffffffffffff191660018401526015830152603582015260550190565b60408051808303601f19018152919052805160209091012095945050505050565b6002819055600180546001600160a01b0319166001600160a01b0384169081179091556040805160208101929092528101829052600090819060600160405160208183030381529060405280519060200120905060008160405161034a906103f1565b8190604051809103906000f590508015801561036a573d6000803e3d6000fd5b5090506103778585610212565b6001600160a01b0316816001600160a01b0316146103a75760405162e0775560e61b815260040160405180910390fd5b600180546001600160a01b03191681178155600255949350505050565b6040516103d3602082016103f1565b6020820181038252601f19601f820116604052508051906020012081565b611170806104c083390190565b60006020808352835180602085015260005b8181101561042c57858101830151858201604001528201610410565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806040838503121561046057600080fd5b82356001600160a01b038116811461047757600080fd5b946020939093013593505050565b600181811c9082168061049957607f821691505b6020821081036104b957634e487b7160e01b600052602260045260246000fd5b5091905056fe60c060405234801561001057600080fd5b50604080516330075a5d60e11b815281513392839263600eb4ba92600480830193928290030181865afa15801561004b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061006f9190610084565b60a0526001600160a01b0316608052506100be565b6000806040838503121561009757600080fd5b82516001600160a01b03811681146100ae57600080fd5b6020939093015192949293505050565b60805160a05161100861016860003960008181610183015281816102f5015281816103a9015281816104a70152818161055201528181610664015281816107190152818161078801528181610a4d0152610bf50152600081816102ad0152818161031e015281816103ef015281816104d0015281816105a00152818161069d01528181610742015281816107d801528181610a8a01528181610b6b0152610c3301526110086000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806354fd4d50116100a2578063a9059cbb11610071578063a9059cbb14610265578063d505accf14610278578063dd62ed3e1461028d578063f698da25146102a0578063fc0c546a146102a857600080fd5b806354fd4d501461020457806370a082311461022a5780637ecebe001461023d57806395d89b411461025d57600080fd5b806318160ddd116100de57806318160ddd146101b357806323b872dd146101bb57806330adf81f146101ce578063313ce567146101f557600080fd5b806304baa00b1461011057806306fdde0314610153578063095ea7b31461015b57806317d70f7c1461017e575b600080fd5b61013d6040518060400160405280600e81526020016d22a92199182337b93bb0b93232b960911b81525081565b60405161014a9190610d57565b60405180910390f35b61013d6102e7565b61016e610169366004610da6565b61039a565b604051901515815260200161014a565b6101a57f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161014a565b6101a5610498565b61016e6101c9366004610dd0565b610543565b6101a57f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6040516012815260200161014a565b61013d604051806040016040528060078152602001660ec625c605c62760cb1b81525081565b6101a5610238366004610e0c565b610655565b6101a561024b366004610e0c565b60006020819052908152604090205481565b61013d61070a565b61016e610273366004610da6565b610779565b61028b610286366004610e2e565b610873565b005b6101a561029b366004610ea1565b610b41565b6101a5610ca5565b6102cf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161014a565b604051622b600360e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201526060907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169062ad800c906024015b600060405180830381865afa15801561036d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103959190810190610eea565b905090565b6040516313b4b5ab60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b038381166024830152604482018390523360648301526000917f000000000000000000000000000000000000000000000000000000000000000090911690634ed2d6ac90608401600060405180830381600087803b15801561043557600080fd5b505af1158015610449573d6000803e3d6000fd5b50506040518481526001600160a01b03861692503391507f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906020015b60405180910390a35060015b92915050565b60405163bd85b03960e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bd85b03990602401602060405180830381865afa15801561051f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103959190610f97565b604051633912022f60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b0384811660248301528381166044830152606482018390523360848301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e44808bc9060a401600060405180830381600087803b1580156105e657600080fd5b505af11580156105fa573d6000803e3d6000fd5b50505050826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161064391815260200190565b60405180910390a35060019392505050565b604051631b2b776160e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b0382811660248301526000917f000000000000000000000000000000000000000000000000000000000000000090911690633656eec290604401602060405180830381865afa1580156106e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190610f97565b604051634e41a1fb60e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201526060907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634e41a1fb90602401610350565b604051633912022f60e21b81527f0000000000000000000000000000000000000000000000000000000000000000600482015233602482018190526001600160a01b0384811660448401526064830184905260848301919091526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e44808bc9060a401600060405180830381600087803b15801561081e57600080fd5b505af1158015610832573d6000803e3d6000fd5b50506040518481526001600160a01b03861692503391507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610486565b834211156108945760405163f87d927160e01b815260040160405180910390fd5b6001600160a01b0387166108bb5760405163f0dd15fd60e01b815260040160405180910390fd5b6001600160a01b038716600090815260208190526040812054906108dd610ca5565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960208201526001600160a01b03808d1692820192909252908a1660608201526080810189905260a0810184905260c0810188905260e0016040516020818303038152906040528051906020012060405160200161097692919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa1580156109e1573d6000803e3d6000fd5b505050602060405103519050896001600160a01b0316816001600160a01b031614610a1f57604051638baa579f60e01b815260040160405180910390fd5b6001600160a01b03808b1660008181526020819052604090819020600187019055516313b4b5ab60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201528b83166024820152604481018b905260648101919091527f000000000000000000000000000000000000000000000000000000000000000090911690634ed2d6ac90608401600060405180830381600087803b158015610ad057600080fd5b505af1158015610ae4573d6000803e3d6000fd5b50505050886001600160a01b03168a6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258a604051610b2d91815260200190565b60405180910390a350505050505050505050565b60405163e985e9c560e01b81526001600160a01b03838116600483015282811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e985e9c590604401602060405180830381865afa158015610bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd89190610fb0565b15610be65750600019610492565b6040516321ff32a960e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b03848116602483015283811660448301527f000000000000000000000000000000000000000000000000000000000000000016906321ff32a990606401602060405180830381865afa158015610c7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9e9190610f97565b9050610492565b60408051808201825260018152603160f81b60209182015281517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc681840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b60005b83811015610d4e578181015183820152602001610d36565b50506000910152565b6020815260008251806020840152610d76816040850160208701610d33565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610da157600080fd5b919050565b60008060408385031215610db957600080fd5b610dc283610d8a565b946020939093013593505050565b600080600060608486031215610de557600080fd5b610dee84610d8a565b9250610dfc60208501610d8a565b9150604084013590509250925092565b600060208284031215610e1e57600080fd5b610e2782610d8a565b9392505050565b600080600080600080600060e0888a031215610e4957600080fd5b610e5288610d8a565b9650610e6060208901610d8a565b95506040880135945060608801359350608088013560ff81168114610e8457600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610eb457600080fd5b610ebd83610d8a565b9150610ecb60208401610d8a565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610efc57600080fd5b815167ffffffffffffffff80821115610f1457600080fd5b818401915084601f830112610f2857600080fd5b815181811115610f3a57610f3a610ed4565b604051601f8201601f19908116603f01168101908382118183101715610f6257610f62610ed4565b81604052828152876020848701011115610f7b57600080fd5b610f8c836020830160208801610d33565b979650505050505050565b600060208284031215610fa957600080fd5b5051919050565b600060208284031215610fc257600080fd5b81518015158114610e2757600080fdfea2646970667358221220ee1cb7d5f76ec1c2296e71e21a48870e0fe181819680ea74eff08324e0293c8064736f6c63430008160033a26469706673582212200da520628eb3acabc24d50369667c781fc0ffd758c625a3f87c71295d1ee41ca64736f6c6343000816003360806040523480156200001157600080fd5b506040516200276338038062002763833981016040819052620000349162000072565b600180546001600160a01b031916331790556000620000548282620001d8565b5050620002a4565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200008657600080fd5b82516001600160401b03808211156200009e57600080fd5b818501915085601f830112620000b357600080fd5b815181811115620000c857620000c86200005c565b604051601f8201601f19908116603f01168101908382118183101715620000f357620000f36200005c565b8160405282815288868487010111156200010c57600080fd5b600093505b8284101562000130578484018601518185018701529285019262000111565b600086848301015280965050505050505092915050565b600181811c908216806200015c57607f821691505b6020821081036200017d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001d3576000816000526020600020601f850160051c81016020861015620001ae5750805b601f850160051c820191505b81811015620001cf57828155600101620001ba565b5050505b505050565b81516001600160401b03811115620001f457620001f46200005c565b6200020c8162000205845462000147565b8462000183565b602080601f8311600181146200024457600084156200022b5750858301515b600019600386901b1c1916600185901b178555620001cf565b600085815260208120601f198616915b82811015620002755788860151825594840194600190910190840162000254565b5085821015620002945787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6124af80620002b46000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063a587bbe1116100b8578063e2f273bd1161007c578063e2f273bd14610394578063e967e388146103a7578063ea350321146103ba578063f32c9e34146103da578063f59d00b9146103fa578063f851a4401461040257600080fd5b8063a587bbe114610303578063b73e3fab1461032e578063bc30e7a11461034e578063d2f72d5214610361578063daac24da1461038157600080fd5b80634db6c0e0116100ff5780634db6c0e01461023457806354fd4d50146102545780636e95d67c1461027a578063716ba5f61461028c5780639b724ad4146102ac57600080fd5b806304baa00b1461013c57806306fdde031461018357806318bb3b541461018b5780631ff30ad2146101ff5780632ad19de814610214575b600080fd5b61016d6040518060400160405280601281526020017148797065726472697665526567697374727960701b81525081565b60405161017a9190611e2c565b60405180910390f35b61016d610415565b6101f2610199366004611e46565b6040805180820190915260008082526020820152506040805180820182526001600160a01b0392831660008181526005602081815294822080546001600160801b03168552929091528352600101549092169082015290565b60405161017a9190611e6f565b61021261020d366004611edb565b6104a3565b005b610227610222366004611e46565b61086e565b60405161017a9190611fe2565b610247610242366004611ff5565b6109fd565b60405161017a9190612037565b61016d604051806040016040528060078152602001660ec625c605c62760cb1b81525081565b6004545b60405190815260200161017a565b61029f61029a366004612097565b610b47565b60405161017a91906120b9565b6102f46102ba366004611e46565b6040805160208082018352600091829052825180820184526001600160a01b039490941682526003905220546001600160801b0316815290565b6040519051815260200161017a565b610316610311366004612106565b610c47565b6040516001600160a01b03909116815260200161017a565b61034161033c366004611ff5565b610c77565b60405161017a9190612171565b61029f61035c366004612097565b610f07565b61037461036f366004611ff5565b611007565b60405161017a91906121d5565b61031661038f366004612106565b6112c9565b6102126103a2366004611e46565b6112de565b6102126103b536600461222c565b611352565b6103cd6103c8366004611ff5565b6116fe565b60405161017a9190612298565b6103ed6103e8366004611e46565b6117e9565b60405161017a91906122d1565b60025461027e565b600154610316906001600160a01b031681565b60008054610422906122e4565b80601f016020809104026020016040519081016040528092919081815260200182805461044e906122e4565b801561049b5780601f106104705761010080835404028352916020019161049b565b820191906000526020600020905b81548152906001019060200180831161047e57829003601f168201915b505050505081565b6001546001600160a01b031633146104cd576040516282b42960e81b815260040160405180910390fd5b84831415806104dc5750848114155b156104fa5760405163aaad13f760e01b815260040160405180910390fd5b60005b858110156108655760006005600089898581811061051d5761051d61231e565b90506020020160208101906105329190611e46565b6001600160a01b031681526020810191909152604001600020546001600160801b031690508585838181106105695761056961231e565b905060200201602081019061057e9190612334565b6001600160801b031615801561059357508015155b1561061c5760008484848181106105ac576105ac61231e565b90506020020160208101906105c19190611e46565b6001600160a01b0316146105e857604051637a44db9560e01b815260040160405180910390fd5b6106178888848181106105fd576105fd61231e565b90506020020160208101906106129190611e46565b61187e565b61079f565b85858381811061062e5761062e61231e565b90506020020160208101906106439190612334565b6001600160801b03161580159061065957508015155b156106db576106178888848181106106735761067361231e565b90506020020160208101906106889190611e46565b87878581811061069a5761069a61231e565b90506020020160208101906106af9190612334565b8686868181106106c1576106c161231e565b90506020020160208101906106d69190611e46565b6119d4565b8585838181106106ed576106ed61231e565b90506020020160208101906107029190612334565b6001600160801b031615801590610717575080155b15610799576106178888848181106107315761073161231e565b90506020020160208101906107469190611e46565b8787858181106107585761075861231e565b905060200201602081019061076d9190612334565b86868681811061077f5761077f61231e565b90506020020160208101906107949190611e46565b611b1b565b5061085d565b8383838181106107b1576107b161231e565b90506020020160208101906107c69190611e46565b6001600160a01b03168686848181106107e1576107e161231e565b90506020020160208101906107f69190612334565b6001600160801b03168989858181106108115761081161231e565b90506020020160208101906108269190611e46565b6001600160a01b03167fdcdda2b8267b8fe0ebfeb2cc8f266807b412bec096d16cbbe576d46d122553e060405160405180910390a4505b6001016104fd565b50505050505050565b610876611da4565b6040805160a0810182526001600160a01b0380851660008181526005602081815286832080546001600160801b031687528484529181526001909101549093169284019290925283516306fdde0360e01b8152845187958501936306fdde0392600480820193918290030181865afa1580156108f6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261091e9190810190612373565b8152602001826001600160a01b03166304baa00b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610961573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109899190810190612373565b8152602001826001600160a01b03166354fd4d506040518163ffffffff1660e01b8152600401600060405180830381865afa1580156109cc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109f49190810190612373565b90529392505050565b60608167ffffffffffffffff811115610a1857610a1861235d565b604051908082528060200260200182016040528015610a5d57816020015b6040805180820190915260008082526020820152815260200190600190039081610a365790505b50905060005b82811015610b3f57604051806040016040528060056000878786818110610a8c57610a8c61231e565b9050602002016020810190610aa19190611e46565b6001600160a01b031681526020808201929092526040016000908120546001600160801b03168352910190600590878786818110610ae157610ae161231e565b9050602002016020810190610af69190611e46565b6001600160a01b0390811682526020820192909252604001600020600101541690528251839083908110610b2c57610b2c61231e565b6020908102919091010152600101610a63565b505b92915050565b6060818310610b6957604051633b2735ab60e11b815260040160405180910390fd5b600254821115610b8c5760405163e0f7becb60e01b815260040160405180910390fd5b610b968383612420565b67ffffffffffffffff811115610bae57610bae61235d565b604051908082528060200260200182016040528015610bd7578160200160208202803683370190505b509050825b82811015610b3f5760028181548110610bf757610bf761231e565b6000918252602090912001546001600160a01b031682610c178684612420565b81518110610c2757610c2761231e565b6001600160a01b0390921660209283029190910190910152600101610bdc565b600060028281548110610c5c57610c5c61231e565b6000918252602090912001546001600160a01b031692915050565b60608167ffffffffffffffff811115610c9257610c9261235d565b604051908082528060200260200182016040528015610cee57816020015b610cdb6040518060800160405280600081526020016060815260200160608152602001606081525090565b815260200190600190039081610cb05790505b50905060005b82811015610b3f576000848483818110610d1057610d1061231e565b9050602002016020810190610d259190611e46565b9050604051806080016040528060036000888887818110610d4857610d4861231e565b9050602002016020810190610d5d9190611e46565b6001600160a01b03166001600160a01b0316815260200190815260200160002060000160009054906101000a90046001600160801b03166001600160801b03168152602001826001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610de0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e089190810190612373565b8152602001826001600160a01b03166304baa00b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610e4b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e739190810190612373565b8152602001826001600160a01b03166354fd4d506040518163ffffffff1660e01b8152600401600060405180830381865afa158015610eb6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ede9190810190612373565b815250838381518110610ef357610ef361231e565b602090810291909101015250600101610cf4565b6060818310610f2957604051633b2735ab60e11b815260040160405180910390fd5b600454821115610f4c5760405163e0f7becb60e01b815260040160405180910390fd5b610f568383612420565b67ffffffffffffffff811115610f6e57610f6e61235d565b604051908082528060200260200182016040528015610f97578160200160208202803683370190505b509050825b82811015610b3f5760048181548110610fb757610fb761231e565b6000918252602090912001546001600160a01b031682610fd78684612420565b81518110610fe757610fe761231e565b6001600160a01b0390921660209283029190910190910152600101610f9c565b60608167ffffffffffffffff8111156110225761102261235d565b60405190808252806020026020018201604052801561105b57816020015b611048611da4565b8152602001906001900390816110405790505b50905060005b82811015610b3f57600084848381811061107d5761107d61231e565b90506020020160208101906110929190611e46565b90506040518060a00160405280600560008888878181106110b5576110b561231e565b90506020020160208101906110ca9190611e46565b6001600160a01b031681526020808201929092526040016000908120546001600160801b0316835291019060059088888781811061110a5761110a61231e565b905060200201602081019061111f9190611e46565b6001600160a01b03166001600160a01b0316815260200190815260200160002060010160009054906101000a90046001600160a01b03166001600160a01b03168152602001826001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156111a2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111ca9190810190612373565b8152602001826001600160a01b03166304baa00b6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561120d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112359190810190612373565b8152602001826001600160a01b03166354fd4d506040518163ffffffff1660e01b8152600401600060405180830381865afa158015611278573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a09190810190612373565b8152508383815181106112b5576112b561231e565b602090810291909101015250600101611061565b600060048281548110610c5c57610c5c61231e565b6001546001600160a01b03163314611308576040516282b42960e81b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040517f54e4612788f90384e6843298d7854436f3a585b2c3831ab66abf1de63bfa6c2d90600090a250565b6001546001600160a01b0316331461137c576040516282b42960e81b815260040160405180910390fd5b82811461139c5760405163aaad13f760e01b815260040160405180910390fd5b60005b838110156116f7576000600360008787858181106113bf576113bf61231e565b90506020020160208101906113d49190611e46565b6001600160a01b031681526020810191909152604001600020546001600160801b0316905083838381811061140b5761140b61231e565b90506020020160208101906114209190612334565b6001600160801b031615801561143557508015155b1561146e5761146986868481811061144f5761144f61231e565b90506020020160208101906114649190611e46565b611c60565b611661565b8383838181106114805761148061231e565b90506020020160208101906114959190612334565b6001600160801b0316158015906114ab57508015155b1561153a576114698686848181106114c5576114c561231e565b90506020020160208101906114da9190611e46565b8585858181106114ec576114ec61231e565b90506020020160208101906115019190612334565b6001600160a01b0391909116600090815260036020526040902080546001600160801b0319166001600160801b03909216919091179055565b83838381811061154c5761154c61231e565b90506020020160208101906115619190612334565b6001600160801b031615801590611576575080155b1561165b576114698686848181106115905761159061231e565b90506020020160208101906115a59190611e46565b8585858181106115b7576115b761231e565b90506020020160208101906115cc9190612334565b60028054600181019091557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace810180546001600160a01b039094166001600160a01b0319909416841790556040805180820182526001600160801b03938416815291831660208381019182526000958652600390529320905192518216600160801b0292909116919091179055565b506116ef565b8383838181106116735761167361231e565b90506020020160208101906116889190612334565b6001600160801b03168686848181106116a3576116a361231e565b90506020020160208101906116b89190611e46565b6001600160a01b03167fd840ea8cb042bc840d3e55a04618ab268434d3d0a218638360a30fdb80de63f660405160405180910390a3505b60010161139f565b5050505050565b60608167ffffffffffffffff8111156117195761171961235d565b60405190808252806020026020018201604052801561175957816020015b6040805160208101909152600081528152602001906001900390816117375790505b50905060005b82811015610b3f576040518060200160405280600360008787868181106117885761178861231e565b905060200201602081019061179d9190611e46565b6001600160a01b031681526020810191909152604001600020546001600160801b0316905282518390839081106117d6576117d661231e565b602090810291909101015260010161175f565b6118146040518060800160405280600081526020016060815260200160608152602001606081525090565b604080516080810182526001600160a01b038416600081815260036020908152848220546001600160801b0316845284516306fdde0360e01b81529451879591850193926306fdde0392600480820193918290030181865afa1580156108f6573d6000803e3d6000fd5b6001600160a01b038116600090815260056020526040902054600454600160801b9091046001600160801b0316906118b7600182612420565b826001600160801b03161461196f57600060046118d5600184612420565b815481106118e5576118e561231e565b60009182526020808320909101546001600160a01b03168083526005909152604090912080546001600160801b03808716600160801b81029190921617909155600480549293508392909190811061193f5761193f61231e565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505b600480548061198057611980612441565b60008281526020808220830160001990810180546001600160a01b031990811690915593019093556001600160a01b0395909516855260059091526040842093845560019390930180549093169092555050565b6001600160a01b03808416600090815260056020526040902060010154168015801590611a135750816001600160a01b0316816001600160a01b031614155b80611aab57506001600160a01b038116158015611a3857506001600160a01b03821615155b8015611aab57506040516335a2735f60e11b81526001600160a01b038581166004830152831690636b44e6be90602401602060405180830381865afa158015611a85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa99190612457565b155b15611ac957604051637a44db9560e01b815260040160405180910390fd5b506001600160a01b03928316600090815260056020526040902080546001600160801b0319166001600160801b0393909316929092178255600190910180546001600160a01b03191691909216179055565b6001600160a01b03811615801590611b9a57506040516335a2735f60e11b81526001600160a01b038481166004830152821690636b44e6be90602401602060405180830381865afa158015611b74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b989190612457565b155b15611bb857604051637a44db9560e01b815260040160405180910390fd5b6004805460018082019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b810180546001600160a01b039687166001600160a01b03199182168117909255604080516060810182526001600160801b0397881681529387166020858101918252968916858301908152600094855260059097529220925191518616600160801b0291909516178155915191018054919093169116179055565b6001600160a01b038116600090815260036020526040902054600254600160801b9091046001600160801b031690611c99600182612420565b826001600160801b031614611d515760006002611cb7600184612420565b81548110611cc757611cc761231e565b60009182526020808320909101546001600160a01b03168083526003909152604090912080546001600160801b03808716600160801b810291909216179091556002805492935083929091908110611d2157611d2161231e565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505b6002805480611d6257611d62612441565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03949094168152600390935250506040812055565b6040518060a001604052806000815260200160006001600160a01b031681526020016060815260200160608152602001606081525090565b60005b83811015611df7578181015183820152602001611ddf565b50506000910152565b60008151808452611e18816020860160208601611ddc565b601f01601f19169290920160200192915050565b602081526000611e3f6020830184611e00565b9392505050565b600060208284031215611e5857600080fd5b81356001600160a01b0381168114611e3f57600080fd5b815181526020808301516001600160a01b03169082015260408101610b41565b60008083601f840112611ea157600080fd5b50813567ffffffffffffffff811115611eb957600080fd5b6020830191508360208260051b8501011115611ed457600080fd5b9250929050565b60008060008060008060608789031215611ef457600080fd5b863567ffffffffffffffff80821115611f0c57600080fd5b611f188a838b01611e8f565b90985096506020890135915080821115611f3157600080fd5b611f3d8a838b01611e8f565b90965094506040890135915080821115611f5657600080fd5b50611f6389828a01611e8f565b979a9699509497509295939492505050565b8051825260018060a01b0360208201511660208301526000604082015160a06040850152611fa660a0850182611e00565b905060608301518482036060860152611fbf8282611e00565b91505060808301518482036080860152611fd98282611e00565b95945050505050565b602081526000611e3f6020830184611f75565b6000806020838503121561200857600080fd5b823567ffffffffffffffff81111561201f57600080fd5b61202b85828601611e8f565b90969095509350505050565b602080825282518282018190526000919060409081850190868401855b8281101561208a5761207a848351805182526020908101516001600160a01b0316910152565b9284019290850190600101612054565b5091979650505050505050565b600080604083850312156120aa57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156120fa5783516001600160a01b0316835292840192918401916001016120d5565b50909695505050505050565b60006020828403121561211857600080fd5b5035919050565b80518252600060208201516080602085015261213e6080850182611e00565b9050604083015184820360408601526121578282611e00565b91505060608301518482036060860152611fd98282611e00565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b828110156121c857603f198886030184526121b685835161211f565b9450928501929085019060010161219a565b5092979650505050505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b828110156121c857603f1988860301845261221a858351611f75565b945092850192908501906001016121fe565b6000806000806040858703121561224257600080fd5b843567ffffffffffffffff8082111561225a57600080fd5b61226688838901611e8f565b9096509450602087013591508082111561227f57600080fd5b5061228c87828801611e8f565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b818110156120fa57835151835292840192918401916001016122b4565b602081526000611e3f602083018461211f565b600181811c908216806122f857607f821691505b60208210810361231857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561234657600080fd5b81356001600160801b0381168114611e3f57600080fd5b634e487b7160e01b600052604160045260246000fd5b60006020828403121561238557600080fd5b815167ffffffffffffffff8082111561239d57600080fd5b818401915084601f8301126123b157600080fd5b8151818111156123c3576123c361235d565b604051601f8201601f19908116603f011681019083821181831017156123eb576123eb61235d565b8160405282815287602084870101111561240457600080fd5b612415836020830160208801611ddc565b979650505050505050565b81810381811115610b4157634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60006020828403121561246957600080fd5b81518015158114611e3f57600080fdfea2646970667358221220734c300173b3f0b48428cdeb7b6a08100f181b616dd54facb3dd108f5ce7fa6864736f6c63430008160033608060405234801561001057600080fd5b5060405161054938038061054983398101604081905261002f91610143565b600080546001600160a01b038088166001600160a01b03199283161790925560018054878416908316179055600280548684169083161790556003805492851692909116919091179055805161008c906004906020840190610097565b50505050505061024d565b8280548282559060005260206000209081019282156100ec579160200282015b828111156100ec57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906100b7565b506100f89291506100fc565b5090565b5b808211156100f857600081556001016100fd565b80516001600160a01b038116811461012857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a0868803121561015b57600080fd5b61016486610111565b94506020610173818801610111565b945061018160408801610111565b935061018f60608801610111565b60808801519093506001600160401b03808211156101ac57600080fd5b818901915089601f8301126101c057600080fd5b8151818111156101d2576101d261012d565b8060051b604051601f19603f830116810181811085821117156101f7576101f761012d565b60405291825284820192508381018501918c83111561021557600080fd5b938501935b8285101561023a5761022b85610111565b8452938501939285019261021a565b8096505050505050509295509295909350565b6102ed8061025c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063c415b95c11610066578063c415b95c1461013f578063d2c35ce814610152578063dd2b8fbb14610182578063e3331555146101b2578063f2596458146101c557600080fd5b806310780f73146100985780633e2d2014146100c85780638627a4f0146100fa578063a64c90bf1461012a575b600080fd5b6002546100ab906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f86100d636600461023a565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b005b6100f861010836600461023a565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6101326101d8565b6040516100bf919061026a565b6001546100ab906001600160a01b031681565b6100f861016036600461023a565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6100f861019036600461023a565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546100ab906001600160a01b031681565b6003546100ab906001600160a01b031681565b6060600480548060200260200160405190810160405280929190818152602001828054801561023057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610212575b5050505050905090565b60006020828403121561024c57600080fd5b81356001600160a01b038116811461026357600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156102ab5783516001600160a01b031683529284019291840191600101610286565b5090969550505050505056fea2646970667358221220da9df78d44fafdfc86611be5ae075aba7a537c979fc6c7aa27f52e35c9a5d9c264736f6c63430008160033608060405260026001553480156200001657600080fd5b506040516200412c3803806200412c833981016040819052620000399162000708565b60006200004782826200096d565b508160e0015182610100015110806200007557508160e0015182610100015162000072919062000a39565b15155b156200009457604051630219d66360e11b815260040160405180910390fd5b610100820151600b8190556101208301511080620000c757508160e00151826101200151620000c4919062000a39565b15155b15620000e65760405163f9c0959d60e01b815260040160405180910390fd5b610120820151600c81905561014083015110806200011957508160e0015182610140015162000116919062000a39565b15155b156200013857604051633007ad0160e11b815260040160405180910390fd5b610140820151600d81905561016083015110806200016b57508160e0015182610160015162000168919062000a39565b15155b156200018a5760405163cfb699cb60e01b815260040160405180910390fd5b610160820151600e556101a08201516101808301511115620001bf5760405163ef9bc65f60e01b815260040160405180910390fd5b610180820151600f556101a08201516010556101e08201516101c08301511115620001fd576040516330554de160e01b815260040160405180910390fd5b6101c08201516011556101e082015160125561022082015161020083015111156200023b576040516383ebdfb760e01b815260040160405180910390fd5b61020082015160135561022082015160145561026082015151670de0b6b3a764000010806200027a5750670de0b6b3a764000082610260015160200151115b80620002965750670de0b6b3a764000082610260015160400151115b80620002b25750670de0b6b3a764000082610260015160600151115b15620002d15760405163161071fb60e11b815260040160405180910390fd5b610260820151805160198190556020820151601a556040820151601b55606090910151601c556102408301515111806200031c57508161026001516020015182610240015160200151115b806200033957508161026001516040015182610240015160400151115b806200035657508161026001516060015182610240015160600151115b1562000375576040516315b05a8f60e01b815260040160405180910390fd5b61024082015180516015556020808201516016556040808301516017556060928301516018558451600280546001600160a01b03199081166001600160a01b03938416179091558387015160038054831691841691909117905591860151600480548416918316919091179055608086015160078054841691831691909117905560a086015160088054841691831691909117905560c08601516009805490931691161790559083015180516200043192601d9201906200046e565b5050610280810151600580546001600160a01b0319166001600160a01b039092169190911790556102a081015160065560e00151600a5562000a5c565b828054828255906000526020600020908101928215620004c6579160200282015b82811115620004c657825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200048f565b50620004d4929150620004d8565b5090565b5b80821115620004d45760008155600101620004d9565b634e487b7160e01b600052604160045260246000fd5b6040516102c081016001600160401b03811182821017156200052b576200052b620004ef565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200055c576200055c620004ef565b604052919050565b80516001600160a01b03811681146200057c57600080fd5b919050565b600082601f8301126200059357600080fd5b815160206001600160401b03821115620005b157620005b1620004ef565b8160051b620005c282820162000531565b9283528481018201928281019087851115620005dd57600080fd5b83870192505b848310156200060757620005f78362000564565b82529183019190830190620005e3565b979650505050505050565b6000608082840312156200062557600080fd5b604051608081016001600160401b03811182821017156200064a576200064a620004ef565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600082601f8301126200068d57600080fd5b81516001600160401b03811115620006a957620006a9620004ef565b6020620006bf601f8301601f1916820162000531565b8281528582848701011115620006d457600080fd5b60005b83811015620006f4578581018301518282018401528201620006d7565b506000928101909101919091529392505050565b600080604083850312156200071c57600080fd5b82516001600160401b03808211156200073457600080fd5b9084019061038082870312156200074a57600080fd5b6200075462000505565b6200075f8362000564565b81526200076f6020840162000564565b6020820152620007826040840162000564565b60408201526060830151828111156200079a57600080fd5b620007a88882860162000581565b606083015250620007bc6080840162000564565b6080820152620007cf60a0840162000564565b60a0820152620007e260c0840162000564565b60c082015260e08381015190820152610100808401519082015261012080840151908201526101408084015190820152610160808401519082015261018080840151908201526101a080840151908201526101c080840151908201526101e0808401519082015261020080840151908201526102208084015190820152610240620008708882860162000612565b9082015262000884876102c0850162000612565b61026082015262000899610340840162000564565b61028082015261036092909201516102a0830152602085015191935080821115620008c357600080fd5b50620008d2858286016200067b565b9150509250929050565b600181811c90821680620008f157607f821691505b6020821081036200091257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000968576000816000526020600020601f850160051c81016020861015620009435750805b601f850160051c820191505b8181101562000964578281556001016200094f565b5050505b505050565b81516001600160401b03811115620009895762000989620004ef565b620009a1816200099a8454620008dc565b8462000918565b602080601f831160018114620009d95760008415620009c05750858301515b600019600386901b1c1916600185901b17855562000964565b600085815260208120601f198616915b8281101562000a0a57888601518255948401946001909101908401620009e9565b508582101562000a295787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008262000a5757634e487b7160e01b600052601260045260246000fd5b500690565b6136c08062000a6c6000396000f3fe6080604052600436106103a65760003560e01c80638e127cf5116101e7578063d2c35ce81161010d578063e4e7148f116100a0578063ec895f111161006f578063ec895f1114610ae9578063f259645814610b09578063f8c09e5914610b29578063fe3d5aeb14610b5957600080fd5b8063e4e7148f14610a74578063e71f34b314610a94578063e83e34b114610ab4578063eb71f66c14610ac957600080fd5b8063dd2b8fbb116100dc578063dd2b8fbb14610a09578063e0e2daaa14610a29578063e1b39c8014610a3f578063e333155514610a5457600080fd5b8063d2c35ce81461099d578063d6f50169146109bd578063daac24da146109d3578063daf012e6146109f357600080fd5b8063b256126311610185578063c415b95c11610154578063c415b95c1461093b578063c905a4b51461095b578063d0f96b9214610971578063d23d7ea31461098757600080fd5b8063b2561263146108c3578063bc30e7a1146108e3578063bf9bd5cd14610903578063c17225631461091957600080fd5b806399623bb1116101c157806399623bb11461084e5780639af252621461086e578063a64c90bf1461088e578063a98a46db146108a357600080fd5b80638e127cf5146107f85780638efc09861461081857806397b0e8ce1461082e57600080fd5b80634554f9a9116102cc578063628027a31161026a57806383b361e81161023957806383b361e81461077857806384c19aab1461079857806385229785146107b85780638627a4f0146107d857600080fd5b8063628027a3146106e35780636b44e6be146107035780636e95d67c146107435780636f6d5c4a1461075857600080fd5b80634fbfee77116102a65780634fbfee771461065a57806354fd4d501461067a5780635720c9d5146106ad5780635aa6e675146106c357600080fd5b80634554f9a91461060e578063488007601461062457806349f13de71461063a57600080fd5b80631ecda0fe116103445780632e7cd971116103135780632e7cd9711461059b5780633e2d2014146105ae578063411c3035146105ce578063421caba8146105ee57600080fd5b80631ecda0fe146105025780632885e3ac146105265780632907d3dd146105465780632b58f4181461056657600080fd5b806310d1dc3e1161038057806310d1dc3e1461047557806311e77bfe146104955780631978ebcf146104b55780631b59be0c146104d557600080fd5b806304baa00b146103d557806306fdde031461042857806310780f731461043d57600080fd5b366103d0576002600154036103ce57604051630aac75b560e31b815260040160405180910390fd5b005b600080fd5b3480156103e157600080fd5b506104126040518060400160405280601181526020017048797065726472697665466163746f727960781b81525081565b60405161041f9190612cec565b60405180910390f35b34801561043457600080fd5b50610412610b79565b34801561044957600080fd5b5060085461045d906001600160a01b031681565b6040516001600160a01b03909116815260200161041f565b34801561048157600080fd5b506103ce610490366004612cff565b610c07565b3480156104a157600080fd5b506103ce6104b0366004612d11565b610d20565b3480156104c157600080fd5b506103ce6104d0366004612d11565b610df9565b3480156104e157600080fd5b506104f56104f0366004612d2a565b610e7b565b60405161041f9190612d9f565b34801561050e57600080fd5b50610518600f5481565b60405190815260200161041f565b34801561053257600080fd5b506103ce610541366004612cff565b610f56565b34801561055257600080fd5b506103ce610561366004612d11565b6110bc565b34801561057257600080fd5b5061045d610581366004612e14565b60208052600090815260409020546001600160a01b031681565b61045d6105a93660046130ee565b61113e565b3480156105ba57600080fd5b506103ce6105c9366004612e14565b611580565b3480156105da57600080fd5b506103ce6105e93660046131cf565b6115f4565b3480156105fa57600080fd5b506103ce610609366004612e14565b6117c5565b34801561061a57600080fd5b5061051860105481565b34801561063057600080fd5b5061051860145481565b34801561064657600080fd5b5061045d6106553660046131fb565b6118ce565b34801561066657600080fd5b506103ce610675366004612d11565b6119c0565b34801561068657600080fd5b50610412604051806040016040528060078152602001660ec625c605c62760cb1b81525081565b3480156106b957600080fd5b50610518600b5481565b3480156106cf57600080fd5b5060025461045d906001600160a01b031681565b3480156106ef57600080fd5b506103ce6106fe366004612d11565b611a1d565b34801561070f57600080fd5b5061073361071e366004612e14565b60226020526000908152604090205460ff1681565b604051901515815260200161041f565b34801561074f57600080fd5b50602154610518565b34801561076457600080fd5b506103ce610773366004612d11565b611a9f565b34801561078457600080fd5b506103ce610793366004612d11565b611b43565b3480156107a457600080fd5b506103ce6107b3366004612d11565b611bc5565b3480156107c457600080fd5b506103ce6107d3366004612e14565b611c47565b3480156107e457600080fd5b506103ce6107f3366004612e14565b611cbb565b34801561080457600080fd5b506103ce610813366004612d11565b611d2f565b34801561082457600080fd5b50610518600e5481565b34801561083a57600080fd5b506103ce610849366004612d11565b611dd3565b34801561085a57600080fd5b5060055461045d906001600160a01b031681565b34801561087a57600080fd5b506103ce610889366004612d2a565b611e55565b34801561089a57600080fd5b506104f5611ebd565b3480156108af57600080fd5b506103ce6108be366004612e14565b611f1f565b3480156108cf57600080fd5b506103ce6108de366004612e14565b611f93565b3480156108ef57600080fd5b506104f56108fe36600461328f565b612007565b34801561090f57600080fd5b5061051860125481565b34801561092557600080fd5b5061092e612109565b60405161041f91906132b1565b34801561094757600080fd5b5060075461045d906001600160a01b031681565b34801561096757600080fd5b5061051860065481565b34801561097d57600080fd5b50610518600a5481565b34801561099357600080fd5b5061051860115481565b3480156109a957600080fd5b506103ce6109b8366004612e14565b612161565b3480156109c957600080fd5b5061051860135481565b3480156109df57600080fd5b5061045d6109ee366004612d11565b6121d5565b3480156109ff57600080fd5b50610518600d5481565b348015610a1557600080fd5b506103ce610a24366004612e14565b612205565b348015610a3557600080fd5b50610518600c5481565b348015610a4b57600080fd5b50601e54610518565b348015610a6057600080fd5b5060045461045d906001600160a01b031681565b348015610a8057600080fd5b5060035461045d906001600160a01b031681565b348015610aa057600080fd5b506103ce610aaf366004612d11565b612279565b348015610ac057600080fd5b5061092e61231d565b348015610ad557600080fd5b506103ce610ae4366004612d11565b612375565b348015610af557600080fd5b506104f5610b0436600461328f565b61240d565b348015610b1557600080fd5b5060095461045d906001600160a01b031681565b348015610b3557600080fd5b50610733610b44366004612e14565b601f6020526000908152604090205460ff1681565b348015610b6557600080fd5b5061045d610b74366004612d11565b61250f565b60008054610b86906132dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb2906132dc565b8015610bff5780601f10610bd457610100808354040283529160200191610bff565b820191906000526020600020905b815481529060010190602001808311610be257829003601f168201915b505050505081565b6002546001600160a01b03163314610c31576040516282b42960e81b815260040160405180910390fd5b60408051608081018252601954808252601a546020830152601b5492820192909252601c5460608201529082351180610c71575080602001518260200135115b80610c83575080604001518260400135115b80610c95575080606001518260600135115b15610cb3576040516315b05a8f60e01b815260040160405180910390fd5b81356015819055602080840135601681905560408086013560178190556060808801356018819055835196875294860193909352908401528201527fe1c45f8aeb543f30b37cc2fccfbac0f32cc8f234284df921d71cff04e51ef421906080015b60405180910390a15050565b6002546001600160a01b03163314610d4a576040516282b42960e81b815260040160405180910390fd5b80600b54610d589190613310565b151580610d71575080600c54610d6e9190613310565b15155b80610d88575080600d54610d859190613310565b15155b80610d9f575080600e54610d9c9190613310565b15155b15610dbd576040516311b75c1560e31b815260040160405180910390fd5b600a8190556040518181527f04ed835b488b4fcf0a212a46ed67cbbffc2fc81b5cb6a12c546572cbf7b7e06a906020015b60405180910390a150565b6002546001600160a01b03163314610e23576040516282b42960e81b815260040160405180910390fd5b601254811115610e4657604051631670f79760e01b815260040160405180910390fd5b60118190556040518181527faab0ee9100629c405a4d75336e1640cc81e0608fb0d7f17389c06ee8d4f0219190602001610dee565b60215460609067ffffffffffffffff811115610e9957610e99612e31565b604051908082528060200260200182016040528015610ec2578160200160208202803683370190505b50905060005b82811015610f4e5760206000858584818110610ee657610ee6613332565b9050602002016020810190610efb9190612e14565b6001600160a01b0390811682526020820192909252604001600020548351911690839083908110610f2e57610f2e613332565b6001600160a01b0390921660209283029190910190910152600101610ec8565b505b92915050565b6002546001600160a01b03163314610f80576040516282b42960e81b815260040160405180910390fd5b6040805160808101825260155481526016546020820152601754918101919091526018546060820152670de0b6b3a764000082351180610fcb5750670de0b6b3a76400008260200135115b80610fe15750670de0b6b3a76400008260400135115b80610ff75750670de0b6b3a76400008260600135115b80611003575080518235105b80611015575080602001518260200135105b80611027575080604001518260400135105b80611039575080606001518260600135105b156110575760405163161071fb60e11b815260040160405180910390fd5b81356019819055602080840135601a819055604080860135601b819055606080880135601c819055835196875294860193909352908401528201527f8c6093c7e65dd862e88162770c4e156e8a0da57d25d961e0fb6f28cfb7ff89a790608001610d14565b6002546001600160a01b031633146110e6576040516282b42960e81b815260040160405180910390fd5b601054811115611109576040516328a2d9a960e01b815260040160405180910390fd5b600f8190556040518181527f41f729b931ad8e33d697fff6bc6736a1ac6ee09e8265efae2794ac1635c217a690602001610dee565b6001600160a01b0389166000908152601f602052604081205460ff1661117757604051636e623f0f60e01b815260040160405180910390fd5b611182888686612524565b60408051336020808301919091528183018e905282518083038401815260608301938490528051910120631d321d7560e31b9092526000916001600160a01b038d169163e990eba8916111df918e908e908e908a90606401613459565b6020604051808303816000875af11580156111fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122291906134a9565b90508a60206000836001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600460009054906101000a90046001600160a01b03168961014001906001600160a01b031690816001600160a01b0316815250508a6001600160a01b03167fb25b0f0f93209be08152122f1321f6b0ef559a93a67695fff5fea3e5ed234465828c8c8c6040516112e194939291906134c6565b60405180910390a26021805460018082019092557f3a6357012c1a3ae0a17d304c9920310382d968ebcc4b1771f41c6b304205b5700180546001600160a01b0319166001600160a01b03848116918217909255600090815260226020908152604091829020805460ff1916851790559280558051339381019390935282018e90528c16906316abfc7090349060600160405160208183030381529060405280519060200120338b8b8a6040518763ffffffff1660e01b81526004016113aa959493929190613518565b60206040518083038185885af11580156113c8573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906113ed919061357b565b50600260015560005b601d5481101561149a57816001600160a01b0316637180c8ca601d838154811061142257611422613332565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260016024820152604401600060405180830381600087803b15801561147657600080fd5b505af115801561148a573d6000803e3d6000fd5b5050600190920191506113f69050565b506004805460405163ab033ea960e01b81526001600160a01b039182169281019290925282169063ab033ea990602401600060405180830381600087803b1580156114e457600080fd5b505af11580156114f8573d6000803e3d6000fd5b50479250508115905061157057604051600090339083908381818185875af1925050503d8060008114611547576040519150601f19603f3d011682016040523d82523d6000602084013e61154c565b606091505b505090508061156e576040516312171d8360e31b815260040160405180910390fd5b505b509b9a5050505050505050505050565b6002546001600160a01b031633146115aa576040516282b42960e81b815260040160405180910390fd5b600980546001600160a01b0319166001600160a01b0383169081179091556040517fae062fb82c932c653cd44617343ecda1d13e375e0d6f20d969c944fbda1963d390600090a250565b6002546001600160a01b0316331480159061161a57506003546001600160a01b03163314155b15611637576040516282b42960e81b815260040160405180910390fd5b6001600160a01b0382166000908152601f602052604090205460ff1661167057604051634bf121ab60e01b815260040160405180910390fd5b816001600160a01b0316601e828154811061168d5761168d613332565b6000918252602090912001546001600160a01b0316146116c057604051630f2700cb60e21b815260040160405180910390fd5b6001600160a01b0382166000908152601f60205260409020805460ff19169055601e80546116f0906001906135aa565b8154811061170057611700613332565b600091825260209091200154601e80546001600160a01b03909216918390811061172c5761172c613332565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550601e80548061176b5761176b6135bd565b600082815260208120820160001990810180546001600160a01b03191690559091019091556040516001600160a01b038416917f709b7450bfafda93efd91d29149870a794637ac9d696ca61625fd2f53548afe091a25050565b6002546001600160a01b031633148015906117eb57506003546001600160a01b03163314155b15611808576040516282b42960e81b815260040160405180910390fd5b6001600160a01b0381166000908152601f602052604090205460ff16156118425760405163bd34634f60e01b815260040160405180910390fd5b6001600160a01b0381166000818152601f6020526040808220805460ff19166001908117909155601e8054918201815583527f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e3500180546001600160a01b03191684179055517f16ce88285cfd59829a5aa04370a5ec8090a18c14e7e7fb9d4b12a42291c098e39190a250565b6001600160a01b0387166000908152601f602052604081205460ff1661190757604051636e623f0f60e01b815260040160405180910390fd5b611912878686612524565b60408051336020808301919091528183018c90528251808303840181526060830193849052805191012063182a20c360e31b9092526000916001600160a01b038b169163c15106189161196f918c908c908a908a906064016135d3565b6020604051808303816000875af115801561198e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b291906134a9565b9a9950505050505050505050565b6002546001600160a01b031633146119ea576040516282b42960e81b815260040160405180910390fd5b600681905560405181907f395a61259037298d1c4cd4bf177b64ad5995d38a9394573fcd9060d649314ad090600090a250565b6002546001600160a01b03163314611a47576040516282b42960e81b815260040160405180910390fd5b601354811015611a6a57604051630a35539d60e41b815260040160405180910390fd5b60148190556040518181527fa9e7961bb3342715dbecc208087a6a9df8986d524b3a0a829fd90f5a2f5ba53e90602001610dee565b6002546001600160a01b03163314611ac9576040516282b42960e81b815260040160405180910390fd5b600b54811080611ae45750600a54611ae19082613310565b15155b80611af05750600d5481115b15611b0e5760405163f9c0959d60e01b815260040160405180910390fd5b600c8190556040518181527f31407ddd1722f500b8aa2c18e112398626dd7c2869a5f80731ec30b244d9b5f290602001610dee565b6002546001600160a01b03163314611b6d576040516282b42960e81b815260040160405180910390fd5b601454811115611b9057604051635a8f655760e01b815260040160405180910390fd5b60138190556040518181527f490eb2a91746aa933c9ffe2f7939aa06498f3259139f8805f008b12c8c697a4690602001610dee565b6002546001600160a01b03163314611bef576040516282b42960e81b815260040160405180910390fd5b600f54811015611c1257604051637edc061360e11b815260040160405180910390fd5b60108190556040518181527f0e56d83f54e6f5b08716a54b3abdb59b3025bf12c1875c87ab98ab081d6f838190602001610dee565b6002546001600160a01b03163314611c71576040516282b42960e81b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040517f03aa5b0fb65014eea89fda04a7bc11742014881f3c078f2c75b7226ce10d941890600090a250565b6002546001600160a01b03163314611ce5576040516282b42960e81b815260040160405180910390fd5b600880546001600160a01b0319166001600160a01b0383169081179091556040517fc049058b1df2dd8902739ceb78992df12fa8369c06c450b3c6787137b452fdd290600090a250565b6002546001600160a01b03163314611d59576040516282b42960e81b815260040160405180910390fd5b600a54811080611d745750600a54611d719082613310565b15155b80611d805750600c5481115b15611d9e57604051630219d66360e11b815260040160405180910390fd5b600b8190556040518181527f6f8175cdbac1b4d238abba24a17d2554d7b9750bbeda6414e191c478384b763190602001610dee565b6002546001600160a01b03163314611dfd576040516282b42960e81b815260040160405180910390fd5b601154811015611e205760405163019cfb7b60e61b815260040160405180910390fd5b60128190556040518181527f4fa35c11ce9a45ae882c154ecb53ab5cac52a74a5b9b0373be36deb30c78297890602001610dee565b6002546001600160a01b03163314611e7f576040516282b42960e81b815260040160405180910390fd5b611e8b601d8383612c37565b507f2a85276cf604a3822e19b29a3e97aebfbc47a19025c2e8f6e80b3af774dcbc388282604051610d14929190613612565b6060601d805480602002602001604051908101604052809291908181526020018280548015611f1557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611ef7575b5050505050905090565b6002546001600160a01b03163314611f49576040516282b42960e81b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b0383169081179091556040517f6f717fb0ab51206dea4064a35c94c2784f8714b012fbde820e0ddee36265eb6a90600090a250565b6002546001600160a01b03163314611fbd576040516282b42960e81b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0383169081179091556040517f9d3e522e1e47a2f6009739342b9cc7b252a1888154e843ab55ee1c81745795ab90600090a250565b606081831061202957604051633b2735ab60e11b815260040160405180910390fd5b60215482111561204c5760405163e0f7becb60e01b815260040160405180910390fd5b61205683836135aa565b67ffffffffffffffff81111561206e5761206e612e31565b604051908082528060200260200182016040528015612097578160200160208202803683370190505b509050825b82811015610f4e57602181815481106120b7576120b7613332565b9060005260206000200160009054906101000a90046001600160a01b031682858303815181106120e9576120e9613332565b6001600160a01b039092166020928302919091019091015260010161209c565b6121346040518060800160405280600081526020016000815260200160008152602001600081525090565b50604080516080810182526015548152601654602082015260175491810191909152601854606082015290565b6002546001600160a01b0316331461218b576040516282b42960e81b815260040160405180910390fd5b600780546001600160a01b0319166001600160a01b0383169081179091556040517fe5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f90600090a250565b6000602182815481106121ea576121ea613332565b6000918252602090912001546001600160a01b031692915050565b6002546001600160a01b0316331461222f576040516282b42960e81b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040517ff3e07b4bb4394f2ff320bd1dd151551dff304d5e948b401d8558b228482c97d890600090a250565b6002546001600160a01b031633146122a3576040516282b42960e81b815260040160405180910390fd5b600c548110806122be5750600a546122bb9082613310565b15155b806122ca5750600e5481115b156122e857604051633007ad0160e11b815260040160405180910390fd5b600d8190556040518181527fe9ef3e93dff799d4db8a12ff79e0918a5a78d75b10527864f4b1c920f6f4f17890602001610dee565b6123486040518060800160405280600081526020016000815260200160008152602001600081525090565b50604080516080810182526019548152601a546020820152601b5491810191909152601c54606082015290565b6002546001600160a01b0316331461239f576040516282b42960e81b815260040160405180910390fd5b600d548110806123ba5750600a546123b79082613310565b15155b156123d85760405163cfb699cb60e01b815260040160405180910390fd5b600e8190556040518181527f866fe9485f9983afceaa1385307b6eb0fd3df5a250ae2b0bf76dc9ddd316926b90602001610dee565b606081831061242f57604051633b2735ab60e11b815260040160405180910390fd5b601e548211156124525760405163e0f7becb60e01b815260040160405180910390fd5b61245c83836135aa565b67ffffffffffffffff81111561247457612474612e31565b60405190808252806020026020018201604052801561249d578160200160208202803683370190505b509050825b82811015610f4e57601e81815481106124bd576124bd613332565b9060005260206000200160009054906101000a90046001600160a01b031682858303815181106124ef576124ef613332565b6001600160a01b03909216602092830291909101909101526001016124a2565b6000601e82815481106121ea576121ea613332565b600b54836101000151108061253f5750600c54836101000151115b8061255b5750600a548361010001516125589190613310565b15155b1561257957604051635428734d60e01b815260040160405180910390fd5b600d548360e0015110806125925750600e548360e00151115b806125b057508261010001518360e001516125ad9190613310565b15155b156125ce5760405163253fffcf60e11b815260040160405180910390fd5b600f548360c0015110806125e757506010548360c00151115b156126055760405163ef9bc65f60e01b815260040160405180910390fd5b6019546101c08401515111806126395750601a5460e08401516101c085015160200151612637916301e1338090612895565b115b8061264e5750601b546101c084015160400151115b806126635750601c546101c084015160600151115b8061267557506015546101c084015151105b8061269e575060165460e08401516101c08501516020015161269c916301e13380906128bb565b105b806126b357506017546101c084015160400151105b806126c857506018546101c084015160600151105b156126e657604051632d8768f960e01b815260040160405180910390fd5b6011548210806126f7575060125482115b15612715576040516330554de160e01b815260040160405180910390fd5b600061273a6611c37937e0800061273485671bc16d674ec800006128d9565b906128f5565b60135490915061274a90826128f5565b82108061277d575061277a612771671bc16d674ec8000061276b86856128f5565b9061290b565b60145490612920565b82115b1561279b576040516383ebdfb760e01b815260040160405180910390fd5b60006127ab838660e00151612935565b60055460408701519192506001600160a01b0391821691161415806127d65750600654856060015114155b806127f557506007546101608601516001600160a01b03908116911614155b8061281457506008546101808601516001600160a01b03908116911614155b8061283357506009546101a08601516001600160a01b03908116911614155b8061285257506004546101408601516001600160a01b03908116911614155b80612861575061012085015115155b1561287f5760405163e8c02dd760e01b815260040160405180910390fd5b3061014086015261012090940193909352505050565b60008260001904841183021582026128ac57600080fd5b50910281810615159190040190565b60008260001904841183021582026128d257600080fd5b5091020490565b60006128ee83670de0b6b3a7640000846128bb565b9392505050565b600081831161290457816128ee565b5090919050565b60006128ee8383670de0b6b3a76400006128bb565b600081831161292f57826128ee565b50919050565b600080612966612957612949866064613660565b66a5bbed86c5a0009061290b565b6748cd4072281e0000906128d9565b905061297a670de0b6b3a7640000826128d9565b90506129d28161276b6129a56129a061299b89670de0b6b3a7640000613677565b6129da565b612a08565b6129cc6129a06129ba8a8a6301e133806128bb565b61299b90670de0b6b3a7640000613677565b906128d9565b949350505050565b60006001600160ff1b03821115612a045760405163396ea70160e11b815260040160405180910390fd5b5090565b6000808213612a2a5760405163e61b497560e01b815260040160405180910390fd5b506fffffffffffffffffffffffffffffffff811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f19820190612ab69084901c6129da565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b828054828255906000526020600020908101928215612c8a579160200282015b82811115612c8a5781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190612c57565b50612a049291505b80821115612a045760008155600101612c92565b6000815180845260005b81811015612ccc57602081850181015186830182015201612cb0565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006128ee6020830184612ca6565b60006080828403121561292f57600080fd5b600060208284031215612d2357600080fd5b5035919050565b60008060208385031215612d3d57600080fd5b823567ffffffffffffffff80821115612d5557600080fd5b818501915085601f830112612d6957600080fd5b813581811115612d7857600080fd5b8660208260051b8501011115612d8d57600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b81811015612de05783516001600160a01b031683529284019291840191600101612dbb565b50909695505050505050565b6001600160a01b0381168114612e0157600080fd5b50565b8035612e0f81612dec565b919050565b600060208284031215612e2657600080fd5b81356128ee81612dec565b634e487b7160e01b600052604160045260246000fd5b6040516101e0810167ffffffffffffffff81118282101715612e6b57612e6b612e31565b60405290565b600082601f830112612e8257600080fd5b813567ffffffffffffffff80821115612e9d57612e9d612e31565b604051601f8301601f19908116603f01168101908282118183101715612ec557612ec5612e31565b81604052838152866020858801011115612ede57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060808284031215612f1057600080fd5b6040516080810181811067ffffffffffffffff82111715612f3357612f33612e31565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b60006102408284031215612f7757600080fd5b612f7f612e47565b9050612f8a82612e04565b8152612f9860208301612e04565b6020820152612fa960408301612e04565b6040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e0820152610100808301358183015250610120808301358183015250610140613006818401612e04565b90820152610160613018838201612e04565b9082015261018061302a838201612e04565b908201526101a061303c838201612e04565b908201526101c061304f84848301612efe565b9082015292915050565b60006060828403121561306b57600080fd5b6040516060810167ffffffffffffffff828210818311171561308f5761308f612e31565b81604052829350843591506130a382612dec565b90825260208401359081151582146130ba57600080fd5b81602084015260408501359150808211156130d457600080fd5b506130e185828601612e71565b6040830152505092915050565b6000806000806000806000806000806103608b8d03121561310e57600080fd5b8a35995061311e60208c01612e04565b985060408b013567ffffffffffffffff8082111561313b57600080fd5b6131478e838f01612e71565b99506131568e60608f01612f64565b98506102a08d013591508082111561316d57600080fd5b6131798e838f01612e71565b97506102c08d013596506102e08d013595506103008d013594506103208d01359150808211156131a857600080fd5b506131b58d828e01613059565b9250506103408b013590509295989b9194979a5092959850565b600080604083850312156131e257600080fd5b82356131ed81612dec565b946020939093013593505050565b600080600080600080600080610320898b03121561321857600080fd5b88359750602089013561322a81612dec565b96506132398a60408b01612f64565b955061028089013567ffffffffffffffff81111561325657600080fd5b6132628b828c01612e71565b989b979a5095986102a0810135976102c082013597506102e0820135965061030090910135945092505050565b600080604083850312156132a257600080fd5b50508035926020909101359150565b8151815260208083015190820152604080830151908201526060808301519082015260808101610f50565b600181811c908216806132f057607f821691505b60208210810361292f57634e487b7160e01b600052602260045260246000fd5b60008261332d57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b80516001600160a01b03168252602081015161336f60208401826001600160a01b03169052565b50604081015161338a60408401826001600160a01b03169052565b50606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e0830152610100808201518184015250610120808201518184015250610140808201516133f0828501826001600160a01b03169052565b5050610160818101516001600160a01b0390811691840191909152610180808301518216908401526101a080830151909116908301526101c09081015180519183019190915260208101516101e083015260408101516102008301526060015161022090910152565b60006102c087835280602084015261347381840188612ca6565b90506134826040840187613348565b8281036102808401526134958186612ca6565b915050826102a08301529695505050505050565b6000602082840312156134bb57600080fd5b81516128ee81612dec565b6001600160a01b03851681526102a0602082018190526000906134eb83820187612ca6565b90506134fa6040840186613348565b82810361028084015261350d8185612ca6565b979650505050505050565b858152600060018060a01b03808716602084015285604084015284606084015260a060808401528084511660a0840152506020830151151560c08301526040830151606060e084015261356f610100840182612ca6565b98975050505050505050565b60006020828403121561358d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610f5057610f50613594565b634e487b7160e01b600052603160045260246000fd5b60006102c08783526135e86020840188613348565b806102608401526135fb81840187612ca6565b61028084019590955250506102a001529392505050565b60208082528181018390526000908460408401835b8681101561365557823561363a81612dec565b6001600160a01b031682529183019190830190600101613627565b509695505050505050565b8082028115828204841417610f5057610f50613594565b80820180821115610f5057610f5061359456fea264697066735822122014266abc4ae4bf14f143dfaa384d7b2b9abc3942d285d111d00197df908bfa9064736f6c63430008160033608060405234801561001057600080fd5b506123ed806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200002e5760003560e01c80638cc23ce01462000033575b600080fd5b6200004a6200004436600462000399565b62000066565b6040516001600160a01b03909116815260200160405180910390f35b600080888060200190518101906200007f919062000499565b60408051336020820152908101859052909150606001604051602081830303815290604052805190602001208c8c8c8b8b8b8b8b89604051620000c2906200010a565b620000d69998979695949392919062000656565b8190604051809103906000f5905080158015620000f7573d6000803e3d6000fd5b509150505b9a9950505050505050505050565b611c7e806200073a83390190565b634e487b7160e01b600052604160045260246000fd5b604051610200810167ffffffffffffffff8111828210171562000155576200015562000118565b60405290565b600082601f8301126200016d57600080fd5b813567ffffffffffffffff808211156200018b576200018b62000118565b604051601f8301601f19908116603f01168101908282118183101715620001b657620001b662000118565b81604052838152866020858801011115620001d057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b03811681146200020657600080fd5b50565b80356200021681620001f0565b919050565b6000608082840312156200022e57600080fd5b6040516080810181811067ffffffffffffffff8211171562000254576200025462000118565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600061026082840312156200029957600080fd5b620002a36200012e565b9050620002b08262000209565b8152620002c06020830162000209565b6020820152620002d36040830162000209565b6040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e08201526101008083013581830152506101208083013581830152506101408083013581830152506101606200033e81840162000209565b908201526101806200035283820162000209565b908201526101a06200036683820162000209565b908201526101c06200037a83820162000209565b908201526101e06200038f848483016200021b565b9082015292915050565b6000806000806000806000806000806103808b8d031215620003ba57600080fd5b8a3567ffffffffffffffff80821115620003d357600080fd5b620003e18e838f016200015b565b9b50620003f28e60208f0162000285565b9a50620004036102808e0162000209565b99506102a08d01359150808211156200041b57600080fd5b506200042a8d828e016200015b565b9750506200043c6102c08c0162000209565b95506200044d6102e08c0162000209565b94506200045e6103008c0162000209565b93506200046f6103208c0162000209565b9250620004806103408c0162000209565b91506103608b013590509295989b9194979a5092959850565b600060a08284031215620004ac57600080fd5b60405160a0810181811067ffffffffffffffff82111715620004d257620004d262000118565b6040528251620004e281620001f0565b81526020830151620004f481620001f0565b602082015260408301516200050981620001f0565b604082015260608301516200051e81620001f0565b60608201526080928301519281019290925250919050565b80516001600160a01b0316825260208101516200055e60208401826001600160a01b03169052565b5060408101516200057a60408401826001600160a01b03169052565b50606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e083015261010080820151818401525061012080820151818401525061014080820151818401525061016080820151620005ed828501826001600160a01b03169052565b5050610180818101516001600160a01b03908116918401919091526101a0808301518216908401526101c080830151909116908301526101e090810151805191830191909152602081015161020083015260408101516102208301526060015161024090910152565b60006103e08083528b518082850152600091505b808210156200068e576020828e01015161040083860101526020820191506200066a565b6104009150600082828601015281601f19601f83011685010192505050620006ba602083018b62000536565b6001600160a01b038981166102808401528881166102a08401528781166102c08401528681166102e08401528581166103008401528481166103208401528351811661034084015260208401518116610360840152604084015181166103808401526060840151166103a083015260808301516103c0830152620000fc56fe6103c06040523480156200001257600080fd5b5060405162001c7e38038062001c7e8339810160408190526200003591620007a0565b6001600081905588516001600160a01b0390811660809081526020808c0151831660a0908152918c01516101a052908b01516101c05260c0808c01516101e090815260e0808e015161020052610120808f0151909352610100808f0151909152610140808f0151909152908d01805151909252815190920151909152805160409081015161016052905160609081015161018052908b01518216610240528a01516102605288166102205281908a908a908a908a908a908a908a908a90620000fe89826200096d565b506001600160a01b03948516610280529284166102a0529083166102c05282166102e052811661030052845181166103208190526020860151821661034052604086015182166103605260608601518216610380526080808701516103a0525162000173955090911692509050600162000183565b5050505050505050505062000a7b565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620001dd90859083906200024f16565b6200024957604080516001600160a01b038516602482015260006044808301919091528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b179091526200023d9186916200030016565b62000249848262000300565b50505050565b6000806000846001600160a01b0316846040516200026e919062000a39565b6000604051808303816000865af19150503d8060008114620002ad576040519150601f19603f3d011682016040523d82523d6000602084013e620002b2565b606091505b5091509150818015620002e0575080511580620002e0575080806020019051810190620002e0919062000a57565b8015620002f757506000856001600160a01b03163b115b95945050505050565b6000620003176001600160a01b0384168362000373565b905080516000141580156200033f5750808060200190518101906200033d919062000a57565b155b156200036e57604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b606062000383838360006200038a565b9392505050565b606081471015620003b15760405163cd78605960e01b815230600482015260240162000365565b600080856001600160a01b03168486604051620003cf919062000a39565b60006040518083038185875af1925050503d80600081146200040e576040519150601f19603f3d011682016040523d82523d6000602084013e62000413565b606091505b5090925090506200042686838362000430565b9695505050505050565b6060826200044957620004438262000494565b62000383565b81511580156200046157506001600160a01b0384163b155b156200048c57604051639996b31560e01b81526001600160a01b038516600482015260240162000365565b508062000383565b805115620004a55780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b634e487b7160e01b600052604160045260246000fd5b60405161020081016001600160401b0381118282101715620004fd57620004fd620004c1565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200052e576200052e620004c1565b604052919050565b60005b838110156200055357818101518382015260200162000539565b50506000910152565b6001600160a01b0381168114620004be57600080fd5b80516200057f816200055c565b919050565b6000608082840312156200059757600080fd5b604051608081016001600160401b0381118282101715620005bc57620005bc620004c1565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600061026082840312156200060157600080fd5b6200060b620004d7565b9050620006188262000572565b8152620006286020830162000572565b60208201526200063b6040830162000572565b6040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e0820152610100808301518183015250610120808301518183015250610140808301518183015250610160620006a681840162000572565b90820152610180620006ba83820162000572565b908201526101a0620006ce83820162000572565b908201526101c0620006e283820162000572565b908201526101e0620006f78484830162000584565b9082015292915050565b600060a082840312156200071457600080fd5b60405160a081016001600160401b0381118282101715620007395762000739620004c1565b806040525080915082516200074e816200055c565b8152602083015162000760816200055c565b6020820152604083015162000775816200055c565b604082015260608301516200078a816200055c565b6060820152608092830151920191909152919050565b60008060008060008060008060006103e08a8c031215620007c057600080fd5b89516001600160401b0380821115620007d857600080fd5b818c0191508c601f830112620007ed57600080fd5b815181811115620008025762000802620004c1565b62000817601f8201601f191660200162000503565b91508082528d60208285010111156200082f57600080fd5b6200084281602084016020860162000536565b5099506200085690508b60208c01620005ed565b9750620008676102808b0162000572565b9650620008786102a08b0162000572565b9550620008896102c08b0162000572565b94506200089a6102e08b0162000572565b9350620008ab6103008b0162000572565b9250620008bc6103208b0162000572565b9150620008ce8b6103408c0162000701565b90509295985092959850929598565b600181811c90821680620008f257607f821691505b6020821081036200091357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200036e576000816000526020600020601f850160051c81016020861015620009445750805b601f850160051c820191505b81811015620009655782815560010162000950565b505050505050565b81516001600160401b03811115620009895762000989620004c1565b620009a1816200099a8454620008dd565b8462000919565b602080601f831160018114620009d95760008415620009c05750858301515b600019600386901b1c1916600185901b17855562000965565b600085815260208120601f198616915b8281101562000a0a57888601518255948401946001909101908401620009e9565b508582101562000a295787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000825162000a4d81846020870162000536565b9190910192915050565b60006020828403121562000a6a57600080fd5b815180151581146200038357600080fd5b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051610280516102a0516102c0516102e05161030051610320516103405161036051610380516103a0516110ad62000bd16000396000505060005050600050506000505060005050600081816105ee0152818161065a01526107530152600081816105660152818161078301526107e101526000818161051f015261097c0152600081816105ba01526106f00152600081816101ce015281816103900152818161062a0152818161068c015281816106be01528181610724015281816107b6015281816108120152818161094a01526109af0152600050506000505060005050600050506000505060005050600050506000505060005050600050506000505060005050600050506000505060005050600050506110ad6000f3fe6080604052600436106101b75760003560e01c80639032c726116100ec578063d899e1121161008a578063e44808bc11610064578063e44808bc14610588578063eac3e799146105a8578063f3f70707146105dc578063f698da2514610610576101b7565b8063d899e11214610554578063dbbe807014610541578063ded06231146103ca576101b7565b8063a6e8a859116100c6578063a6e8a8591461050d578063ab033ea9146102c7578063cba2e58d14610541578063cbc1343414610304576101b7565b80639032c726146104cd5780639cd241af146104ed578063a22cb4651461049a576101b7565b806330adf81f116101595780634c2ac1d9116101335780634c2ac1d91461046c5780634ed2d6ac1461047f5780637180c8ca1461049a57806377d05ff4146104ba576101b7565b806330adf81f146103f85780633e691db91461042c578063414f826d1461044c576101b7565b806317fad7fc1161019557806317fad7fc1461033e5780631c0f12b61461035e57806321b57d531461037e57806329b23fc1146103ca576101b7565b806301681a62146102c757806302329a29146102e9578063074a6de914610304575b3480156101c357600080fd5b5060003660606000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168585604051610206929190610a85565b600060405180830381855af49150503d8060008114610241576040519150601f19603f3d011682016040523d82523d6000602084013e610246565b606091505b5091509150811561026a57604051638bb0a34b60e01b815260040160405180910390fd5b600061027582610a95565b90506001600160e01b03198116636e64089360e11b1461029757815160208301fd5b8151600319810160048401908152926102b891810160200190602401610b06565b80519650602001945050505050f35b3480156102d357600080fd5b506102e76102e2366004610bcb565b610625565b005b3480156102f557600080fd5b506102e76102e2366004610c04565b34801561031057600080fd5b5061032461031f366004610c31565b610652565b604080519283526020830191909152015b60405180910390f35b34801561034a57600080fd5b506102e7610359366004610ccd565b610687565b34801561036a57600080fd5b506102e7610379366004610d62565b6106b9565b34801561038a57600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610335565b3480156103d657600080fd5b506103ea6103e5366004610daa565b6106e9565b604051908152602001610335565b34801561040457600080fd5b506103ea7f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367381565b34801561043857600080fd5b506103ea610447366004610e04565b61071d565b34801561045857600080fd5b506102e7610467366004610e41565b61074e565b6103ea61047a366004610e63565b61077c565b34801561048b57600080fd5b506102e7610379366004610ec7565b3480156104a657600080fd5b506102e76104b5366004610f11565b6107b1565b6103ea6104c8366004610c31565b6107da565b3480156104d957600080fd5b506102e76104e8366004610f46565b61080d565b3480156104f957600080fd5b506102e7610508366004610fc4565b610945565b34801561051957600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b61032461054f366004610daa565b610974565b34801561056057600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b34801561059457600080fd5b506102e76105a3366004610ffc565b6109aa565b3480156105b457600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b3480156105e857600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b34801561061c57600080fd5b506103ea6109db565b61064e7f0000000000000000000000000000000000000000000000000000000000000000610a69565b5050565b60008061067e7f0000000000000000000000000000000000000000000000000000000000000000610a69565b50935093915050565b6106b07f0000000000000000000000000000000000000000000000000000000000000000610a69565b50505050505050565b6106e27f0000000000000000000000000000000000000000000000000000000000000000610a69565b5050505050565b60006107147f0000000000000000000000000000000000000000000000000000000000000000610a69565b50949350505050565b60006107487f0000000000000000000000000000000000000000000000000000000000000000610a69565b50919050565b6107777f0000000000000000000000000000000000000000000000000000000000000000610a69565b505050565b60006107a77f0000000000000000000000000000000000000000000000000000000000000000610a69565b5095945050505050565b6107777f0000000000000000000000000000000000000000000000000000000000000000610a69565b60006108057f0000000000000000000000000000000000000000000000000000000000000000610a69565b509392505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108426109db565b60405160248101919091527f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367360448201526001600160a01b03808c1660648301528a16608482015288151560a482015260c4810188905260ff871660e4820152610104810186905261012481018590526101440160408051601f198184030181529181526020820180516001600160e01b03166314e5f07b60e01b179052516108eb919061105b565b600060405180830381855af49150503d8060008114610926576040519150601f19603f3d011682016040523d82523d6000602084013e61092b565b606091505b50915091508161093d57805160208201fd5b805160208201f35b61096e7f0000000000000000000000000000000000000000000000000000000000000000610a69565b50505050565b6000806109a07f0000000000000000000000000000000000000000000000000000000000000000610a69565b5094509492505050565b6109d37f0000000000000000000000000000000000000000000000000000000000000000610a69565b505050505050565b60408051808201825260018152603160f81b60209182015281517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc681840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b6060600080836001600160a01b03166000366040516108eb9291905b8183823760009101908152919050565b805160208201516001600160e01b03198082169291906004831015610ac45780818460040360031b1b83161693505b505050919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610afd578181015183820152602001610ae5565b50506000910152565b600060208284031215610b1857600080fd5b815167ffffffffffffffff80821115610b3057600080fd5b818401915084601f830112610b4457600080fd5b815181811115610b5657610b56610acc565b604051601f8201601f19908116603f01168101908382118183101715610b7e57610b7e610acc565b81604052828152876020848701011115610b9757600080fd5b610ba8836020830160208801610ae2565b979650505050505050565b6001600160a01b0381168114610bc857600080fd5b50565b600060208284031215610bdd57600080fd5b8135610be881610bb3565b9392505050565b80358015158114610bff57600080fd5b919050565b600060208284031215610c1657600080fd5b610be882610bef565b60006060828403121561074857600080fd5b600080600060608486031215610c4657600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610c6b57600080fd5b610c7786828701610c1f565b9150509250925092565b60008083601f840112610c9357600080fd5b50813567ffffffffffffffff811115610cab57600080fd5b6020830191508360208260051b8501011115610cc657600080fd5b9250929050565b60008060008060008060808789031215610ce657600080fd5b8635610cf181610bb3565b95506020870135610d0181610bb3565b9450604087013567ffffffffffffffff80821115610d1e57600080fd5b610d2a8a838b01610c81565b90965094506060890135915080821115610d4357600080fd5b50610d5089828a01610c81565b979a9699509497509295939492505050565b60008060008060808587031215610d7857600080fd5b843593506020850135610d8a81610bb3565b92506040850135610d9a81610bb3565b9396929550929360600135925050565b60008060008060808587031215610dc057600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff811115610dec57600080fd5b610df887828801610c1f565b91505092959194509250565b600060208284031215610e1657600080fd5b813567ffffffffffffffff811115610e2d57600080fd5b610e3984828501610c1f565b949350505050565b60008060408385031215610e5457600080fd5b50508035926020909101359150565b600080600080600060a08688031215610e7b57600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff811115610eae57600080fd5b610eba88828901610c1f565b9150509295509295909350565b60008060008060808587031215610edd57600080fd5b843593506020850135610eef81610bb3565b9250604085013591506060850135610f0681610bb3565b939692955090935050565b60008060408385031215610f2457600080fd5b8235610f2f81610bb3565b9150610f3d60208401610bef565b90509250929050565b600080600080600080600060e0888a031215610f6157600080fd5b8735610f6c81610bb3565b96506020880135610f7c81610bb3565b9550610f8a60408901610bef565b945060608801359350608088013560ff81168114610fa757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080600060608486031215610fd957600080fd5b833592506020840135610feb81610bb3565b929592945050506040919091013590565b600080600080600060a0868803121561101457600080fd5b85359450602086013561102681610bb3565b9350604086013561103681610bb3565b925060608601359150608086013561104d81610bb3565b809150509295509295909350565b6000825161106d818460208701610ae2565b919091019291505056fea264697066735822122018e2a10fb3ab4c5ade109ea226f887f2b0732a5a4cb1ef741e6bd25bfbde721d64736f6c63430008160033a2646970667358221220d40118ea3be62884f27429dc51308a38f46b933e473316a03a568c101ab9802264736f6c63430008160033608060405234801561001057600080fd5b50615198806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200002e5760003560e01c80638c98b3c61462000033575b600080fd5b6200004a6200004436600462000273565b62000066565b6040516001600160a01b03909116815260200160405180910390f35b600080838060200190518101906200007f9190620003e8565b6040805133602082015290810185905290915060600160405160208183030381529060405280519060200120868683604051620000bc90620000f8565b620000ca9392919062000485565b8190604051809103906000f5905080158015620000eb573d6000803e3d6000fd5b509150505b949350505050565b614b7380620005f083390190565b634e487b7160e01b600052604160045260246000fd5b604051610200810167ffffffffffffffff8111828210171562000143576200014362000106565b60405290565b6001600160a01b03811681146200015f57600080fd5b50565b80356200016f8162000149565b919050565b6000608082840312156200018757600080fd5b6040516080810181811067ffffffffffffffff82111715620001ad57620001ad62000106565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600082601f830112620001f057600080fd5b813567ffffffffffffffff808211156200020e576200020e62000106565b604051601f8301601f19908116603f0116810190828211818310171562000239576200023962000106565b816040528381528660208588010111156200025357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000808486036102c08112156200028c57600080fd5b610260808212156200029d57600080fd5b620002a76200011c565b9150620002b48762000162565b8252620002c46020880162000162565b6020830152620002d76040880162000162565b6040830152606087013560608301526080870135608083015260a087013560a083015260c087013560c083015260e087013560e08301526101008088013581840152506101208088013581840152506101408088013581840152506101606200034281890162000162565b908301526101806200035688820162000162565b908301526101a06200036a88820162000162565b908301526101c06200037e88820162000162565b908301526101e0620003938989830162000174565b8184015250819550620003a881880162000162565b9450505061028085013567ffffffffffffffff811115620003c857600080fd5b620003d687828801620001de565b949793965093946102a0013593505050565b600060a08284031215620003fb57600080fd5b60405160a0810181811067ffffffffffffffff8211171562000421576200042162000106565b6040528251620004318162000149565b81526020830151620004438162000149565b60208201526040830151620004588162000149565b604082015260608301516200046d8162000149565b60608201526080928301519281019290925250919050565b83516001600160a01b0316815261032081016020850151620004b260208401826001600160a01b03169052565b506040850151620004ce60408401826001600160a01b03169052565b50606085015160608301526080850151608083015260a085015160a083015260c085015160c083015260e085015160e08301526101008086015181840152506101208086015181840152506101408086015181840152506101608086015162000541828501826001600160a01b03169052565b5050610180858101516001600160a01b03908116918401919091526101a0808701518216908401526101c0808701518216908401526101e080870151805191850191909152602080820151610200860152604080830151610220870152606092830151610240870152878416610260870152865184166102808701529086015183166102a086015285015182166102c0850152840151166102e08301526080830151610300830152620000f056fe6103206040523480156200001257600080fd5b5060405162004b7338038062004b738339810160408190526200003591620005e4565b6001600081905583516001600160a01b039081166080818152602080880151841660a0908152828901516101a0528801516101c05260c0808901516101e090815260e0808b015161020052610120808c0151909352610100808c0151909152610140808c0151909152908a0180515190925281518301519052805160409081015161016052905160609081015161018052818a0151861661024052808a01516102605285891661022052875186166102808190529288015186166102a0529087015185166102c0528601519093166102e0528401516103005283926200011c929062000126565b505050506200078a565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620001809085908390620001f216565b620001ec57604080516001600160a01b038516602482015260006044808301919091528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620001e0918691620002a316565b620001ec8482620002a3565b50505050565b6000806000846001600160a01b03168460405162000211919062000735565b6000604051808303816000865af19150503d806000811462000250576040519150601f19603f3d011682016040523d82523d6000602084013e62000255565b606091505b5091509150818015620002835750805115806200028357508080602001905181019062000283919062000766565b80156200029a57506000856001600160a01b03163b115b95945050505050565b6000620002ba6001600160a01b0384168362000316565b90508051600014158015620002e2575080806020019051810190620002e0919062000766565b155b156200031157604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b606062000326838360006200032d565b9392505050565b606081471015620003545760405163cd78605960e01b815230600482015260240162000308565b600080856001600160a01b0316848660405162000372919062000735565b60006040518083038185875af1925050503d8060008114620003b1576040519150601f19603f3d011682016040523d82523d6000602084013e620003b6565b606091505b509092509050620003c9868383620003d3565b9695505050505050565b606082620003ec57620003e68262000437565b62000326565b81511580156200040457506001600160a01b0384163b155b156200042f57604051639996b31560e01b81526001600160a01b038516600482015260240162000308565b508062000326565b805115620004485780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b60405161020081016001600160401b03811182821017156200049657634e487b7160e01b600052604160045260246000fd5b60405290565b6001600160a01b03811681146200046157600080fd5b8051620004bf816200049c565b919050565b600060808284031215620004d757600080fd5b604051608081016001600160401b03811182821017156200050857634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600060a082840312156200054c57600080fd5b60405160a081016001600160401b03811182821017156200057d57634e487b7160e01b600052604160045260246000fd5b8060405250809150825162000592816200049c565b81526020830151620005a4816200049c565b60208201526040830151620005b9816200049c565b60408201526060830151620005ce816200049c565b6060820152608092830151920191909152919050565b6000806000838503610320811215620005fc57600080fd5b610260808212156200060d57600080fd5b6200061762000464565b91506200062486620004b2565b82526200063460208701620004b2565b60208301526200064760408701620004b2565b6040830152606086015160608301526080860151608083015260a086015160a083015260c086015160c083015260e086015160e0830152610100808701518184015250610120808701518184015250610140808701518184015250610160620006b2818801620004b2565b90830152610180620006c6878201620004b2565b908301526101a0620006da878201620004b2565b908301526101c0620006ee878201620004b2565b908301526101e06200070388888301620004c4565b818401525081945062000718818701620004b2565b935050506200072c85610280860162000539565b90509250925092565b6000825160005b818110156200075857602081860181015185830152016200073c565b506000920191825250919050565b6000602082840312156200077957600080fd5b815180151581146200032657600080fd5b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051610280516102a0516102c0516102e0516103005161418f620009e46000396000818161077201528181610ee10152818161220d01528181612aa201528181612be901526130bd0152600081816107f701528181610eb2015281816121de01528181612a8001528181612bc7015261308e015260008181610cf501528181610e83015281816121af01528181612a5e01528181612ba5015261305f015260008181610e54015281816113e00152818161218001528181612a3c01528181612b8301526130300152600081816117a101528181612114015281816129f801528181612b3f0152612fc7015260008181610fb0015261273f015260008181610f810152612702015260008181610d61015281816110e00152818161117001528181611200015281816112900152818161192b015281816119c301528181611b8c015281816122b90152818161238f01526124e60152600061104801526000818161102201526128f7015260008181610ffc01526128d1015260008181610fd601526128ab0152600061139d01526000611377015260006113510152600061132b0152600081816110ba015261291d01526000818161106e015281816115720152612ea201526000818161109401526131ce0152600081816106880152610f5201526000818161083001528181610e2501528181610f230152818161150b0152818161215101528181612a1a01528181612b610152613001015261418f6000f3fe608060405234801561001057600080fd5b50600436106102735760003560e01c80637180c8ca11610151578063bd85b039116100c3578063cf210e6511610087578063cf210e6514610550578063d816574314610563578063e44808bc14610578578063e985e9c51461058b578063fba560081461059e578063fbfa77cf146105cd57600080fd5b8063bd85b039146104fa578063becee9c31461050d578063c55dae631461052d578063c69e16ad14610535578063c6e6f5921461053d57600080fd5b8063a22cb46511610115578063a22cb4651461049e578063ab033ea9146104b1578063af640d0f146104c2578063b0d96580146104ca578063b2016bd4146104df578063b88fed9f146104e757600080fd5b80637180c8ca146104565780637dc0d1d0146104685780637ecebe0014610470578063950c5d03146104835780639cd241af1461048b57600080fd5b806321ff32a9116101ea5780633e691db9116101ae5780633e691db9146103dd57806346fbf68e146103f05780634e41a1fb146104135780634ed2d6ac1461042657806354fd4d501461043957806360246c881461044157600080fd5b806321ff32a91461038d57806328e8fe7d146103a0578063313ce567146103a85780633656eec2146103c25780633a98ef39146103d557600080fd5b80630a4e14931161023c5780630a4e1493146102d957806314e5f07b146102f957806317fad7fc1461030c5780631c0f12b61461031f57806320fc488114610332578063217b7ffe1461037757600080fd5b8062ad800c1461027857806301681a62146102a157806302329a29146102b657806304baa00b146102c957806306fdde03146102d1575b600080fd5b61028b61028636600461341f565b6105d5565b6040516102989190613488565b60405180910390f35b6102b46102af3660046134b0565b61060c565b005b6102b46102c43660046134db565b610615565b61028b61061e565b61028b610663565b6102e161067a565b6040516001600160a01b039091168152602001610298565b6102b4610307366004613507565b6106ba565b6102b461031a3660046135e2565b6106d6565b6102b461032d366004613677565b6106ec565b61034561034036600461341f565b6106ff565b6040805182516001600160801b0390811682526020808501518216908301529282015190921690820152606001610298565b61037f61076b565b604051908152602001610298565b61037f61039b3660046136bf565b6107a3565b6102e16107e9565b6103b0610829565b60405160ff9091168152602001610298565b61037f6103d0366004613701565b6108c4565b61037f6108fd565b61037f6103eb366004613731565b61091c565b6104036103fe3660046134b0565b610927565b6040519015158152602001610298565b61028b61042136600461341f565b610947565b6102b461043436600461376c565b610955565b61028b6109a3565b6104496109d8565b60405161029891906137b6565b6102b4610464366004613857565b5050565b6102e1610ce7565b61037f61047e3660046134b0565b610d27565b6102e1610d53565b6102b4610499366004613885565b610d93565b6102b46104ac366004613857565b610da4565b6102b46104bf3660046134b0565b50565b61037f610e10565b6104d2610f0a565b60405161029891906138bd565b6102e16113d2565b61037f6104f536600461341f565b611412565b61037f61050836600461341f565b611420565b61052061051b3660046139e3565b611442565b6040516102989190613a25565b6102e16114fd565b61037f61153d565b61037f61054b36600461341f565b611557565b61037f61055e36600461341f565b611565565b61056b61159c565b6040516102989190613a69565b6102b4610586366004613b7a565b6116a8565b610403610599366004613bd9565b6116f0565b6105a6611734565b6040805182516001600160801b039081168252602093840151169281019290925201610298565b6102e1611793565b60606106076105e3836117d3565b6040516020016105f39190613488565b6040516020818303038152906040526118fb565b919050565b6104bf8161191f565b6104bf81611b8a565b6060610660604051806040016040528060148152602001734d6f7270686f426c75654879706572647269766560601b8152506040516020016105f39190613488565b90565b606061066060016040516020016105f39190613c07565b604080516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602082015260009161066091016105f3565b6106cb898989898989898989611ca4565b505050505050505050565b6106e4868686868686611e9b565b505050505050565b6106f98484848433611f4f565b50505050565b6040805160608101825260008082526020820181905291810191909152610607600860008481526020019081526020016000206040516020016105f3919081546001600160801b03808216835260809190911c6020830152600190920154909116604082015260600190565b60006106607f00000000000000000000000000000000000000000000000000000000000000006040516020016105f391815260200190565b6000838152600d602090815260408083206001600160a01b03868116855290835281842090851684528252808320548151928301526107e291016105f3565b9392505050565b604080516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602082015260009161066091016105f3565b60006106607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561088c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b09190613cb8565b6040805160ff9092166020830152016105f3565b6000828152600a602090815260408083206001600160a01b03851684528252808320548151928301526108f791016105f3565b92915050565b600061066061090a612110565b6040516020016105f391815260200190565b60006108f7826122a2565b6000610607610935836124e1565b604080519115156020830152016105f3565b60606106076105e3836125c6565b8361095f816126c4565b6001600160a01b0316336001600160a01b03161461099057604051632aab8bd360e01b815260040160405180910390fd5b61099c85858585612781565b5050505050565b6060610660604051806040016040528060078152602001660ec625c605c62760cb1b8152506040516020016105f39190613488565b610a51604051806101e001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000610a5b6127ee565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7654939450926001600160801b0390921691610ac69190613d01565b610ad09190613d14565b905060008215610be25773__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e610afd85612806565b6040805160e084811b6001600160e01b03191682528351600483015260208401516024830152918301516044820152606083015160648201526080830151608482015260a083015160a482015260c083015160c48201529082015160e482015261010082015161010482015261012082015161012482015261014082015161014482015261016090910151610164820152610184016040805180830381865af4158015610bae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd29190613d27565b509050610bdf818461299c565b90505b604080516101e0810182526002546001600160801b038082168352600454600f81900b60208501526006546001600160701b036201000082041695850195909552600160801b9485900482166060850152918490048116608084015260a0830186905260c08301879052600354849004811660e0840152600554808216610100850152918490048116610120840152908390048116610140830152600754808216610160840152929092049091166101808201526000906101a081018415610cb357610cae84866129b1565b610cb6565b60005b81526003546001600160801b0316602091820152604051919250610ce0916105f3918491016137b6565b5050505090565b604080516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602082015260009161066091016105f3565b6001600160a01b0381166000908152600e602090815260408083205481519283015261060791016105f3565b604080516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602082015260009161066091016105f3565b610d9f83838333612781565b505050565b336000818152600c602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600061066061090a6040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000081525060a0902090565b610f12613338565b6106606040518061020001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561113c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111609190613d4c565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c415b95c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f09190613d4c565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166310780f736040518163ffffffff1660e01b8152600401602060405180830381865afa15801561125c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112809190613d4c565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f25964586040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113109190613d4c565b6001600160a01b0316815260200160405180608001604052807f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f00000000000000000000000000000000000000000000000000000000000000008152508152506040516020016105f391906138bd565b604080516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602082015260009161066091016105f3565b600061060761090a836129c6565b6000818152600b602090815260408083205481519283015261060791016105f3565b606060008267ffffffffffffffff81111561145f5761145f613d69565b604051908082528060200260200182016040528015611488578160200160208202803683370190505b50905060005b838110156114e15760008585838181106114aa576114aa613d7f565b905060200201359050600081549050808484815181106114cc576114cc613d7f565b6020908102919091010152505060010161148e565b506114f6816040516020016105f39190613a25565b5092915050565b604080516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602082015260009161066091016105f3565b60006106606009546040516020016105f391815260200190565b600061060761090a83612b0d565b600061060761090a6115977f000000000000000000000000000000000000000000000000000000000000000085613d01565b612c13565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915261066060026040516020016105f3919081546001600160801b038082168352608091821c602084015260018401548082166040850152821c60608401526002840154600f81900b83850152821c60a0840152600384015490811660c0840152811c60e083015260049092015460ff8082161515610100840152600882901c1615156101208301526001600160701b03601082901c1661014083015290911c6101608201526101800190565b846116b2816126c4565b6001600160a01b0316336001600160a01b0316146116e357604051632aab8bd360e01b815260040160405180910390fd5b6106e48686868686611f4f565b6001600160a01b038281166000908152600c60209081526040808320938516835292815282822054835160ff90911615159181019190915290916108f791016105f3565b60408051808201909152600080825260208201526040805180820182526007546001600160801b03808216808452600160801b9092048116602093840190815284519384019290925290511691810191909152610660906060016105f3565b604080516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602082015260009161066091016105f3565b606060f882901c6001600160f81b03831660006117ef82612c57565b9050600083600381111561180557611805613cd5565b03611837576040518060400160405280600d81526020016c048797065726472697665204c5609c1b81525093506118f3565b600183600381111561184b5761184b613cd5565b0361187757806040516020016118619190613d95565b60405160208183030381529060405293506118f3565b600283600381111561188b5761188b613cd5565b036118a157806040516020016118619190613dce565b60038360038111156118b5576118b5613cd5565b036118f3576040518060400160405280601b81526020017f48797065726472697665205769746864726177616c205368617265000000000081525093505b505050919050565b80604051636e64089360e11b81526004016119169190613488565b60405180910390fd5b611927612d0c565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166310780f736040518163ffffffff1660e01b8152600401602060405180830381865afa158015611987573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ab9190613d4c565b9050336001600160a01b03821614801590611a5957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a439190613d4c565b6001600160a01b0316336001600160a01b031614155b8015611a6b5750611a69336124e1565b155b15611a88576040516282b42960e81b815260040160405180910390fd5b6000611a92612110565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038516906370a0823190602401602060405180830381865afa158015611adc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b009190613e08565b9050611b166001600160a01b0385168483612d36565b81611b1f612110565b14611b3d576040516313dd85ff60e31b815260040160405180910390fd5b836001600160a01b0316836001600160a01b03167f951f51ee88c8e42633698bba90d1e53c0954470938036879e691c0232b47e09660405160405180910390a35050506104bf6001600055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa158015611be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0c9190613d4c565b6001600160a01b0316336001600160a01b031614158015611c335750611c31336124e1565b155b15611c50576040516282b42960e81b815260040160405180910390fd5b600680548215156101000261ff00199091161790556040517f7c4d1fe30fdbfda9e9c4c43e759ef32e4db5128d4cb58ff3ae9583b89b6242a590611c9990831515815260200190565b60405180910390a150565b83421115611cc55760405163f87d927160e01b815260040160405180910390fd5b6001600160a01b038716611cec5760405163f0dd15fd60e01b815260040160405180910390fd5b6001600160a01b038781166000818152600e602090815260408083205481518084018f905280830195909552948b166060850152891515608085015260a084019490945260c08084018990528451808503909101815260e08401909452835193019290922061190160f01b61010083015261010282018c90526101228201526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611dda573d6000803e3d6000fd5b505050602060405103519050886001600160a01b0316816001600160a01b031614611e1857604051638baa579f60e01b815260040160405180910390fd5b6001600160a01b038981166000818152600e6020908152604080832080546001019055600c8252808320948d1680845294825291829020805460ff19168c151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050505050505050505050565b6001600160a01b0386161580611eb857506001600160a01b038516155b15611ed65760405163f0dd15fd60e01b815260040160405180910390fd5b828114611ef65760405163174861a760e31b815260040160405180910390fd5b60005b83811015611f4657611f3e858583818110611f1657611f16613d7f565b905060200201358888868686818110611f3157611f31613d7f565b9050602002013533611f4f565b600101611ef9565b50505050505050565b6001600160a01b0384161580611f6c57506001600160a01b038316155b15611f8a5760405163f0dd15fd60e01b815260040160405180910390fd5b836001600160a01b0316816001600160a01b03161461204e576001600160a01b038085166000908152600c602090815260408083209385168352929052205460ff1661204e576000858152600d602090815260408083206001600160a01b0380891685529083528184209085168452909152902054600019811461204c576000868152600d602090815260408083206001600160a01b03808a168552908352818420908616845290915281208054859290612046908490613d14565b90915550505b505b6000858152600a602090815260408083206001600160a01b038816845290915281208054849290612080908490613d14565b90915550506000858152600a602090815260408083206001600160a01b0387168452909152812080548492906120b7908490613d01565b909155505060408051868152602081018490526001600160a01b038086169287821692918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166393c520626122366040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000081525060a0902090565b6040516001600160e01b031960e084901b1681526004810191909152306024820152604401606060405180830381865afa158015612278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229c9190613e69565b51919050565b60006122ac612d0c565b6122b582612d88565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c415b95c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612315573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123399190613d4c565b90506001600160a01b03811661235260208501856134b0565b6001600160a01b03161461237957604051630ad13b3360e21b815260040160405180910390fd5b336001600160a01b0382161480159061242557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156123eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240f9190613d4c565b6001600160a01b0316336001600160a01b031614155b80156124375750612435336124e1565b155b15612454576040516282b42960e81b815260040160405180910390fd5b600061245e6127ee565b600980546000909155909150612475818387612dbe565b93506001600160a01b0383167f3e5eb8642141e29a1b4e5c28b467396f814c1698e1adfc3ff327ddb9a603836185846124b460408a0160208b016134db565b60408051938452602084019290925215159082015260600160405180910390a25050506106076001600055565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a64c90bf6040518163ffffffff1660e01b8152600401600060405180830381865afa158015612542573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261256a9190810190613ece565b905060005b81518110156125bc57836001600160a01b031682828151811061259457612594613d7f565b60200260200101516001600160a01b0316036125b4575060019392505050565b60010161256f565b5060009392505050565b606060f882901c6001600160f81b03831660006125e282612c57565b905060008360038111156125f8576125f8613cd5565b0361262a576040518060400160405280600d81526020016c0485950455244524956452d4c5609c1b81525093506118f3565b600183600381111561263e5761263e613cd5565b0361265457806040516020016118619190613f80565b600283600381111561266857612668613cd5565b0361267e57806040516020016118619190613fb8565b600383600381111561269257612692613cd5565b036118f357505060408051808201909152600d81526c485950455244524956452d575360981b60208201529392505050565b604080513060208083019190915281830193909352815180820383018152606080830184528151918501919091206001600160f81b031960808401527f000000000000000000000000000000000000000000000000000000000000000090911b6bffffffffffffffffffffffff1916608183015260958201527f000000000000000000000000000000000000000000000000000000000000000060b5808301919091528251808303909101815260d5909101909152805191012090565b6000848152600d602090815260408083206001600160a01b0385811680865291845282852090881680865290845293829020869055905185815290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050565b6000612801670de0b6b3a76400006129c6565b905090565b61286a6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e083015260035404821661010082015260055490916101208301916129629116612e57565b81526004546001600160801b03600160801b918290048116602084015260055460409093019261299492900416612e57565b905292915050565b60006107e28383670de0b6b3a7640000612ecd565b60006107e283670de0b6b3a764000084612ecd565b6040516303c2063f60e41b815260009073__$04b283107449142c3a86c88d1d4ad5a326$__90633c2063f090612acc907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000908b90600401613fe4565b602060405180830381865af4158015612ae9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f79190613e08565b6040516349124ca360e01b815260009073__$04b283107449142c3a86c88d1d4ad5a326$$04b283107449142c3a86c88d1d4ad5a326$__90633c2063f090611adc907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000908b90600401613a6c565b602060405180830381865af4158015611af9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113719190613aaf565b6000611b298284613ade565b6115de9084613998565b6002546004546000916105c5916001600160801b0390911690600f0b612a37565b600061008182611b658588886126aa565b90612a5d565b60006001600160801b038211156113a157604051630f0af95160e11b815260040160405180910390fd5b6000818311611ba457826115de565b50919050565b6006546000908190611bcd908490600160801b90046001600160801b03166115e5565b6006546201000090046001600160701b03169250905081811115611d49576000611bf78383613998565b9050611c066111478286612ad2565b60068054601090611c28908490600160801b90046001600160801b0316613a1f565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000611c618583612ae790919063ffffffff16565b90506000611c8f827f00000000000000000000000000000000000000000000000000000000000000006115e5565b90508060096000828254611ca391906137e7565b90915550611cb390508183613998565b9150611cbe82611b6b565b60028054600090611cd99084906001600160801b03166139cb565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611d0682612afc565b60048054600090611d1b908490600f0b613a3f565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055508493505050505b915091565b600080611d5b8785612ae7565b91506000611d89837f00000000000000000000000000000000000000000000000000000000000000006115e5565b9050611db5817f00000000000000000000000000000000000000000000000000000000000000006115e5565b91508315611dd857611dc78282613998565b611dd19084613998565b9250611def565b611de28282613998565b611dec90846137e7565b92505b86861015611e1257611e028387896126aa565b9250611e0f8287896126aa565b91505b509550959350505050565b600080611e3584611e2f8a888a6126aa565b90612ae7565b9050611e428884866126aa565b611e4c90826137e7565b905086811115611e5c5786810391505b509695505050505050565b60006001600160701b038211156113a15760405163086b151760e11b815260040160405180910390fd5b600754600360f81b6000908152600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435490918291611edc916001600160801b031690613998565b905080600003611ef0576001915050611371565b6000611efb85612b26565b905080600003611f1057600192505050611371565b600080611f1e838589612bc2565b9150915080611f34576000945050505050611371565b60008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b8152600401611f70929190613b70565b6040805180830381865af4158015611f8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fb09190613be6565b91509150611fce611fc082611377565b611fc990613c0a565b612d3d565b925082611fe45760009650505050505050611371565b611fed82611b6b565b600780546000906120089084906001600160801b03166139cb565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061203581611b6b565b60078054601090612057908490600160801b90046001600160801b03166139cb565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506001965050505050505092915050565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e6120b487612ed5565b6040518263ffffffff1660e01b81526004016120d09190613c26565b6040805180830381865af41580156120ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121109190613c35565b9150915080612126575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b03169161218c916137e7565b6121969190613998565b9050806000036121ae57506000958695509350505050565b60008087116121be5760006121c9565b6121c98488846126aa565b976001975095505050505050565b6000606060008060008661ffff1667ffffffffffffffff8111156121fd576121fd613c65565b6040519080825280601f01601f191660200182016040528015612227576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612248578692505b828152826000602083013e90999098509650505050505050565b60008061226d6105ca565b905080831161227d576000612287565b6122878184613998565b91506115de827f0000000000000000000000000000000000000000000000000000000000000000612ae7565b600080806122d46122cc88670de0b6b3a7640000613998565b89908761300f565b90508615612316576122e68888612695565b91506123078a8a846123008a670de0b6b3a7640000613998565b8989613035565b925061231383826137e7565b90505b9750975097945050505050565b600061234161233a84670de0b6b3a7640000613998565b8390612695565b6115de90670de0b6b3a7640000613998565b60008061238a85612362611b33565b61236c91906137e7565b600254610ff2908790600160801b90046001600160801b0316613998565b909210949350505050565b60008080806123ec87866123e58b6123df6123b88c670de0b6b3a7640000613998565b7f000000000000000000000000000000000000000000000000000000000000000090612695565b90612695565b919061300f565b9350612418847f00000000000000000000000000000000000000000000000000000000000000006115e5565b9150600061243961243189670de0b6b3a7640000613998565b8a908861300f565b9050612465817f0000000000000000000000000000000000000000000000000000000000000000612695565b9350612491847f00000000000000000000000000000000000000000000000000000000000000006115e5565b61249b90846137e7565b915050945094509450949050565b600080600080600080888810156125185786156124ce576124cb8d898b6126aa565b9c505b6124d98c898b6126aa565b9b506124e48b611377565b6124ed8d611377565b6124f791906137fa565b90506125048b898b6126aa565b9a506125118a898b6126aa565b9950612537565b6125218b611377565b61252a8d611377565b61253491906137fa565b90505b9b9c9a9b999a975050505050505050565b6000826000036125595750846125e9565b81156125ac5761258a61256c84876137e7565b61257685876115e5565b612580888a6115e5565b611e2f91906137e7565b905060006125988588611b95565b9050808210156125a6578091505b506125e9565b8285036125bb575060006125e9565b6125e66125c88487613998565b6125d28587612695565b6125dc888a6115e5565b611e2f9190613998565b90505b95945050505050565b600060016001607f1b0319821280612610575060016001607f1b0382135b156113a15760405163a5353be560e01b815260040160405180910390fd5b60008061263c846000613058565b612647846000613058565b61265191906137fa565b9050600081131561266d5761266681866137e7565b945061268c565b600081121561268c5761267f81613c0a565b6126899086613998565b94505b50929392505050565b60006115de8383670de0b6b3a764000061300f565b60008260001904841183021582026126c157600080fd5b5091020490565b6040516349124ca360e01b815260009073__$04b283107449142c3a86c88d1d4ad5a326$__906349124ca390611adc907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000908b90600401613a6c565b6000806127da866119d6565b905080156129c1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c2bea496040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f0000000000000000000000000000000000000000000000000000000000000000815250612905896119d6565b604080516001600160e01b031960e086901b16815283516001600160a01b0390811660048301526020850151811660248301529184015182166044820152606084015182166064820152608090930151608484015260a4830191909152600060c48301523060e483015288166101048201526101240160408051808303816000875af1158015612999573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129bd9190613be6565b5091505b50949350505050565b60405163350b944160e11b815260040160405180910390fd5b60008080612a046129fc88670de0b6b3a7640000613998565b8990876126aa565b9050861561231657612a1688886115e5565b91506123078a8a84612a308a670de0b6b3a7640000613998565b898961306e565b600080612a44848461307f565b909250905080612a5657612a56611444565b5092915050565b600081600003612a765750670de0b6b3a7640000611371565b82600003612a8657506000611371565b6000612a9183611377565b90506000612aa6612aa186611377565b6130be565b9050818102612abd670de0b6b3a764000082613c7b565b9050612ac8816132e4565b9695505050505050565b60006115de83670de0b6b3a76400008461300f565b60006115de83670de0b6b3a7640000846126aa565b600060016001607f1b038211156113a15760405163a5353be560e01b815260040160405180910390fd5b6003546000908190612b41906001600160801b031684612ad2565b9050612b6d7f0000000000000000000000000000000000000000000000000000000000000000826137e7565b6002546001600160801b03161115611ba4576002547f000000000000000000000000000000000000000000000000000000000000000090612bb89083906001600160801b0316613998565b6115de9190613998565b612bca6136bf565b600080612bd684612ed5565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b8152600401612c119190613c26565b6040805180830381865af4158015612c2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c519190613c35565b9350905082612c66575060009150612d359050565b6000612c8d612c888461016001518561014001516115e590919063ffffffff16565b611377565b612cad612c8885610120015186610100015161269590919063ffffffff16565b612cb791906137fa565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765481830152606081018a9052608081018b905260a0810192909252845160c08301529284015160e08201529290910151610100830152509150600190505b935093915050565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b815260040161213e929190613f94565b6040805180830381865af415801561215a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061217e9190613e9b565b9150915061219c61218e82611c17565b6121979061400a565b612e41565b9250826121b2576000965050505050505061069b565b6121bb82611961565b600780546000906121d69084906001600160801b0316613d15565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061220381611961565b60078054601090612225908490600160801b90046001600160801b0316613d15565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506001965050505050505092915050565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e61228287612fd9565b6040518263ffffffff1660e01b815260040161229e9190614026565b6040805180830381865af41580156122ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122de9190614035565b91509150806122f4575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b03169161235a91613b79565b6123649190613c9a565b90508060000361237c57506000958695509350505050565b600080871161238c576000612397565b6123978488846118ec565b976001975095505050505050565b6000606060008060008661ffff1667ffffffffffffffff8111156123cb576123cb613dd1565b6040519080825280601f01601f1916602001820160405280156123f5576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612416578692505b828152826000602083013e90999098509650505050505050565b600061245187878761244a88670de0b6b3a7640000613c9a565b8787613113565b979650505050505050565b60006114a861249d61247684670de0b6b3a7640000613c9a565b611469670de0b6b3a764000061248c818a612b4f565b6124969190613c9a565b879061284e565b6124af90670de0b6b3a7640000613b79565b611dcd84670de0b6b3a7640000613c9a565b6000806124f8856124d0611920565b6124da9190613b79565b600254610ed3908790600160801b90046001600160801b0316613c9a565b909210949350505050565b60405163bb55fd2760e01b815260040160405180910390fd5b600080600080600061252f898789613136565b909250905061253e8289613c9a565b9750600061254d82888a6118ec565b9050612559818b613c9a565b9a989950979650505050505050565b600082600003612579575084611958565b81156125cc576125aa61258c8487613b79565b6125968587610683565b6125a0888a610683565b611dcd9190613b79565b905060006125b8858861198f565b9050808210156125c6578091505b50611958565b8285036125db57506000611958565b6126066125e88487613c9a565b6125f2858761284e565b6125fc888a610683565b611dcd9190613c9a565b9695505050505050565b6000612638600b600061262460028661120a565b815260200190815260200160002054611c17565b61264a600b600061262460018761120a565b61069b9190613d35565b60006126807f00000000000000000000000000000000000000000000000000000000000000008361284e565b60035461269691906001600160801b0316613b79565b6002546126ac906001600160801b031684610683565b101592915050565b600061069b82600461205f565b6040516303c2063f60e41b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301527f0000000000000000000000000000000000000000000000000000000000000000811660448301527f0000000000000000000000000000000000000000000000000000000000000000811660648301527f00000000000000000000000000000000000000000000000000000000000000001660848201527f000000000000000000000000000000000000000000000000000000000000000060a482015260c4810182905260009073__$04b283107449142c3a86c88d1d4ad5a326$__90633c2063f09060e401602060405180830381865af4158015612809573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069b9190614065565b600061245187878761284788670de0b6b3a7640000613c9a565b87876131b6565b60006106988383670de0b6b3a76400006131c7565b60008080806128b487866128ad8b6114696128868c670de0b6b3a7640000613c9a565b7f00000000000000000000000000000000000000000000000000000000000000009061284e565b91906131c7565b93506128e0847f0000000000000000000000000000000000000000000000000000000000000000610683565b915060006129016128f989670de0b6b3a7640000613c9a565b8a90886131c7565b905061292d817f000000000000000000000000000000000000000000000000000000000000000061284e565b9350612959847f0000000000000000000000000000000000000000000000000000000000000000610683565b6129639084613b79565b915050945094509450949050565b60008183116129805781610698565b5090919050565b60008061299f846129998a888a6131c7565b90612b4f565b9050611de08884866131c7565b600061069883670de0b6b3a7640000846118ec565b6000806129ce84846131ed565b9092509050806129e0576129e0612503565b5092915050565b6040516001600160a01b038481166024830152838116604483015260648201839052612a4e9186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050613229565b50505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052612aa58482613296565b612a4e576040516001600160a01b03848116602483015260006044830152612ada91869182169063095ea7b390606401612a1c565b612a4e8482613229565b600081600003612afd5750670de0b6b3a764000061069b565b82600003612b0d5750600061069b565b6000612b1883611c17565b90506000612b2d612b2886611c17565b613339565b9050818102612b44670de0b6b3a76400008261407e565b90506126068161355f565b600061069883670de0b6b3a7640000846131c7565b600060016001607f1b0382111561198b5760405163a5353be560e01b815260040160405180910390fd5b600060016001607f1b0319821280612bac575060016001607f1b0382135b1561198b5760405163a5353be560e01b815260040160405180910390fd5b600080612bd88460006136f4565b612be38460006136f4565b612bed9190613d35565b90506000811315612c0957612c028186613b79565b9450612c28565b6000811215612c2857612c1b8161400a565b612c259086613c9a565b94505b50929392505050565b6003546000908190612c4c906001600160801b031684612b4f565b9050612c787f000000000000000000000000000000000000000000000000000000000000000082613b79565b6002546001600160801b0316111561199e576002547f000000000000000000000000000000000000000000000000000000000000000090612cc39083906001600160801b0316613c9a565b6114ab9190613c9a565b612cd5613a51565b600080612ce184612fd9565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b8152600401612d1c9190614026565b6040805180830381865af4158015612d38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d5c9190614035565b9350905082612d715750600091506118cb9050565b6000612d98612d9384610160015185610140015161068390919063ffffffff16565b611c17565b612db8612d9385610120015186610100015161284e90919063ffffffff16565b612dc29190613d35565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7654818301526060810199909952608089019990995260a088015250815160c087015281015160e086015290940151610100840152509092600192509050565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063bf3aa15690610476908490600401613bca565b602060405180830381865af4158015610493573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b79190613bd9565b91506104ca6104c58c6117c5565b6117f3565b6002546001600160801b03808216835260048054600f0b6020850152600160801b9092041660408084019190915251635f9d50ab60e11b815273__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9163bf3aa1569161052b91859101613bca565b602060405180830381865af4158015610548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056c9190613bd9565b92508183101561058f5760405163184d952160e11b815260040160405180910390fd5b6105a5848361059e8187613b39565b9190611819565b9c507f00000000000000000000000000000000000000000000000000000000000000008d10156105e85760405163211ddda360e11b815260040160405180910390fd5b508f6105f4868e611837565b10156106135760405163c972651760e01b815260040160405180910390fd5b61063160008e600001602081019061062b9190613c07565b8e61184c565b61063a896118f4565b95508561065a57604051638bdf918d60e01b815260040160405180910390fd5b600088905060008d9050368f905060008c9050600061071d600260000160009054906101000a90046001600160801b03166001600160801b03166002800160009054906101000a9004600f0b600f0b600260000160109054906101000a90046001600160801b03166001600160801b031685600260010160009054906101000a90046001600160801b03166001600160801b03166102627f00000000000000000000000000000000000000000000000000000000000000008c61025d9190613b26565b9b5090508a158061073757506107348c6000611901565b81125b1561075557604051630552b01360e31b815260040160405180910390fd5b6000881561076d5761076887848b611819565b610770565b60005b905061077f6020850185613c07565b6001600160a01b03167fdcc4a01cea4510bd52201cebc8cd2d47d60429b35d68329abc591a70aa2efabf868d866107bc60408a0160208b01613c32565b866107ca60408c018c613c4f565b6040516107dd9796959493929190613c96565b60405180910390a250505050505050505050505050505050506100786001600055565b600061080a610bb9565b610812610be3565b61081b82610c04565b60065460ff161561083f57604051637983c05160e01b815260040160405180910390fd5b60008061084c8685610c89565b909250905061087c7f00000000000000000000000000000000000000000000000000000000000000006002613cea565b82101561089c57604051632afb507160e21b815260040160405180910390fd5b6006805460ff1916600117905560405163594f0e8f60e11b815260048101839052602481018290527f00000000000000000000000000000000000000000000000000000000000000006044820152606481018690527f000000000000000000000000000000000000000000000000000000000000000060848201527f000000000000000000000000000000000000000000000000000000000000000060a482015260027f000000000000000000000000000000000000000000000000000000000000000002830393506000908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063b29e1d1e9060c401606060405180830381865af41580156109a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cc9190613d01565b9250925092507f00000000000000000000000000000000000000000000000000000000000000006109fd8484611916565b1015610a1c5760405163216f4ab160e21b815260040160405180910390fd5b600080610a2e85858589600080611452565b91509150801580610a3f5750600082125b15610a5d57604051630552b01360e31b815260040160405180910390fd5b610a668561193c565b600280546001600160801b0319166001600160801b0392909216919091179055610a8f84611966565b600480546001600160801b0319166001600160801b0392909216919091179055610ab88361193c565b600280546001600160801b03928316600160801b029216919091179055610b016000807f000000000000000000000000000000000000000000000000000000000000000061184c565b610b196000610b1360208c018c613c07565b8a61184c565b610b2e610b24610d5e565b8760046001610d8a565b508a8a8a610b3f6020820182613c07565b6001600160a01b03167f4931b9953a65531203c17d9abe77870a3e49d8b13af522ec3321c18b5abb8af38c858c610b7c6040870160208801613c32565b87610b8a6040890189613c4f565b604051610b9d9796959493929190613c96565b60405180910390a2505050505050505050506100916001600055565b600260005403610bdc57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b3415610c0257604051631574f9f360e01b815260040160405180910390fd5b565b6000610c136020830183613c07565b6001600160a01b031603610c3a5760405163f0dd15fd60e01b815260040160405180910390fd5b50565b600254600454600091610c5e916001600160801b0390911690600f0b611916565b905090565b600080610c72878787866119a2565b9050610c7e818561165f565b979650505050505050565b81600080610c9d6040850160208601613c32565b15610cc257610cb885610cb36040870187613c4f565b6119b9565b9093509050610cda565b5034610cda85610cd56040870187613c4f565b611c26565b610ce2611c3f565b91508015610d5557604051600090339083908381818185875af1925050503d8060008114610d2c576040519150601f19603f3d011682016040523d82523d6000602084013e610d31565b606091505b5050905080610d53576040516312171d8360e31b815260040160405180910390fd5b505b505b9250929050565b6000610c5e427f0000000000000000000000000000000000000000000000000000000000000000611c52565b600084815260086020526040812060018101546001600160801b0316151580610db257504286115b15610dcb57600101546001600160801b03169050611400565b6000806000610dd8610d5e565b90506000610e067f00000000000000000000000000000000000000000000000000000000000000008b613b26565b90505b81811015610e7c576000818152600860205260409020600101546001600160801b03168015610e54576000828152600860205260409020549094506001600160801b03169250610e7c565b507f000000000000000000000000000000000000000000000000000000000000000001610e09565b83600003610eef57889350610eec610e92610c3d565b600254600160801b90046001600160801b03167f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006119a2565b92505b50610ef98361193c565b6001850180546001600160801b0319166001600160801b0392909216919091179055610f4f610f487f00000000000000000000000000000000000000000000000000000000000000008b613b39565b8a84611c68565b610f8d89610f87610f807f000000000000000000000000000000000000000000000000000000000000000083613b26565b4290611da6565b84611c68565b610f9688611db5565b5060009050600881610fc87f00000000000000000000000000000000000000000000000000000000000000008d613b39565b815260208101919091526040016000908120600101546001600160801b03169150610ff460028c611f59565b6000818152600b60205260408120549192508c8c831561113a576001925060008061102386898d866000611f8e565b9150915080600960008282546110399190613b26565b9091555061105590508660008461104f816117c5565b8861205d565b61105f8183613b26565b915061108f86838a8e877f00000000000000000000000000000000000000000000000000000000000000006121d7565b91506110a361109e838561221b565b612230565b600680546002906110c49084906201000090046001600160701b0316613d2f565b92506101000a8154816001600160701b0302191690836001600160701b031602179055506110f18261193c565b60068054601090611113908490600160801b90046001600160801b0316613d4f565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505b6000611147600184611f59565b6000818152600b602052604090205490915080156112565760019450600080611174838b8f886001611f8e565b91509150806009600082825461118a9190613b26565b909155506111a69050836000846111a0816117c5565b8a61225a565b6111b08183613b39565b91506111bf61109e838761221b565b600680546002906111e09084906201000090046001600160701b0316613d2f565b92506101000a8154816001600160701b0302191690836001600160701b0316021790555061120d8261193c565b6006805460109061122f908490600160801b90046001600160801b0316613d4f565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505b841561129057611282611268876117c5565b611271836117c5565b61127b9190613d6f565b600061244b565b8e61128d848261248a565b50505b600061129b84612684565b50604080518e815260208101879052908101899052606081018490526080810182905290915085907fff888cf98d2696e95c8c39aa98c9ad55a5378008f7a56614c9353b7137a57ab79060a00160405180910390a260008f905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f25964586040518163ffffffff1660e01b8152600401602060405180830381865afa158015611355573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113799190613d8f565b90506001600160a01b038116156113ee576113eb5a604051336024820152604481018a90528415156064820152600090819060840160408051601f198184030181529190526020810180516001600160e01b0316633488a6a760e11b1790526001600160a01b038616939291906127d0565b50505b509b9d50505050505050505050505050505b949350505050565b6000611430600b600061141c600286611f59565b8152602001908152602001600020546117c5565b611442600b600061141c600187611f59565b61144c9190613d6f565b92915050565b6000806000806114628a8a61285d565b915091508061147957600080935093505050611654565b60006114d9838a6114b27f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a7640000613b39565b8b7f0000000000000000000000000000000000000000000000000000000000000000612899565b509050600061153d848b846115167f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a7640000613b39565b8d7f0000000000000000000000000000000000000000000000000000000000000000612956565b50905081158061154b575080155b15611557575060009050805b60006115a5858c7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006119a2565b90506115b383838c84612a14565b50909350600090506115c5848f613b26565b905060006115e68b8b6115d7876117c5565b6115e1908e613dac565b612a60565b90508b61161b6116167f000000000000000000000000000000000000000000000000000000000000000083612ac7565b6117c5565b611624836117c5565b611631611616868561221b565b61163b9190613d6f565b6116459190613d6f565b60019950995050505050505050505b965096945050505050565b600061009161167384846301e13380612ad8565b61168585670de0b6b3a7640000613b39565b90611837565b611693613997565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e0830152600354048216610100820152600554909161012083019161178b9116612afe565b81526004546001600160801b03600160801b91829004811660208401526005546040909301926117bd92900416612afe565b905292915050565b60006001600160ff1b038211156117ef5760405163396ea70160e11b815260040160405180910390fd5b5090565b6117fc81612b6d565b610c3a57604051635044b7f560e01b815260040160405180910390fd5b600082600019048411830215820261183057600080fd5b5091020490565b600061009183670de0b6b3a764000084611819565b6000838152600a602090815260408083206001600160a01b03861684529091528120805483929061187e908490613b26565b90915550506000838152600b6020526040812080548392906118a1908490613b26565b909155505060408051848152602081018390526001600160a01b0384169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b600061144c82600461248a565b60008183136119105782610091565b50919050565b600080611923848461285d565b90925090508061193557611935612d05565b5092915050565b60006001600160801b038211156117ef57604051630f0af95160e11b815260040160405180910390fd5b600060016001607f1b0319821280611984575060016001607f1b0382135b156117ef5760405163a5353be560e01b815260040160405180910390fd5b6000610078826119b3858888611819565b90612d1e565b6000806119f16001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333088612d93565b611a517f0000000000000000000000000000000000000000000000000000000000000000611a20876001613b26565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190612e00565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a99aad896040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000081525087600030600067ffffffffffffffff811115611b8957611b89613dd4565b6040519080825280601f01601f191660200182016040528015611bb3576020820181803683370190505b506040518663ffffffff1660e01b8152600401611bd4959493929190613e0e565b60408051808303816000875af1158015611bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c169190613e9e565b925060009150505b935093915050565b60405163350b944160e11b815260040160405180910390fd5b6000610c5e670de0b6b3a7640000612e90565b6000611c5e8284613ed8565b6100919084613b39565b600083815260086020526040902054600160801b90046001600160801b0316808303611c945750505050565b6000848152600860205260408120546001600160801b031690819003611cee57611cbd8361193c565b600086815260086020526040902080546001600160801b0319166001600160801b0392909216919091179055611d6c565b611d3f611d3a670de0b6b3a7640000611d078886613b39565b611d119190613cea565b85670de0b6b3a7640000611d25878a613b39565b611d2f9190613cea565b859291906001612ffc565b61193c565b600086815260086020526040902080546001600160801b0319166001600160801b03929092169190911790555b611d758461193c565b60009586526008602052604090952080546001600160801b03968716600160801b0296169590951790945550505050565b60008183116119105782610091565b6006546000908190611dd8908490600160801b90046001600160801b031661221b565b6006546201000090046001600160701b03169250905081811115611f54576000611e028383613b39565b9050611e11611d3a828661309a565b60068054601090611e33908490600160801b90046001600160801b0316613eec565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000611e6c858361183790919063ffffffff16565b90506000611e9a827f000000000000000000000000000000000000000000000000000000000000000061221b565b90508060096000828254611eae9190613b26565b90915550611ebe90508183613b39565b9150611ec98261193c565b60028054600090611ee49084906001600160801b0316613d4f565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611f11826130af565b60048054600090611f26908490600f0b613f0c565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055508493505050505b915091565b60006001600160f81b03821115611f835760405163b7d0949760e01b815260040160405180910390fd5b5060f89190911b1790565b600080611f9b8785611837565b91506000611fc9837f000000000000000000000000000000000000000000000000000000000000000061221b565b9050611ff5817f000000000000000000000000000000000000000000000000000000000000000061221b565b91508315612018576120078282613b39565b6120119084613b39565b925061202f565b6120228282613b39565b61202c9084613b26565b92505b8686101561205257612042838789611819565b925061204f828789611819565b91505b509550959350505050565b600454600160801b90046001600160801b03166120a6611d3a82612089670de0b6b3a764000086613cea565b600554600160801b90046001600160801b031691908a6000612ffc565b600580546001600160801b03928316600160801b0292169190911790556120cc8661193c565b6120d69082613eec565b600480546001600160801b03928316600160801b0292169190911790556120fc8461193c565b600280546000906121179084906001600160801b0316613d4f565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061214483611966565b60048054600090612159908490600f0b613f0c565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055506121898561193c565b600280546010906121ab908490600160801b90046001600160801b0316613eec565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550505050505050565b6000806121e9846116858a888a611819565b90506121f6888486611819565b6122009082613b26565b9050868111156122105786810391505b509695505050505050565b60006100918383670de0b6b3a7640000611819565b60006001600160701b038211156117ef5760405163086b151760e11b815260040160405180910390fd5b6002546001600160801b03168381108061229c57507f000000000000000000000000000000000000000000000000000000000000000061229a8583613b39565b105b156122a9576122a9612d05565b6004549084900390600f0b6122be8482613d6f565b9050836122ca866117c5565b1380156122ff57507f00000000000000000000000000000000000000000000000000000000000000006122fd8383611916565b105b1561230c5761230c612d05565b600354600160801b90046001600160801b031661234e611d3a82612338670de0b6b3a764000088613cea565b6005546001600160801b031691908c6000612ffc565b600580546001600160801b0319166001600160801b03929092169190911790556123788882613b39565b90506123838161193c565b600380546001600160801b03928316600160801b0292169190911790556123a98361193c565b600280546001600160801b0319166001600160801b03929092169190911790556123d282611966565b600480546001600160801b0319166001600160801b03929092169190911790556123fb8761193c565b6002805460109061241d908490600160801b90046001600160801b0316613d4f565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050505050505050565b60035461246690611d3a906001600160801b03168484612a60565b600380546001600160801b0319166001600160801b03929092169190911790555050565b600754600360f81b6000908152600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e754354909182916124d5916001600160801b031690613b39565b9050806000036124e957600191505061144c565b60006124f4856130d9565b9050806000036125095760019250505061144c565b600080612517838589613175565b915091508061252d57600094505050505061144c565b60008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b8152600401612569929190613f39565b6040805180830381865af4158015612585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a99190613e9e565b915091506125c76125b9826117c5565b6125c290613faf565b612b6d565b9250826125dd576000965050505050505061144c565b6125e68261193c565b600780546000906126019084906001600160801b0316613d4f565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061262e8161193c565b60078054601090612650908490600160801b90046001600160801b0316613d4f565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506001965050505050505092915050565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e6126ad8761168b565b6040518263ffffffff1660e01b81526004016126c99190613bca565b6040805180830381865af41580156126e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127099190613fcb565b915091508061271f575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b03169161278591613b26565b61278f9190613b39565b9050806000036127a757506000958695509350505050565b60008087116127b75760006127c2565b6127c2848884611819565b976001975095505050505050565b6000606060008060008661ffff1667ffffffffffffffff8111156127f6576127f6613dd4565b6040519080825280601f01601f191660200182016040528015612820576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612841578692505b828152826000602083013e9093509150505b9550959350505050565b60008060008361286c866117c5565b6128769190613d6f565b9050600081121561288e576000809250925050610d57565b946001945092505050565b60008060006128ab88888888886132e4565b905060006128d6670de0b6b3a76400006128c5888861309a565b6128cf9190613b26565b8390611837565b9050670de0b6b3a7640000811061290a576129036128fc670de0b6b3a764000089611837565b8290612d1e565b9050612922565b61291f6128fc670de0b6b3a76400008961309a565b90505b61292c8186611837565b90508881101561294457600080935093505050612853565b97909703976001975095505050505050565b60008060006129688989888888613313565b9050612982866119b361297b8a8d613b26565b879061221b565b985061298f858a86611819565b9850888110156129a6576000809250925050611654565b888103670de0b6b3a764000081106129d4576129cd6128fc670de0b6b3a76400008961309a565b90506129ec565b6129e96128fc670de0b6b3a764000089611837565b90505b80891015612a0257600080935093505050611654565b90970398600198509650505050505050565b6000806000806000612a27898789613338565b9092509050612a368289613b39565b97506000612a4582888a611819565b9050612a51818b613b39565b9a989950979650505050505050565b600080612a6e8460006133be565b612a798460006133be565b612a839190613d6f565b90506000811315612a9f57612a988186613b26565b9450612abe565b6000811215612abe57612ab181613faf565b612abb9086613b39565b94505b50929392505050565b60006100918383670de0b6b3a76400005b6000826000190484118302158202612aef57600080fd5b50910281810615159190040190565b600080670de0b6b3a7640000612b12610d5e565b612b1c9190613cea565b9050808311612b2c576000612b36565b612b368184613b39565b91506100916128cf670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000613cea565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063d0b457ce9060a401608060405180830381865af4158015612c26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c4a9190613ffb565b935093509350935080612c665750600098975050505050505050565b868414612c9757612c768461193c565b600280546001600160801b0319166001600160801b03929092169190911790555b858314612cc857612ca783611966565b600480546001600160801b0319166001600160801b03929092169190911790555b848214612cf657612cd88261193c565b600280546001600160801b03928316600160801b0292169190911790555b50600198975050505050505050565b60405163bb55fd2760e01b815260040160405180910390fd5b600081600003612d375750670de0b6b3a764000061144c565b82600003612d475750600061144c565b6000612d52836117c5565b90506000612d67612d62866117c5565b6133d4565b9050818102612d7e670de0b6b3a76400008261403c565b9050612d89816135fa565b9695505050505050565b6040516001600160a01b038481166024830152838116604483015260648201839052612dfa9186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061378f565b50505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052612e5184826137fc565b612dfa576040516001600160a01b03848116602483015260006044830152612e8691869182169063095ea7b390606401612dc8565b612dfa848261378f565b6040516303c2063f60e41b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301527f0000000000000000000000000000000000000000000000000000000000000000811660448301527f0000000000000000000000000000000000000000000000000000000000000000811660648301527f00000000000000000000000000000000000000000000000000000000000000001660848201527f000000000000000000000000000000000000000000000000000000000000000060a482015260c4810182905260009073__$04b283107449142c3a86c88d1d4ad5a326$__90633c2063f09060e401602060405180830381865af4158015612fd8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144c9190613bd9565b60008260000361300d575084610078565b81156130605761303e6130208487613b26565b61302a858761221b565b613034888a61221b565b6116859190613b26565b9050600061304c8588611da6565b90508082101561305a578091505b50610078565b82850361306f57506000610078565b61007561307c8487613b39565b6130868587612ac7565b613090888a61221b565b6116859190613b39565b600061009183670de0b6b3a764000084612ad8565b600060016001607f1b038211156117ef5760405163a5353be560e01b815260040160405180910390fd5b60035460009081906130f4906001600160801b03168461309a565b90506131207f000000000000000000000000000000000000000000000000000000000000000082613b26565b6002546001600160801b03161115611910576002547f00000000000000000000000000000000000000000000000000000000000000009061316b9083906001600160801b0316613b39565b6100919190613b39565b61317d6139f8565b6000806131898461168b565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b81526004016131c49190613bca565b6040805180830381865af41580156131e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132049190613fcb565b9350905082613219575060009150611c1e9050565b600061323b61161684610160015185610140015161221b90919063ffffffff16565b61325b611616856101200151866101000151612ac790919063ffffffff16565b6132659190613d6f565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7654818301526060810199909952608089019990995260a088015250815160c087015281015160e086015290940151610100840152509092600192509050565b60006132f08585612d1e565b613309613301866119b3868b61221b565b859085611819565b6100759190613b26565b600061331f8585612d1e565b613309613330866119b3868b612ac7565b859085612ad8565b6000806133888561338285817f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a7640000613378818c61309a565b6133829190613b39565b90612ac7565b91506133b4827f000000000000000000000000000000000000000000000000000000000000000061221b565b9050935093915050565b60008183136133cd5781610091565b5090919050565b60008082136133f65760405163e61b497560e01b815260040160405180910390fd5b506001600160801b03811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f198201906134799084901c6117c5565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6000680248ce36a70cb26b3e19821361361557506000919050565b680755bf798b4a1bf1e5821261363e576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b3988102909303926c240c330e9fb2d9cbaf0fd5aafb1984018402606090811d6d0277594991cfc85f6e2461837cd9018502811d6d1a521255e34f6a5061b25ef1c9c319018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d6e02c72388d9f74f51a9331fed693f1419018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087016d01d3967ed30fc4f89c02bab570811901810290921d6e0587f503bb6ea29d25fcb7401964500186026d360d7aeea093263ecc6e0ecb291760621b018181059550929350909190612d8974029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c6117c5565b60006137a46001600160a01b0384168361389f565b905080516000141580156137c95750808060200190518101906137c7919061406a565b155b156137f757604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b6000806000846001600160a01b0316846040516138199190614087565b6000604051808303816000865af19150503d8060008114613856576040519150601f19603f3d011682016040523d82523d6000602084013e61385b565b606091505b5091509150818015613885575080511580613885575080806020019051810190613885919061406a565b80156100785750505050506001600160a01b03163b151590565b60606100918383600084600080856001600160a01b031684866040516138c59190614087565b60006040518083038185875af1925050503d8060008114613902576040519150601f19603f3d011682016040523d82523d6000602084013e613907565b606091505b5091509150612d89868383606082613927576139228261396e565b610091565b815115801561393e57506001600160a01b0384163b155b1561396757604051639996b31560e01b81526001600160a01b03851660048201526024016137ee565b5080610091565b80511561397e5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101200160405280613a0c613997565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60006060828403121561191057600080fd5b600080600080600060a08688031215613a7457600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff811115613aa757600080fd5b613ab388828901613a4a565b9150509295509295909350565b600080600060608486031215613ad557600080fd5b8335925060208401359150604084013567ffffffffffffffff811115613afa57600080fd5b613b0686828701613a4a565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b8082018082111561144c5761144c613b10565b8181038181111561144c5761144c613b10565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015181840152505050565b610180810161144c8284613b4c565b600060208284031215613beb57600080fd5b5051919050565b6001600160a01b0381168114610c3a57600080fd5b600060208284031215613c1957600080fd5b813561009181613bf2565b8015158114610c3a57600080fd5b600060208284031215613c4457600080fd5b813561009181613c24565b6000808335601e19843603018112613c6657600080fd5b83018035915067ffffffffffffffff821115613c8157600080fd5b602001915036819003821315610d5757600080fd5b878152866020820152856040820152841515606082015283608082015260c060a08201528160c0820152818360e0830137600081830160e090810191909152601f909201601f191601019695505050505050565b808202811582820484141761144c5761144c613b10565b600080600060608486031215613d1657600080fd5b8351925060208401519150604084015190509250925092565b6001600160701b0381811683821601908082111561193557611935613b10565b6001600160801b0381811683821601908082111561193557611935613b10565b818103600083128015838313168383128216171561193557611935613b10565b600060208284031215613da157600080fd5b815161009181613bf2565b8082018281126000831280158216821582161715613dcc57613dcc613b10565b505092915050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015613e05578181015183820152602001613ded565b50506000910152565b600061012060018060a01b038089511684528060208a01511660208501528060408a01511660408501528060608a0151166060850152608089015160808501528760a08501528660c085015280861660e08501525080610100840152835180828501526101409150613e868183860160208801613dea565b601f01601f1916929092019091019695505050505050565b60008060408385031215613eb157600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b600082613ee757613ee7613ec2565b500690565b6001600160801b0382811682821603908082111561193557611935613b10565b600f81810b9083900b0160016001607f1b03811360016001607f1b03198212171561144c5761144c613b10565b60006102a082019050613f4d828551613b4c565b602084015161018083015260408401516101a083015260608401516101c083015260808401516101e083015260a084015161020083015260c084015161022083015260e084015161024083015261010090930151610260820152610280015290565b6000600160ff1b8201613fc457613fc4613b10565b5060000390565b60008060408385031215613fde57600080fd5b825191506020830151613ff081613c24565b809150509250929050565b6000806000806080858703121561401157600080fd5b845193506020850151925060408501519150606085015161403181613c24565b939692955090935050565b60008261404b5761404b613ec2565b600160ff1b82146000198414161561406557614065613b10565b500590565b60006020828403121561407c57600080fd5b815161009181613c24565b60008251614099818460208701613dea565b919091019291505056fea2646970667358221220b03f4ac12fb25ba91f14ed9d0faf587a17ca388b462197d83c384c210cc76f0d64736f6c63430008160033a2646970667358221220b99b685c8579decb7e5366ed6c28b7906e12b7d04070277f48c08292feffb22064736f6c63430008160033608060405234801561001057600080fd5b506140f3806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200002e5760003560e01c80638c98b3c61462000033575b600080fd5b6200004a6200004436600462000273565b62000066565b6040516001600160a01b03909116815260200160405180910390f35b600080838060200190518101906200007f9190620003e8565b6040805133602082015290810185905290915060600160405160208183030381529060405280519060200120868683604051620000bc90620000f8565b620000ca9392919062000485565b8190604051809103906000f5905080158015620000eb573d6000803e3d6000fd5b509150505b949350505050565b613ace80620005f083390190565b634e487b7160e01b600052604160045260246000fd5b604051610200810167ffffffffffffffff8111828210171562000143576200014362000106565b60405290565b6001600160a01b03811681146200015f57600080fd5b50565b80356200016f8162000149565b919050565b6000608082840312156200018757600080fd5b6040516080810181811067ffffffffffffffff82111715620001ad57620001ad62000106565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600082601f830112620001f057600080fd5b813567ffffffffffffffff808211156200020e576200020e62000106565b604051601f8301601f19908116603f0116810190828211818310171562000239576200023962000106565b816040528381528660208588010111156200025357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000808486036102c08112156200028c57600080fd5b610260808212156200029d57600080fd5b620002a76200011c565b9150620002b48762000162565b8252620002c46020880162000162565b6020830152620002d76040880162000162565b6040830152606087013560608301526080870135608083015260a087013560a083015260c087013560c083015260e087013560e08301526101008088013581840152506101208088013581840152506101408088013581840152506101606200034281890162000162565b908301526101806200035688820162000162565b908301526101a06200036a88820162000162565b908301526101c06200037e88820162000162565b908301526101e0620003938989830162000174565b8184015250819550620003a881880162000162565b9450505061028085013567ffffffffffffffff811115620003c857600080fd5b620003d687828801620001de565b949793965093946102a0013593505050565b600060a08284031215620003fb57600080fd5b60405160a0810181811067ffffffffffffffff8211171562000421576200042162000106565b6040528251620004318162000149565b81526020830151620004438162000149565b60208201526040830151620004588162000149565b604082015260608301516200046d8162000149565b60608201526080928301519281019290925250919050565b83516001600160a01b0316815261032081016020850151620004b260208401826001600160a01b03169052565b506040850151620004ce60408401826001600160a01b03169052565b50606085015160608301526080850151608083015260a085015160a083015260c085015160c083015260e085015160e08301526101008086015181840152506101208086015181840152506101408086015181840152506101608086015162000541828501826001600160a01b03169052565b5050610180858101516001600160a01b03908116918401919091526101a0808701518216908401526101c0808701518216908401526101e080870151805191850191909152602080820151610200860152604080830151610220870152606092830151610240870152878416610260870152865184166102808701529086015183166102a086015285015182166102c0850152840151166102e08301526080830151610300830152620000f056fe6103206040523480156200001257600080fd5b5060405162003ace38038062003ace8339810160408190526200003591620005e4565b6001600081905583516001600160a01b039081166080818152602080880151841660a0908152828901516101a0528801516101c05260c0808901516101e090815260e0808b015161020052610120808c0151909352610100808c0151909152610140808c0151909152908a0180515190925281518301519052805160409081015161016052905160609081015161018052818a0151861661024052808a01516102605285891661022052875186166102808190529288015186166102a0529087015185166102c0528601519093166102e0528401516103005283926200011c929062000126565b505050506200078a565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620001809085908390620001f216565b620001ec57604080516001600160a01b038516602482015260006044808301919091528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620001e0918691620002a316565b620001ec8482620002a3565b50505050565b6000806000846001600160a01b03168460405162000211919062000735565b6000604051808303816000865af19150503d806000811462000250576040519150601f19603f3d011682016040523d82523d6000602084013e62000255565b606091505b5091509150818015620002835750805115806200028357508080602001905181019062000283919062000766565b80156200029a57506000856001600160a01b03163b115b95945050505050565b6000620002ba6001600160a01b0384168362000316565b90508051600014158015620002e2575080806020019051810190620002e0919062000766565b155b156200031157604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b606062000326838360006200032d565b9392505050565b606081471015620003545760405163cd78605960e01b815230600482015260240162000308565b600080856001600160a01b0316848660405162000372919062000735565b60006040518083038185875af1925050503d8060008114620003b1576040519150601f19603f3d011682016040523d82523d6000602084013e620003b6565b606091505b509092509050620003c9868383620003d3565b9695505050505050565b606082620003ec57620003e68262000437565b62000326565b81511580156200040457506001600160a01b0384163b155b156200042f57604051639996b31560e01b81526001600160a01b038516600482015260240162000308565b508062000326565b805115620004485780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b60405161020081016001600160401b03811182821017156200049657634e487b7160e01b600052604160045260246000fd5b60405290565b6001600160a01b03811681146200046157600080fd5b8051620004bf816200049c565b919050565b600060808284031215620004d757600080fd5b604051608081016001600160401b03811182821017156200050857634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600060a082840312156200054c57600080fd5b60405160a081016001600160401b03811182821017156200057d57634e487b7160e01b600052604160045260246000fd5b8060405250809150825162000592816200049c565b81526020830151620005a4816200049c565b60208201526040830151620005b9816200049c565b60408201526060830151620005ce816200049c565b6060820152608092830151920191909152919050565b6000806000838503610320811215620005fc57600080fd5b610260808212156200060d57600080fd5b6200061762000464565b91506200062486620004b2565b82526200063460208701620004b2565b60208301526200064760408701620004b2565b6040830152606086015160608301526080860151608083015260a086015160a083015260c086015160c083015260e086015160e0830152610100808701518184015250610120808701518184015250610140808701518184015250610160620006b2818801620004b2565b90830152610180620006c6878201620004b2565b908301526101a0620006da878201620004b2565b908301526101c0620006ee878201620004b2565b908301526101e06200070388888301620004c4565b818401525081945062000718818701620004b2565b935050506200072c85610280860162000539565b90509250925092565b6000825160005b818110156200075857602081860181015185830152016200073c565b506000920191825250919050565b6000602082840312156200077957600080fd5b815180151581146200032657600080fd5b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051610280516102a0516102c0516102e051610300516131a16200092d600039600081816111b00152818161246a01526125a001526000818161118e01528181612448015261257101526000818161116c01528181612426015261254201526000818161114a015281816124040152612513015260008181611106015281816123c001526124aa0152600050506000505060006109c10152600050506000818161026d01526120a00152600081816118e60152818161194901528181611c8501528181611cc101528181611eb9015261207a01526000818161056f0152612054015260006114bb0152600061161601526000818161073301526115ea0152600050506000818161059001526120c601526000818161066b015261271a0152600081816101ed0152818161042e015281816104a90152818161051f015281816105eb015261062301526000505060008181611128015281816123e201526124e401526131a16000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063074a6de914610046578063414f826d14610072578063cbc1343414610087575b600080fd5b610059610054366004612c08565b61009a565b6040805192835260208301919091520160405180910390f35b610085610080366004612c5f565b6100b5565b005b610059610095366004612c08565b6100c3565b6000806100a88585856100d1565b915091505b935093915050565b6100bf8282610196565b5050565b6000806100a8858585610257565b6000806100dc6103ab565b6100e5836103d5565b60006100ef61040e565b90506101066100fc610426565b8260046001610452565b506101143387838888610ad0565b90935091506101266020850185612c96565b6001600160a01b0316337f07210cf9a89fae8012341fdc131255728787856379269f07c2e41c23b3c09b5884868561016460408b0160208c01612cc1565b61017160408c018c612cde565b60405161018396959493929190612d4e565b60405180910390a3506100ad6001600055565b61019e6103ab565b60006101a861040e565b6000848152600860205260409020600101549091506001600160801b0316156101dc576101d58183610c13565b505061024d565b60006101e6610426565b90506102127f000000000000000000000000000000000000000000000000000000000000000085612d9e565b15158061021e57508381105b1561023c5760405163ecd29e8160e01b815260040160405180910390fd5b6102498483856000610452565b5050505b6100bf6001600055565b6000806102626103ab565b61026b836103d5565b7f00000000000000000000000000000000000000000000000000000000000000008510156102ac5760405163211ddda360e11b815260040160405180910390fd5b60006102b661040e565b90506102c36100fc610426565b506102d060003388610e0e565b6102eb600360f81b6102e56020870187612c96565b88610ee8565b60006103066102fd6020870187612c96565b88848989610ad0565b90945090506103158188612dc8565b9250600061032283610f88565b5090506103326020870187612c96565b6001600160a01b0316337f1c7999deb68182de77ce89d32f82d0e13eb042921b2bfa9f35aa1c43f62f261e8a888761037060408d0160208e01612cc1565b8a888e80604001906103829190612cde565b604051610396989796959493929190612ddb565b60405180910390a35050506100ad6001600055565b6002600054036103ce57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b60006103e46020830183612c96565b6001600160a01b03160361040b5760405163f0dd15fd60e01b815260040160405180910390fd5b50565b6000610421670de0b6b3a76400006110d4565b905090565b6000610421427f000000000000000000000000000000000000000000000000000000000000000061121b565b600084815260086020526040812060018101546001600160801b031615158061047a57504286115b1561049357600101546001600160801b03169050610ac8565b60008060006104a0610426565b905060006104ce7f00000000000000000000000000000000000000000000000000000000000000008b612e23565b90505b81811015610544576000818152600860205260409020600101546001600160801b0316801561051c576000828152600860205260409020549094506001600160801b03169250610544565b507f0000000000000000000000000000000000000000000000000000000000000000016104d1565b836000036105b7578893506105b461055a611238565b600254600160801b90046001600160801b03167f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611259565b92505b506105c183611279565b6001850180546001600160801b0319166001600160801b03929092169190911790556106176106107f00000000000000000000000000000000000000000000000000000000000000008b612dc8565b8a846112a7565b6106558961064f6106487f000000000000000000000000000000000000000000000000000000000000000083612e23565b42906113e5565b846112a7565b61065e886113fa565b50600090506008816106907f00000000000000000000000000000000000000000000000000000000000000008d612dc8565b815260208101919091526040016000908120600101546001600160801b031691506106bc60028c61159e565b6000818152600b60205260408120549192508c8c831561080257600192506000806106eb86898d8660006115d3565b9150915080600960008282546107019190612e23565b9091555061071d905086600084610717816116a2565b886116cc565b6107278183612e23565b915061075786838a8e877f0000000000000000000000000000000000000000000000000000000000000000611846565b915061076b6107668385611890565b6118a5565b6006805460029061078c9084906201000090046001600160701b0316612e36565b92506101000a8154816001600160701b0302191690836001600160701b031602179055506107b982611279565b600680546010906107db908490600160801b90046001600160801b0316612e56565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505b600061080f60018461159e565b6000818152600b6020526040902054909150801561091e576001945060008061083c838b8f8860016115d3565b9150915080600960008282546108529190612e23565b9091555061086e905083600084610868816116a2565b8a6118cf565b6108788183612dc8565b91506108876107668387611890565b600680546002906108a89084906201000090046001600160701b0316612e36565b92506101000a8154816001600160701b0302191690836001600160701b031602179055506108d582611279565b600680546010906108f7908490600160801b90046001600160801b0316612e56565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505b84156109585761094a610930876116a2565b610939836116a2565b6109439190612e76565b6000611ac0565b8e6109558482610c13565b50505b600061096384610f88565b50604080518e815260208101879052908101899052606081018490526080810182905290915085907fff888cf98d2696e95c8c39aa98c9ad55a5378008f7a56614c9353b7137a57ab79060a00160405180910390a260008f905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f25964586040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a419190612e96565b90506001600160a01b03811615610ab657610ab35a604051336024820152604481018a90528415156064820152600090819060840160408051601f198184030181529190526020810180516001600160e01b0316633488a6a760e11b1790526001600160a01b03861693929190611aff565b50505b509b9d50505050505050505050505050505b949350505050565b600080610adc85611b8a565b505060075485906001600160801b031680821115610b0157806001600160801b031691505b81600003610b16576000809250925050610c09565b610b25600360f81b8984610e0e565b600754600090610b4b9084906001600160801b03600160801b9091048116908516611b97565b9050610b5683611279565b610b609083612eb3565b600780546001600160801b0319166001600160801b0392909216919091179055610b8981611279565b60078054601090610bab908490600160801b90046001600160801b0316612eb3565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610bda818887611bb5565b9350610be68684611c4e565b841015610c065760405163c972651760e01b815260040160405180910390fd5b50505b9550959350505050565b600754600360f81b6000908152600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435490918291610c5e916001600160801b031690612dc8565b905080600003610c72576001915050610e08565b6000610c7d85611c63565b905080600003610c9257600192505050610e08565b600080610ca0838589611cff565b9150915080610cb6576000945050505050610e08565b60008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b8152600401610cf2929190612f51565b6040805180830381865af4158015610d0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d329190612fc7565b91509150610d50610d42826116a2565b610d4b90612feb565b611e73565b925082610d665760009650505050505050610e08565b610d6f82611279565b60078054600090610d8a9084906001600160801b0316612e56565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610db781611279565b60078054601090610dd9908490600160801b90046001600160801b0316612e56565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550600196505050505050505b92915050565b6000838152600a602090815260408083206001600160a01b0386168452909152902054811115610e5157604051631e9acf1760e31b815260040160405180910390fd5b6000838152600a602090815260408083206001600160a01b0386168452825280832080548590039055858352600b90915281208054839290610e94908490612dc8565b909155505060408051848152602081018390526000916001600160a01b0385169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291015b60405180910390a4505050565b6000838152600a602090815260408083206001600160a01b038616845290915281208054839290610f1a908490612e23565b90915550506000838152600b602052604081208054839290610f3d908490612e23565b909155505060408051848152602081018390526001600160a01b0384169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101610edb565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e610fb18761200b565b6040518263ffffffff1660e01b8152600401610fcd9190613007565b6040805180830381865af4158015610fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100d9190613016565b9150915080611023575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b03169161108991612e23565b6110939190612dc8565b9050806000036110ab57506000958695509350505050565b60008087116110bb5760006110c6565b6110c6848884611b97565b976001975095505050505050565b6040516303c2063f60e41b815260009073__$04b283107449142c3a86c88d1d4ad5a326$__90633c2063f0906111da907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000908b90600401613046565b602060405180830381865af41580156111f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e089190613089565b60006112278284612d9e565b6112319084612dc8565b9392505050565b600254600454600091610421916001600160801b0390911690600f0b612145565b60006112708261126a858888611b97565b9061216b565b95945050505050565b60006001600160801b038211156112a357604051630f0af95160e11b815260040160405180910390fd5b5090565b600083815260086020526040902054600160801b90046001600160801b03168083036112d35750505050565b6000848152600860205260408120546001600160801b03169081900361132d576112fc83611279565b600086815260086020526040902080546001600160801b0319166001600160801b03929092169190911790556113ab565b61137e611379670de0b6b3a76400006113468886612dc8565b61135091906130a2565b85670de0b6b3a7640000611364878a612dc8565b61136e91906130a2565b8592919060016121e0565b611279565b600086815260086020526040902080546001600160801b0319166001600160801b03929092169190911790555b6113b484611279565b60009586526008602052604090952080546001600160801b03968716600160801b0296169590951790945550505050565b60008183116113f45782611231565b50919050565b600654600090819061141d908490600160801b90046001600160801b0316611890565b6006546201000090046001600160701b031692509050818111156115995760006114478383612dc8565b9050611456611379828661227e565b60068054601090611478908490600160801b90046001600160801b0316612eb3565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555060006114b1858361229390919063ffffffff16565b905060006114df827f0000000000000000000000000000000000000000000000000000000000000000611890565b905080600960008282546114f39190612e23565b9091555061150390508183612dc8565b915061150e82611279565b600280546000906115299084906001600160801b0316612e56565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611556826122a8565b6004805460009061156b908490600f0b6130b9565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055508493505050505b915091565b60006001600160f81b038211156115c85760405163b7d0949760e01b815260040160405180910390fd5b5060f89190911b1790565b6000806115e08785612293565b9150600061160e837f0000000000000000000000000000000000000000000000000000000000000000611890565b905061163a817f0000000000000000000000000000000000000000000000000000000000000000611890565b9150831561165d5761164c8282612dc8565b6116569084612dc8565b9250611674565b6116678282612dc8565b6116719084612e23565b92505b8686101561169757611687838789611b97565b9250611694828789611b97565b91505b509550959350505050565b60006001600160ff1b038211156112a35760405163396ea70160e11b815260040160405180910390fd5b600454600160801b90046001600160801b0316611715611379826116f8670de0b6b3a7640000866130a2565b600554600160801b90046001600160801b031691908a60006121e0565b600580546001600160801b03928316600160801b02921691909117905561173b86611279565b6117459082612eb3565b600480546001600160801b03928316600160801b02921691909117905561176b84611279565b600280546000906117869084906001600160801b0316612e56565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506117b3836122d2565b600480546000906117c8908490600f0b6130b9565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055506117f885611279565b6002805460109061181a908490600160801b90046001600160801b0316612eb3565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550505050505050565b60008061185e846118588a888a611b97565b90612293565b905061186b888486611b97565b6118759082612e23565b9050868111156118855786810391505b509695505050505050565b60006112318383670de0b6b3a7640000611b97565b60006001600160701b038211156112a35760405163086b151760e11b815260040160405180910390fd5b6002546001600160801b03168381108061191157507f000000000000000000000000000000000000000000000000000000000000000061190f8583612dc8565b105b1561191e5761191e61230e565b6004549084900390600f0b6119338482612e76565b90508361193f866116a2565b13801561197457507f00000000000000000000000000000000000000000000000000000000000000006119728383612145565b105b156119815761198161230e565b600354600160801b90046001600160801b03166119c3611379826119ad670de0b6b3a7640000886130a2565b6005546001600160801b031691908c60006121e0565b600580546001600160801b0319166001600160801b03929092169190911790556119ed8882612dc8565b90506119f881611279565b600380546001600160801b03928316600160801b029216919091179055611a1e83611279565b600280546001600160801b0319166001600160801b0392909216919091179055611a47826122d2565b600480546001600160801b0319166001600160801b0392909216919091179055611a7087611279565b60028054601090611a92908490600160801b90046001600160801b0316612e56565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050505050505050565b600354611adb90611379906001600160801b03168484612327565b600380546001600160801b0319166001600160801b03929092169190911790555050565b6000606060008060008661ffff1667ffffffffffffffff811115611b2557611b256130e6565b6040519080825280601f01601f191660200182016040528015611b4f576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115611b70578692505b828152826000602083013e90999098509650505050505050565b6000610e08826004610c13565b6000826000190484118302158202611bae57600080fd5b5091020490565b600080611bc28585611890565b9050611bcd8161238e565b945084600003611be1576000915050611231565b849150611bf46040840160208501612cc1565b15611c2357611c1c85611c0a6020860186612c96565b611c176040870187612cde565b612494565b9150611c46565b611c4685611c346020860186612c96565b611c416040870187612cde565b612690565b509392505050565b60006112318383670de0b6b3a76400006126a9565b6003546000908190611c7e906001600160801b03168461227e565b9050611caa7f000000000000000000000000000000000000000000000000000000000000000082612e23565b6002546001600160801b031611156113f4576002547f000000000000000000000000000000000000000000000000000000000000000090611cf59083906001600160801b0316612dc8565b6112319190612dc8565b611d07612b55565b600080611d138461200b565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b8152600401611d4e9190613007565b6040805180830381865af4158015611d6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d8e9190613016565b9350905082611da35750600091506100ad9050565b6000611dca611dc584610160015185610140015161189090919063ffffffff16565b6116a2565b611dea611dc5856101200151866101000151611c4e90919063ffffffff16565b611df49190612e76565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7654818301526060810199909952608089019990995260a088015250815160c087015281015160e086015290940151610100840152509092600192509050565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063d0b457ce9060a401608060405180830381865af4158015611f2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5091906130fc565b935093509350935080611f6c5750600098975050505050505050565b868414611f9d57611f7c84611279565b600280546001600160801b0319166001600160801b03929092169190911790555b858314611fce57611fad836122d2565b600480546001600160801b0319166001600160801b03929092169190911790555b848214611ffc57611fde82611279565b600280546001600160801b03928316600160801b0292169190911790555b50600198975050505050505050565b612013612ba7565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e0830152600354048216610100820152600554909161012083019161210b91166126cf565b81526004546001600160801b03600160801b918290048116602084015260055460409093019261213d929004166126cf565b905292915050565b6000806121528484612745565b9092509050806121645761216461230e565b5092915050565b6000816000036121845750670de0b6b3a7640000610e08565b8260000361219457506000610e08565b600061219f836116a2565b905060006121b46121af866116a2565b612784565b90508181026121cb670de0b6b3a76400008261313d565b90506121d6816129aa565b9695505050505050565b6000826000036121f1575084611270565b8115612244576122226122048487612e23565b61220e8587611890565b612218888a611890565b6118589190612e23565b9050600061223085886113e5565b90508082101561223e578091505b50611270565b82850361225357506000611270565b6121d66122608487612dc8565b61226a8587611c4e565b612274888a611890565b6118589190612dc8565b600061123183670de0b6b3a7640000846126a9565b600061123183670de0b6b3a764000084611b97565b600060016001607f1b038211156112a35760405163a5353be560e01b815260040160405180910390fd5b600060016001607f1b03198212806122f0575060016001607f1b0382135b156112a35760405163a5353be560e01b815260040160405180910390fd5b60405163bb55fd2760e01b815260040160405180910390fd5b600080612335846000612b3f565b612340846000612b3f565b61234a9190612e76565b905060008113156123665761235f8186612e23565b9450612385565b60008112156123855761237881612feb565b6123829086612dc8565b94505b50929392505050565b6040516349124ca360e01b815260009073__$04b283107449142c3a86c88d1d4ad5a326$__906349124ca3906111da907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000908b90600401613046565b6000806124a0866110d4565b90508015612687577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c2bea496040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000008152506125cb896110d4565b604080516001600160e01b031960e086901b16815283516001600160a01b0390811660048301526020850151811660248301529184015182166044820152606084015182166064820152608090930151608484015260a4830191909152600060c48301523060e483015288166101048201526101240160408051808303816000875af115801561265f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126839190612fc7565b5091505b50949350505050565b60405163350b944160e11b815260040160405180910390fd5b60008260001904841183021582026126c057600080fd5b50910281810615159190040190565b600080670de0b6b3a76400006126e3610426565b6126ed91906130a2565b90508083116126fd576000612707565b6127078184612dc8565b915061123161273e670de0b6b3a76400007f00000000000000000000000000000000000000000000000000000000000000006130a2565b8390612293565b600080600083612754866116a2565b61275e9190612e76565b9050600081121561277657600080925092505061277d565b9150600190505b9250929050565b60008082136127a65760405163e61b497560e01b815260040160405180910390fd5b506001600160801b03811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f198201906128299084901c6116a2565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6000680248ce36a70cb26b3e1982136129c557506000919050565b680755bf798b4a1bf1e582126129ee576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b3988102909303926c240c330e9fb2d9cbaf0fd5aafb1984018402606090811d6d0277594991cfc85f6e2461837cd9018502811d6d1a521255e34f6a5061b25ef1c9c319018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d6e02c72388d9f74f51a9331fed693f1419018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087016d01d3967ed30fc4f89c02bab570811901810290921d6e0587f503bb6ea29d25fcb7401964500186026d360d7aeea093263ecc6e0ecb291760621b0181810595509293509091906121d674029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c6116a2565b6000818313612b4e5781611231565b5090919050565b604051806101200160405280612b69612ba7565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600080600060608486031215612c1d57600080fd5b8335925060208401359150604084013567ffffffffffffffff811115612c4257600080fd5b840160608187031215612c5457600080fd5b809150509250925092565b60008060408385031215612c7257600080fd5b50508035926020909101359150565b6001600160a01b038116811461040b57600080fd5b600060208284031215612ca857600080fd5b813561123181612c81565b801515811461040b57600080fd5b600060208284031215612cd357600080fd5b813561123181612cb3565b6000808335601e19843603018112612cf557600080fd5b83018035915067ffffffffffffffff821115612d1057600080fd5b60200191503681900382131561277d57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b868152856020820152846040820152831515606082015260a060808201526000612d7c60a083018486612d25565b98975050505050505050565b634e487b7160e01b600052601260045260246000fd5b600082612dad57612dad612d88565b500690565b634e487b7160e01b600052601160045260246000fd5b81810381811115610e0857610e08612db2565b88815287602082015286604082015285151560608201528460808201528360a082015260e060c08201526000612e1560e083018486612d25565b9a9950505050505050505050565b80820180821115610e0857610e08612db2565b6001600160701b0381811683821601908082111561216457612164612db2565b6001600160801b0381811683821601908082111561216457612164612db2565b818103600083128015838313168383128216171561216457612164612db2565b600060208284031215612ea857600080fd5b815161123181612c81565b6001600160801b0382811682821603908082111561216457612164612db2565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015181840152505050565b60006102a082019050612f65828551612ed3565b602084015161018083015260408401516101a083015260608401516101c083015260808401516101e083015260a084015161020083015260c084015161022083015260e084015161024083015261010090930151610260820152610280015290565b60008060408385031215612fda57600080fd5b505080516020909101519092909150565b6000600160ff1b820161300057613000612db2565b5060000390565b6101808101610e088284612ed3565b6000806040838503121561302957600080fd5b82519150602083015161303b81612cb3565b809150509250929050565b6001600160a01b039788168152958716602087015293861660408601529185166060850152909316608083015260a082019290925260c081019190915260e00190565b60006020828403121561309b57600080fd5b5051919050565b8082028115828204841417610e0857610e08612db2565b600f81810b9083900b0160016001607f1b03811360016001607f1b031982121715610e0857610e08612db2565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561311257600080fd5b845193506020850151925060408501519150606085015161313281612cb3565b939692955090935050565b60008261314c5761314c612d88565b600160ff1b82146000198414161561316657613166612db2565b50059056fea26469706673582212202638f3a914c44c7eb0af525ca3c7f5c64de74a160778bcdf9809fc2bdae9ec6664736f6c63430008160033a2646970667358221220fdf44f011d0a95a03a08c26407cc3f0a8c62ec28d733c2d4be0e6103eced450c64736f6c634300081600336101606040523480156200001257600080fd5b5060405162002ca638038062002ca68339810160408190526200003591620000c0565b878787878787878760006200004b8982620002a9565b506001600160a01b0396871660805294861660a05292851660c05290841660e05283166101005282166101205216610140525062000375975050505050505050565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620000bb57600080fd5b919050565b600080600080600080600080610100898b031215620000de57600080fd5b88516001600160401b0380821115620000f657600080fd5b818b0191508b601f8301126200010b57600080fd5b8151818111156200012057620001206200008d565b604051601f8201601f19908116603f011681019083821181831017156200014b576200014b6200008d565b81604052828152602093508e848487010111156200016857600080fd5b600091505b828210156200018c57848201840151818301850152908301906200016d565b6000848483010152809c50505050620001a7818c01620000a3565b98505050620001b960408a01620000a3565b9550620001c960608a01620000a3565b9450620001d960808a01620000a3565b9350620001e960a08a01620000a3565b9250620001f960c08a01620000a3565b91506200020960e08a01620000a3565b90509295985092959890939650565b600181811c908216806200022d57607f821691505b6020821081036200024e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002a4576000816000526020600020601f850160051c810160208610156200027f5750805b601f850160051c820191505b81811015620002a0578281556001016200028b565b5050505b505050565b81516001600160401b03811115620002c557620002c56200008d565b620002dd81620002d6845462000218565b8462000254565b602080601f831160018114620003155760008415620002fc5750858301515b600019600386901b1c1916600185901b178555620002a0565b600085815260208120601f198616915b82811015620003465788860151825594840194600190910190840162000325565b5085821015620003655787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e05161010051610120516101405161286d62000439600039600081816102c50152610e1f0152600081816103450152610ce90152600081816103ad0152610bb30152600081816103110152610a7d015260008181610379015261086f01526000818161043501526111bd01526000818161040101528181610562015281816107930152818161089f01528181610aad01528181610be301528181610d1901528181610e4f01528181610f8c01526111ee015261286d6000f3fe6080604052600436106100fe5760003560e01c8063aa8cd6c411610095578063c45a015511610064578063c45a0155146103ef578063c83e1f5114610423578063e71c2aa114610457578063e990eba814610477578063e99be3961461049757600080fd5b8063aa8cd6c414610333578063ab71905f14610367578063b6cb11181461039b578063c1510618146103cf57600080fd5b806343dd8fef116100d157806343dd8fef1461026357806354fd4d5014610283578063966ecd1c146102b3578063a085fa30146102ff57600080fd5b806304baa00b1461010357806306fdde031461012e57806316abfc70146101435780633740401714610164575b600080fd5b34801561010f57600080fd5b506101186104ab565b6040516101259190611c2f565b60405180910390f35b34801561013a57600080fd5b506101186104c7565b610156610151366004611d6e565b610555565b604051908152602001610125565b34801561017057600080fd5b5061025661017f366004611e33565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101919091525060009081526001602081815260409283902083516101208101855281548152928101549183019190915260028101549282019290925260038201546001600160a01b0390811660608301526004830154811660808301526005830154811660a08301526006830154811660c08301526007830154811660e083015260089092015490911661010082015290565b6040516101259190611e4c565b34801561026f57600080fd5b5061015661027e366004611ec9565b6106f3565b34801561028f57600080fd5b506040805180820190915260078152660ec625c605c62760cb1b6020820152610118565b3480156102bf57600080fd5b506102e77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610125565b34801561030b57600080fd5b506102e77f000000000000000000000000000000000000000000000000000000000000000081565b34801561033f57600080fd5b506102e77f000000000000000000000000000000000000000000000000000000000000000081565b34801561037357600080fd5b506102e77f000000000000000000000000000000000000000000000000000000000000000081565b3480156103a757600080fd5b506102e77f000000000000000000000000000000000000000000000000000000000000000081565b3480156103db57600080fd5b506102e76103ea3660046120a7565b610786565b3480156103fb57600080fd5b506102e77f000000000000000000000000000000000000000000000000000000000000000081565b34801561042f57600080fd5b506102e77f000000000000000000000000000000000000000000000000000000000000000081565b34801561046357600080fd5b50610156610472366004611ec9565b610f39565b34801561048357600080fd5b506102e7610492366004612115565b610f7f565b3480156104a357600080fd5b506005610156565b6040518060600160405280602781526020016128116027913981565b600080546104d4906121b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610500906121b6565b801561054d5780601f106105225761010080835404028352916020019161054d565b820191906000526020600020905b81548152906001019060200180831161053057829003601f168201915b505050505081565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105a057604051634084351160e01b815260040160405180910390fd5b6105a86112fc565b6000868152600160205260409020600301546001600160a01b0316806105e15760405163952b05cb60e01b815260040160405180910390fd5b60006105ef8288888761131d565b9050816001600160a01b03166377d05ff4828888886040518563ffffffff1660e01b8152600401610622939291906121f0565b60206040518083038185885af1158015610640573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106659190612236565b925060006106738234612265565b905080156106e657604051600090339083908381818185875af1925050503d80600081146106bd576040519150601f19603f3d011682016040523d82523d6000602084013e6106c2565b606091505b50509050806106e4576040516312171d8360e31b815260040160405180910390fd5b505b5050505b95945050505050565b6040516303c2063f60e41b815260009073__$04b283107449142c3a86c88d1d4ad5a326$__90633c2063f090610739908b908b908b908b908b908b908b90600401612278565b602060405180830381865af4158015610756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077a9190612236565b98975050505050505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107d157604051634084351160e01b815260040160405180910390fd5b6000868152600160205260408120908490036109895780541561080757604051633be1b34d60e11b815260040160405180910390fd5b61081186866113dc565b600061081d8787611580565b905060008760405160200161083291906122bb565b60405160208183030381529060405280519060200120905060008780519060200120905060006108618a6115ce565b9050838160800181815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638c98b3c6827f00000000000000000000000000000000000000000000000000000000000000008c8f8c6040516020016108db929190918252602082015260400190565b604051602081830303815290604052805190602001206040518563ffffffff1660e01b815260040161091094939291906124ee565b6020604051808303816000875af115801561092f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109539190612534565b9285555060018401556002830191909155600490910180546001600160a01b0319166001600160a01b03831617905590506106ea565b600087815260016020526040902054806109b65760405163398b1c0960e21b815260040160405180910390fd5b80876040516020016109c891906122bb565b60405160208183030381529060405280519060200120146109fc5760405163332ee11f60e01b815260040160405180910390fd5b60018201548651602088012014610a2657604051631a3272d160e31b815260040160405180910390fd5b610a3087876113dc565b6000610a3b886115ce565b6002840154608082015290506001869003610b7e5760058301546001600160a01b031615610a7b5760405162e896af60e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638c98b3c6827f00000000000000000000000000000000000000000000000000000000000000008a338e8b604051602001610ae293929190612551565b604051602081830303815290604052805190602001206040518563ffffffff1660e01b8152600401610b1794939291906124ee565b6020604051808303816000875af1158015610b36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5a9190612534565b6005840180546001600160a01b0319166001600160a01b03831617905593506106e6565b85600203610cb45760068301546001600160a01b031615610bb15760405162e896af60e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638c98b3c6827f00000000000000000000000000000000000000000000000000000000000000008a338e8b604051602001610c1893929190612551565b604051602081830303815290604052805190602001206040518563ffffffff1660e01b8152600401610c4d94939291906124ee565b6020604051808303816000875af1158015610c6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c909190612534565b6006840180546001600160a01b0319166001600160a01b03831617905593506106e6565b85600303610dea5760078301546001600160a01b031615610ce75760405162e896af60e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638c98b3c6827f00000000000000000000000000000000000000000000000000000000000000008a338e8b604051602001610d4e93929190612551565b604051602081830303815290604052805190602001206040518563ffffffff1660e01b8152600401610d8394939291906124ee565b6020604051808303816000875af1158015610da2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc69190612534565b6007840180546001600160a01b0319166001600160a01b03831617905593506106e6565b85600403610f205760088301546001600160a01b031615610e1d5760405162e896af60e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638c98b3c6827f00000000000000000000000000000000000000000000000000000000000000008a338e8b604051602001610e8493929190612551565b604051602081830303815290604052805190602001206040518563ffffffff1660e01b8152600401610eb994939291906124ee565b6020604051808303816000875af1158015610ed8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efc9190612534565b6008840180546001600160a01b0319166001600160a01b03831617905593506106e6565b604051631d9f815960e11b815260040160405180910390fd5b6040516349124ca360e01b815260009073__$04b283107449142c3a86c88d1d4ad5a326$$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063d0b457ce9060a401608060405180830381865af4158015611cda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cfe9190612ced565b935093509350935080611d1a5750600098975050505050505050565b868414611d4b57611d2a84611fa2565b600280546001600160801b0319166001600160801b03929092169190911790555b858314611d7c57611d5b83611fcc565b600480546001600160801b0319166001600160801b03929092169190911790555b848214611daa57611d8c82611fa2565b600280546001600160801b03928316600160801b0292169190911790555b50600198975050505050505050565b6000611dc58284612d23565b6114c59084612c7a565b600254600454600091610f75916001600160801b0390911690600f0b61201a565b6000611e11878787611e0a88670de0b6b3a7640000612c7a565b8787612040565b979650505050505050565b6000611e3382611e2d858888611f56565b9061206e565b95945050505050565b6000611ea7611e7d611e5684670de0b6b3a7640000612c7a565b611149670de0b6b3a7640000611e6c818a611c0c565b611e769190612c7a565b8790611a0c565b611e8f90670de0b6b3a7640000612c8d565b611ea184670de0b6b3a7640000612c7a565b90611a58565b949350505050565b600080611ee685611ebe611dcf565b611ec89190612c8d565b6002546117ca908790600160801b90046001600160801b0316612c7a565b909210949350505050565b60405163bb55fd2760e01b815260040160405180910390fd5b6000806000806000611f1d8987896114cc565b9092509050611f2c8289612c7a565b97506000611f3b82888a611f56565b9050611f47818b612c7a565b9a989950979650505050505050565b6000826000190484118302158202611f6d57600080fd5b5091020490565b60006001600160ff1b03821115611f9e5760405163396ea70160e11b815260040160405180910390fd5b5090565b60006001600160801b03821115611f9e57604051630f0af95160e11b815260040160405180910390fd5b60006f7fffffffffffffffffffffffffffffff19821280611ffc57506f7fffffffffffffffffffffffffffffff82135b15611f9e5760405163a5353be560e01b815260040160405180910390fd5b60008061202784846120d9565b90925090508061203957612039611ef1565b5092915050565b600080612051888888888888612118565b90925090508061206357612063611ef1565b509695505050505050565b6000816000036120875750670de0b6b3a7640000610d9e565b8260000361209757506000610d9e565b60006120a283611f74565b905060006120b76120b286611f74565b6121e0565b90508181026120ce670de0b6b3a764000082612d37565b9050611c0281611a6d565b6000806000836120e886611f74565b6120f29190612ca0565b9050600081121561210a576000809250925050612111565b9150600190505b9250929050565b600080600061212a8989888888612406565b905061214486611e2d61213d8a8d612c8d565b8790611a43565b9850612151858a86611f56565b9850888110156121685760008092509250506121d5565b888103670de0b6b3a7640000811061219d5761219661218f670de0b6b3a764000089611c0c565b829061206e565b90506121b5565b6121b261218f670de0b6b3a764000089611a58565b90505b808910156121cb576000809350935050506121d5565b8803925060019150505b965096945050505050565b60008082136122025760405163e61b497560e01b815260040160405180910390fd5b506001600160801b03811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f198201906122859084901c611f74565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6000612412858561206e565b61242b61242386611e2d868b611a0c565b859085611a1d565b611c029190612c8d565b8183823760009101908152919050565b805160208201516001600160e01b031980821692919060048310156124745780818460040360031b1b83161693505b505050919050565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff811182821017156124b6576124b661247c565b60405290565b60005b838110156124d75781810151838201526020016124bf565b50506000910152565b6000602082840312156124f257600080fd5b815167ffffffffffffffff8082111561250a57600080fd5b818401915084601f83011261251e57600080fd5b8151818111156125305761253061247c565b604051601f8201601f19908116603f011681019083821181831017156125585761255861247c565b8160405282815287602084870101111561257157600080fd5b611e118360208301602088016124bc565b6001600160a01b0381168114610e2557600080fd5b6000602082840312156125a957600080fd5b81356114c581612582565b8015158114610e2557600080fd5b80356125cd816125b4565b919050565b6000602082840312156125e457600080fd5b81356114c5816125b4565b600060608284031215610b8b57600080fd5b60008060006060848603121561261657600080fd5b8335925060208401359150604084013567ffffffffffffffff81111561263b57600080fd5b612647868287016125ef565b9150509250925092565b60008083601f84011261266357600080fd5b50813567ffffffffffffffff81111561267b57600080fd5b6020830191508360208260051b850101111561211157600080fd5b600080600080600080608087890312156126af57600080fd5b86356126ba81612582565b955060208701356126ca81612582565b9450604087013567ffffffffffffffff808211156126e757600080fd5b6126f38a838b01612651565b9096509450606089013591508082111561270c57600080fd5b5061271989828a01612651565b979a9699509497509295939492505050565b6000806000806080858703121561274157600080fd5b84359350602085013561275381612582565b9250604085013561276381612582565b9396929550929360600135925050565b6000806000806080858703121561278957600080fd5b5050823594602084013594506040840135936060013592509050565b600080600080608085870312156127bb57600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff8111156127e757600080fd5b6127f3878288016125ef565b91505092959194509250565b60006020828403121561281157600080fd5b813567ffffffffffffffff81111561282857600080fd5b611ea7848285016125ef565b6000806040838503121561284757600080fd5b50508035926020909101359150565b600080600080600060a0868803121561286e57600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff8111156128a157600080fd5b6128ad888289016125ef565b9150509295509295909350565b600080600080608085870312156128d057600080fd5b8435935060208501356128e281612582565b92506040850135915060608501356128f981612582565b939692955090935050565b600080600080600060a0868803121561291c57600080fd5b85359450602086013561292e81612582565b9350604086013561293e81612582565b925060608601359150608086013561295581612582565b809150509295509295909350565b60006020828403121561297557600080fd5b5035919050565b80356001600160801b03811681146125cd57600080fd5b600080604083850312156129a657600080fd5b6129af8361297c565b91506129bd6020840161297c565b90509250929050565b600080604083850312156129d957600080fd5b82356129e481612582565b915060208301356129f4816125b4565b809150509250929050565b600080600060608486031215612a1457600080fd5b505081359360208301359350604090920135919050565b600080600060608486031215612a4057600080fd5b833592506020840135612a5281612582565b929592945050506040919091013590565b600080600080600080600060e0888a031215612a7e57600080fd5b8735612a8981612582565b96506020880135612a9981612582565b95506040880135612aa9816125b4565b945060608801359350608088013560ff81168114612ac657600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600060208284031215612af557600080fd5b6114c58261297c565b8035600f81900b81146125cd57600080fd5b80356001600160701b03811681146125cd57600080fd5b60006101808284031215612b3a57600080fd5b612b42612492565b612b4b8361297c565b8152612b596020840161297c565b6020820152612b6a6040840161297c565b6040820152612b7b6060840161297c565b6060820152612b8c60808401612afe565b6080820152612b9d60a0840161297c565b60a0820152612bae60c0840161297c565b60c0820152612bbf60e0840161297c565b60e0820152610100612bd28185016125c2565b90820152610120612be48482016125c2565b90820152610140612bf6848201612b10565b90820152610160612c0884820161297c565b908201529392505050565b600060208284031215612c2557600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b8201612c5757612c57612c2c565b5060000390565b60008251612c708184602087016124bc565b9190910192915050565b81810381811115610d9e57610d9e612c2c565b80820180821115610d9e57610d9e612c2c565b818103600083128015838313168383128216171561203957612039612c2c565b8082028115828204841417610d9e57610d9e612c2c565b634e487b7160e01b600052601260045260246000fd5b60008060008060808587031215612d0357600080fd5b84519350602085015192506040850151915060608501516128f9816125b4565b600082612d3257612d32612cd7565b500690565b600082612d4657612d46612cd7565b600160ff1b821460001984141615612d6057612d60612c2c565b50059056fea26469706673582212209051a7df167f1dd2271077ed12892bb6def9fe2932a1f395b2b5cb09a7200ad664736f6c634300081600336102806040523480156200001257600080fd5b5060405162004228380380620042288339810160408190526200003591620001ae565b600160005581516001600160a01b039081166080908152602080850151831660a0908152918501516101a052908401516101c05260c0808501516101e090815260e080870151610200526101208088015190935261010080880151909152610140808801519091529086018051519092528151909201519091528051604090810151610160529051606090810151610180529084015182166102405290920151610260521661022052620002eb565b60405161020081016001600160401b03811182821017156200011657634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b03811681146200013457600080fd5b919050565b6000608082840312156200014c57600080fd5b604051608081016001600160401b03811182821017156200017d57634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600080828403610280811215620001c457600080fd5b61026080821215620001d557600080fd5b620001df620000e4565b9150620001ec856200011c565b8252620001fc602086016200011c565b60208301526200020f604086016200011c565b6040830152606085015160608301526080850151608083015260a085015160a083015260c085015160c083015260e085015160e08301526101008086015181840152506101208086015181840152506101408086015181840152506101606200027a8187016200011c565b908301526101806200028e8682016200011c565b908301526101a0620002a28682016200011c565b908301526101c0620002b68682016200011c565b908301526101e0620002cb8787830162000139565b8184015250819350620002e08186016200011c565b925050509250929050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051613da66200048260003960008181610dab01526123a7015260008181610d7c015261236a015260008181610c5601528181610edb01528181610f6b01528181610ffb0152818161108b0152818161168c01528181611724015281816118ed01528181611f2101528181611ff7015261214e01526000610e43015260008181610e1d015261255a015260008181610df70152612534015260008181610dd1015261250e01526000611198015260006111720152600061114c01526000611126015260008181610eb50152612580015260008181610e69015281816113130152612a9c015260008181610e8f0152612edb01526000818161061b0152610d4d01526000818161074b01528181610d1e015281816112c601528181611e95015281816126440152818161268d0152818161273f0152818161278801528181612c0101528181612cad01528181612d990152612e450152613da66000f3fe608060405234801561001057600080fd5b506004361061023c5760003560e01c806360246c881161013b578063bd85b039116100b8578063cf210e651161007c578063cf210e65146104f1578063d816574314610504578063e44808bc14610519578063e985e9c51461052c578063fba560081461053f57600080fd5b8063bd85b039146104a3578063becee9c3146104b6578063c55dae63146104d6578063c69e16ad14610434578063c6e6f592146104de57600080fd5b80639cd241af116100ff5780639cd241af14610444578063a22cb46514610457578063ab033ea91461046a578063b0d965801461047b578063b88fed9f1461049057600080fd5b806360246c88146103fa5780637180c8ca1461040f5780637ecebe00146104215780638e67f87e14610434578063950c5d031461043c57600080fd5b806320fc4881116101c95780633e691db91161018d5780633e691db91461039657806346fbf68e146103a95780634e41a1fb146103cc5780634ed2d6ac146103df57806354fd4d50146103f257600080fd5b806320fc4881146102fb57806321ff32a914610340578063313ce567146103615780633656eec21461037b5780633a98ef391461038e57600080fd5b806306fdde031161021057806306fdde031461029a5780630a4e1493146102a257806314e5f07b146102c257806317fad7fc146102d55780631c0f12b6146102e857600080fd5b8062ad800c1461024157806301681a621461026a57806302329a291461027f57806304baa00b14610292575b600080fd5b61025461024f36600461312c565b61056e565b6040516102619190613195565b60405180910390f35b61027d6102783660046131bd565b6105a5565b005b61027d61028d3660046131e8565b6105ae565b6102546105b7565b6102546105f6565b6102aa61060d565b6040516001600160a01b039091168152602001610261565b61027d6102d0366004613214565b61064d565b61027d6102e33660046132ef565b610669565b61027d6102f6366004613384565b61067f565b61030e61030936600461312c565b610692565b6040805182516001600160801b0390811682526020808501518216908301529282015190921690820152606001610261565b61035361034e3660046133cc565b6106fe565b604051908152602001610261565b610369610744565b60405160ff9091168152602001610261565b61035361038936600461340e565b6107df565b610353610818565b6103536103a436600461343e565b610837565b6103bc6103b73660046131bd565b610842565b6040519015158152602001610261565b6102546103da36600461312c565b610862565b61027d6103ed366004613479565b610870565b6102546108be565b6104026108f3565b60405161026191906134c3565b61027d61041d366004613564565b5050565b61035361042f3660046131bd565b610c02565b610353610c2e565b6102aa610c48565b61027d610452366004613592565b610c88565b61027d610465366004613564565b610c99565b61027d6104783660046131bd565b50565b610483610d05565b60405161026191906135ca565b61035361049e36600461312c565b6111cd565b6103536104b136600461312c565b6111db565b6104c96104c43660046136f0565b6111fd565b6040516102619190613732565b6102aa6112b8565b6103536104ec36600461312c565b6112f8565b6103536104ff36600461312c565b611306565b61050c61133d565b6040516102619190613776565b61027d610527366004613887565b611449565b6103bc61053a3660046138e6565b611491565b6105476114d5565b6040805182516001600160801b039081168252602093840151169281019290925201610261565b60606105a061057c83611534565b60405160200161058c9190613195565b60405160208183030381529060405261165c565b919050565b61047881611680565b610478816118eb565b60606105f36040518060400160405280600e81526020016d4d6f636b4879706572647269766560901b81525060405160200161058c9190613195565b90565b60606105f3600160405160200161058c9190613914565b604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660208201526000916105f3910161058c565b61065e898989898989898989611a05565b505050505050505050565b610677868686868686611bfc565b505050505050565b61068c8484848433611cb0565b50505050565b60408051606081018252600080825260208201819052918101919091526105a06008600084815260200190815260200160002060405160200161058c919081546001600160801b03808216835260809190911c6020830152600190920154909116604082015260600190565b6000838152600d602090815260408083206001600160a01b038681168552908352818420908516845282528083205481519283015261073d910161058c565b9392505050565b60006105f37f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cb91906139c5565b6040805160ff90921660208301520161058c565b6000828152600a602090815260408083206001600160a01b0385168452825280832054815192830152610812910161058c565b92915050565b60006105f3610825611e71565b60405160200161058c91815260200190565b600061081282611f0a565b60006105a061085083612149565b6040805191151560208301520161058c565b60606105a061057c8361222e565b8361087a8161232c565b6001600160a01b0316336001600160a01b0316146108ab57604051632aab8bd360e01b815260040160405180910390fd5b6108b7858585856123e9565b5050505050565b60606105f3604051806040016040528060078152602001660ec625c605c62760cb1b81525060405160200161058c9190613195565b61096c604051806101e001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000610976612456565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7654939450926001600160801b03909216916109e19190613a0e565b6109eb9190613a21565b905060008215610afd5773__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e610a1885612469565b6040805160e084811b6001600160e01b03191682528351600483015260208401516024830152918301516044820152606083015160648201526080830151608482015260a083015160a482015260c083015160c48201529082015160e482015261010082015161010482015261012082015161012482015261014082015161014482015261016090910151610164820152610184016040805180830381865af4158015610ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aed9190613a34565b509050610afa81846125ff565b90505b604080516101e0810182526002546001600160801b038082168352600454600f81900b60208501526006546001600160701b036201000082041695850195909552600160801b9485900482166060850152918490048116608084015260a0830186905260c08301879052600354849004811660e0840152600554808216610100850152918490048116610120840152908390048116610140830152600754808216610160840152929092049091166101808201526000906101a081018415610bce57610bc98486612614565b610bd1565b60005b81526003546001600160801b0316602091820152604051919250610bfb9161058c918491016134c3565b5050505090565b6001600160a01b0381166000908152600e60209081526040808320548151928301526105a0910161058c565b60006105f360095460405160200161058c91815260200190565b604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660208201526000916105f3910161058c565b610c94838383336123e9565b505050565b336000818152600c602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610d0d613045565b6105f36040518061020001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5b9190613a64565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c415b95c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610feb9190613a64565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166310780f736040518163ffffffff1660e01b8152600401602060405180830381865afa158015611057573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107b9190613a64565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f25964586040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110b9190613a64565b6001600160a01b0316815260200160405180608001604052807f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081526020017f000000000000000000000000000000000000000000000000000000000000000081525081525060405160200161058c91906135ca565b60006105a061082583612629565b6000818152600b60209081526040808320548151928301526105a0910161058c565b606060008267ffffffffffffffff81111561121a5761121a613a81565b604051908082528060200260200182016040528015611243578160200160208202803683370190505b50905060005b8381101561129c57600085858381811061126557611265613a97565b9050602002013590506000815490508084848151811061128757611287613a97565b60209081029190910101525050600101611249565b506112b18160405160200161058c9190613732565b5092915050565b604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660208201526000916105f3910161058c565b60006105a061082583612724565b60006105a06108256113387f000000000000000000000000000000000000000000000000000000000000000085613a0e565b61280d565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081018290526101608101919091526105f3600260405160200161058c919081546001600160801b038082168352608091821c602084015260018401548082166040850152821c60608401526002840154600f81900b83850152821c60a0840152600384015490811660c0840152811c60e083015260049092015460ff8082161515610100840152600882901c1615156101208301526001600160701b03601082901c1661014083015290911c6101608201526101800190565b846114538161232c565b6001600160a01b0316336001600160a01b03161461148457604051632aab8bd360e01b815260040160405180910390fd5b6106778686868686611cb0565b6001600160a01b038281166000908152600c60209081526040808320938516835292815282822054835160ff9091161515918101919091529091610812910161058c565b60408051808201909152600080825260208201526040805180820182526007546001600160801b03808216808452600160801b90920481166020938401908152845193840192909252905116918101919091526105f39060600161058c565b606060f882901c6001600160f81b038316600061155082612851565b90506000836003811115611566576115666139e2565b03611598576040518060400160405280600d81526020016c048797065726472697665204c5609c1b8152509350611654565b60018360038111156115ac576115ac6139e2565b036115d857806040516020016115c29190613aad565b6040516020818303038152906040529350611654565b60028360038111156115ec576115ec6139e2565b0361160257806040516020016115c29190613ae6565b6003836003811115611616576116166139e2565b03611654576040518060400160405280601b81526020017f48797065726472697665205769746864726177616c205368617265000000000081525093505b505050919050565b80604051636e64089360e11b81526004016116779190613195565b60405180910390fd5b611688612906565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166310780f736040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170c9190613a64565b9050336001600160a01b038216148015906117ba57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa158015611780573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a49190613a64565b6001600160a01b0316336001600160a01b031614155b80156117cc57506117ca33612149565b155b156117e9576040516282b42960e81b815260040160405180910390fd5b60006117f3611e71565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038516906370a0823190602401602060405180830381865afa15801561183d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118619190613b20565b90506118776001600160a01b0385168483612930565b81611880611e71565b1461189e576040516313dd85ff60e31b815260040160405180910390fd5b836001600160a01b0316836001600160a01b03167f951f51ee88c8e42633698bba90d1e53c0954470938036879e691c0232b47e09660405160405180910390a35050506104786001600055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa158015611949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196d9190613a64565b6001600160a01b0316336001600160a01b031614158015611994575061199233612149565b155b156119b1576040516282b42960e81b815260040160405180910390fd5b600680548215156101000261ff00199091161790556040517f7c4d1fe30fdbfda9e9c4c43e759ef32e4db5128d4cb58ff3ae9583b89b6242a5906119fa90831515815260200190565b60405180910390a150565b83421115611a265760405163f87d927160e01b815260040160405180910390fd5b6001600160a01b038716611a4d5760405163f0dd15fd60e01b815260040160405180910390fd5b6001600160a01b038781166000818152600e602090815260408083205481518084018f905280830195909552948b166060850152891515608085015260a084019490945260c08084018990528451808503909101815260e08401909452835193019290922061190160f01b61010083015261010282018c90526101228201526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611b3b573d6000803e3d6000fd5b505050602060405103519050886001600160a01b0316816001600160a01b031614611b7957604051638baa579f60e01b815260040160405180910390fd5b6001600160a01b038981166000818152600e6020908152604080832080546001019055600c8252808320948d1680845294825291829020805460ff19168c151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050505050505050505050565b6001600160a01b0386161580611c1957506001600160a01b038516155b15611c375760405163f0dd15fd60e01b815260040160405180910390fd5b828114611c575760405163174861a760e31b815260040160405180910390fd5b60005b83811015611ca757611c9f858583818110611c7757611c77613a97565b905060200201358888868686818110611c9257611c92613a97565b9050602002013533611cb0565b600101611c5a565b50505050505050565b6001600160a01b0384161580611ccd57506001600160a01b038316155b15611ceb5760405163f0dd15fd60e01b815260040160405180910390fd5b836001600160a01b0316816001600160a01b031614611daf576001600160a01b038085166000908152600c602090815260408083209385168352929052205460ff16611daf576000858152600d602090815260408083206001600160a01b03808916855290835281842090851684529091529020546000198114611dad576000868152600d602090815260408083206001600160a01b03808a168552908352818420908616845290915281208054859290611da7908490613a21565b90915550505b505b6000858152600a602090815260408083206001600160a01b038816845290915281208054849290611de1908490613a21565b90915550506000858152600a602090815260408083206001600160a01b038716845290915281208054849290611e18908490613a0e565b909155505060408051868152602081018490526001600160a01b038086169287821692918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6040516370a0823160e01b8152306004820152600090611f05906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611edc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f009190613b20565b612724565b905090565b6000611f14612906565b611f1d82612982565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c415b95c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa19190613a64565b90506001600160a01b038116611fba60208501856131bd565b6001600160a01b031614611fe157604051630ad13b3360e21b815260040160405180910390fd5b336001600160a01b0382161480159061208d57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e33315556040518163ffffffff1660e01b8152600401602060405180830381865afa158015612053573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120779190613a64565b6001600160a01b0316336001600160a01b031614155b801561209f575061209d33612149565b155b156120bc576040516282b42960e81b815260040160405180910390fd5b60006120c6612456565b6009805460009091559091506120dd8183876129b8565b93506001600160a01b0383167f3e5eb8642141e29a1b4e5c28b467396f814c1698e1adfc3ff327ddb9a6038361858461211c60408a0160208b016131e8565b60408051938452602084019290925215159082015260600160405180910390a25050506105a06001600055565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a64c90bf6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156121aa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526121d29190810190613b39565b905060005b815181101561222457836001600160a01b03168282815181106121fc576121fc613a97565b60200260200101516001600160a01b03160361221c575060019392505050565b6001016121d7565b5060009392505050565b606060f882901c6001600160f81b038316600061224a82612851565b90506000836003811115612260576122606139e2565b03612292576040518060400160405280600d81526020016c0485950455244524956452d4c5609c1b8152509350611654565b60018360038111156122a6576122a66139e2565b036122bc57806040516020016115c29190613bfe565b60028360038111156122d0576122d06139e2565b036122e657806040516020016115c29190613c36565b60038360038111156122fa576122fa6139e2565b0361165457505060408051808201909152600d81526c485950455244524956452d575360981b60208201529392505050565b604080513060208083019190915281830193909352815180820383018152606080830184528151918501919091206001600160f81b031960808401527f000000000000000000000000000000000000000000000000000000000000000090911b6bffffffffffffffffffffffff1916608183015260958201527f000000000000000000000000000000000000000000000000000000000000000060b5808301919091528251808303909101815260d5909101909152805191012090565b6000848152600d602090815260408083206001600160a01b0385811680865291845282852090881680865290845293829020869055905185815290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050565b6000611f05670de0b6b3a7640000612629565b6124cd6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e083015260035404821661010082015260055490916101208301916125c59116612a51565b81526004546001600160801b03600160801b91829004811660208401526005546040909301926125f792900416612a51565b905292915050565b600061073d8383670de0b6b3a7640000612ac7565b600061073d83670de0b6b3a764000084612ac7565b60008073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031601612678575047612703565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156126dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127009190613b20565b90505b600f5460000361271457600061073d565b600f5461073d9084908390612ac7565b60008073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316016127735750476127fe565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156127d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127fb9190613b20565b90505b600f5461073d90849083612ac7565b6000612835600b6000612821600286612ae5565b815260200190815260200160002054612b1a565b612847600b6000612821600187612ae5565b6108129190613c62565b60408051604e80825260808201909252606091906000908260208201818036833701905050905060005b84156128f85761288c600a86613c98565b612897906030613a0e565b60f81b8260016128a78487613a21565b6128b19190613a21565b815181106128c1576128c1613a97565b60200101906001600160f81b031916908160001a905350806128e281613cac565b91506128f19050600a86613cc5565b945061287b565b918290030190815292915050565b60026000540361292957604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610c94908490612b48565b600061299160208301836131bd565b6001600160a01b0316036104785760405163f0dd15fd60e01b815260040160405180910390fd5b6000806129c585856125ff565b90506129d081612724565b9450846000036129e457600091505061073d565b8491506129f760408401602085016131e8565b15612a2657612a1f85612a0d60208601866131bd565b612a1a6040870187613cd9565b612bab565b9150612a49565b612a4985612a3760208601866131bd565b612a446040870187613cd9565b612d45565b509392505050565b600080670de0b6b3a7640000612a65612ed3565b612a6f9190613d20565b9050808311612a7f576000612a89565b612a898184613a21565b915061073d612ac0670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000613d20565b8390612614565b6000826000190484118302158202612ade57600080fd5b5091020490565b60006001600160f81b03821115612b0f5760405163b7d0949760e01b815260040160405180910390fd5b5060f89190911b1790565b60006001600160ff1b03821115612b445760405163396ea70160e11b815260040160405180910390fd5b5090565b6000612b5d6001600160a01b03841683612eff565b90508051600014158015612b82575080806020019051810190612b809190613d37565b155b15610c9457604051635274afe760e01b81526001600160a01b0384166004820152602401611677565b6000600f548511612bbc5784612bc0565b600f545b94506000612bcd86612629565b905085600f6000828254612be19190613a21565b909155506000905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031601612c87576040516001600160a01b038716908390600081818185875af1925050503d8060008114612c77576040519150601f19603f3d011682016040523d82523d6000602084013e612c7c565b606091505b505080915050612d1d565b60405163a9059cbb60e01b81526001600160a01b038781166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015612cf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d1a9190613d37565b90505b80612d3b576040516312171d8360e31b815260040160405180910390fd5b5095945050505050565b600f548411612d545783612d58565b600f545b93506000612d6585612629565b905084600f6000828254612d799190613a21565b909155506000905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031601612e1f576040516001600160a01b038616908390600081818185875af1925050503d8060008114612e0f576040519150601f19603f3d011682016040523d82523d6000602084013e612e14565b606091505b505080915050612eb5565b60405163a9059cbb60e01b81526001600160a01b038681166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015612e8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eb29190613d37565b90505b80610677576040516312171d8360e31b815260040160405180910390fd5b6000611f05427f0000000000000000000000000000000000000000000000000000000000000000612f0d565b606061073d83836000612f23565b6000612f198284613c98565b61073d9084613a21565b606081471015612f485760405163cd78605960e01b8152306004820152602401611677565b600080856001600160a01b03168486604051612f649190613d54565b60006040518083038185875af1925050503d8060008114612fa1576040519150601f19603f3d011682016040523d82523d6000602084013e612fa6565b606091505b5091509150612fb6868383612fc0565b9695505050505050565b606082612fd557612fd08261301c565b61073d565b8151158015612fec57506001600160a01b0384163b155b1561301557604051639996b31560e01b81526001600160a01b0385166004820152602401611677565b508061073d565b80511561302c5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60405180610200016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600080191681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681526020016131276040518060800160405280600081526020016000815260200160008152602001600081525090565b905290565b60006020828403121561313e57600080fd5b5035919050565b60005b83811015613160578181015183820152602001613148565b50506000910152565b60008151808452613181816020860160208601613145565b601f01601f19169290920160200192915050565b60208152600061073d6020830184613169565b6001600160a01b038116811461047857600080fd5b6000602082840312156131cf57600080fd5b813561073d816131a8565b801515811461047857600080fd5b6000602082840312156131fa57600080fd5b813561073d816131da565b60ff8116811461047857600080fd5b60008060008060008060008060006101208a8c03121561323357600080fd5b8935985060208a0135975060408a013561324c816131a8565b965060608a013561325c816131a8565b955060808a013561326c816131da565b945060a08a0135935060c08a013561328381613205565b8093505060e08a013591506101008a013590509295985092959850929598565b60008083601f8401126132b557600080fd5b50813567ffffffffffffffff8111156132cd57600080fd5b6020830191508360208260051b85010111156132e857600080fd5b9250929050565b6000806000806000806080878903121561330857600080fd5b8635613313816131a8565b95506020870135613323816131a8565b9450604087013567ffffffffffffffff8082111561334057600080fd5b61334c8a838b016132a3565b9096509450606089013591508082111561336557600080fd5b5061337289828a016132a3565b979a9699509497509295939492505050565b6000806000806080858703121561339a57600080fd5b8435935060208501356133ac816131a8565b925060408501356133bc816131a8565b9396929550929360600135925050565b6000806000606084860312156133e157600080fd5b8335925060208401356133f3816131a8565b91506040840135613403816131a8565b809150509250925092565b6000806040838503121561342157600080fd5b823591506020830135613433816131a8565b809150509250929050565b60006020828403121561345057600080fd5b813567ffffffffffffffff81111561346757600080fd5b82016060818503121561073d57600080fd5b6000806000806080858703121561348f57600080fd5b8435935060208501356134a1816131a8565b92506040850135915060608501356134b8816131a8565b939692955090935050565b815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a080830151908201526101c091820151918101919091526101e00190565b6000806040838503121561357757600080fd5b8235613582816131a8565b91506020830135613433816131da565b6000806000606084860312156135a757600080fd5b8335925060208401356135b9816131a8565b929592945050506040919091013590565b81516001600160a01b03168152610260810160208301516135f660208401826001600160a01b03169052565b50604083015161361160408401826001600160a01b03169052565b50606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525061014080840151818401525061016080840151613683828501826001600160a01b03169052565b5050610180838101516001600160a01b03908116918401919091526101a0808501518216908401526101c080850151909116908301526101e0808401518051828501526020810151610200850152604081015161022085015260608101516102408501525b505092915050565b6000806020838503121561370357600080fd5b823567ffffffffffffffff81111561371a57600080fd5b613726858286016132a3565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b8181101561376a5783518352928401929184019160010161374e565b50909695505050505050565b81516001600160801b03168152610180810160208301516137a260208401826001600160801b03169052565b5060408301516137bd60408401826001600160801b03169052565b5060608301516137d860608401826001600160801b03169052565b5060808301516137ed6080840182600f0b9052565b5060a083015161380860a08401826001600160801b03169052565b5060c083015161382360c08401826001600160801b03169052565b5060e083015161383e60e08401826001600160801b03169052565b506101008381015115159083015261012080840151151590830152610140808401516001600160701b031690830152610160808401516001600160801b038116828501526136e8565b600080600080600060a0868803121561389f57600080fd5b8535945060208601356138b1816131a8565b935060408601356138c1816131a8565b92506060860135915060808601356138d8816131a8565b809150509295509295909350565b600080604083850312156138f957600080fd5b8235613904816131a8565b91506020830135613433816131a8565b60006020808352600084548160018260011c9150600183168061393857607f831692505b60208310810361395657634e487b7160e01b85526022600452602485fd5b6020880183905260408801818015613975576001811461398b576139b6565b60ff198616825284151560051b820196506139b6565b60008b81526020902060005b868110156139b057815484820152908501908901613997565b83019750505b50949998505050505050505050565b6000602082840312156139d757600080fd5b815161073d81613205565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610812576108126139f8565b81810381811115610812576108126139f8565b60008060408385031215613a4757600080fd5b825191506020830151613433816131da565b80516105a0816131a8565b600060208284031215613a7657600080fd5b815161073d816131a8565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b700243cb832b9323934bb32902637b7339d1607d1b815260008251613ad9816011850160208701613145565b9190910160110192915050565b710243cb832b9323934bb329029b437b93a1d160751b815260008251613b13816012850160208701613145565b9190910160120192915050565b600060208284031215613b3257600080fd5b5051919050565b60006020808385031215613b4c57600080fd5b825167ffffffffffffffff80821115613b6457600080fd5b818501915085601f830112613b7857600080fd5b815181811115613b8a57613b8a613a81565b8060051b604051601f19603f83011681018181108582111715613baf57613baf613a81565b604052918252848201925083810185019188831115613bcd57600080fd5b938501935b82851015613bf257613be385613a59565b84529385019392850192613bd2565b98975050505050505050565b6f242ca822a9222924ab2296a627a7239d60811b815260008251613c29816010850160208701613145565b9190910160100192915050565b70242ca822a9222924ab2296a9a427a92a1d60791b815260008251613ad9816011850160208701613145565b81810360008312801583831316838312821617156112b1576112b16139f8565b634e487b7160e01b600052601260045260246000fd5b600082613ca757613ca7613c82565b500690565b600060018201613cbe57613cbe6139f8565b5060010190565b600082613cd457613cd4613c82565b500490565b6000808335601e19843603018112613cf057600080fd5b83018035915067ffffffffffffffff821115613d0b57600080fd5b6020019150368190038213156132e857600080fd5b8082028115828204841417610812576108126139f8565b600060208284031215613d4957600080fd5b815161073d816131da565b60008251613d66818460208701613145565b919091019291505056fea26469706673582212202ad79efd3f3b3fccf1a14fcd06be8666869969ef660f52b0d5f9ce3f0ebf299964736f6c634300081600336102806040523480156200001257600080fd5b506040516200425c3803806200425c8339810160408190526200003591620001ae565b600160005581516001600160a01b039081166080908152602080850151831660a0908152918501516101a052908401516101c05260c0808501516101e090815260e080870151610200526101208088015190935261010080880151909152610140808801519091529086018051519092528151909201519091528051604090810151610160529051606090810151610180529084015182166102405290920151610260521661022052620002eb565b60405161020081016001600160401b03811182821017156200011657634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b03811681146200013457600080fd5b919050565b6000608082840312156200014c57600080fd5b604051608081016001600160401b03811182821017156200017d57634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600080828403610280811215620001c457600080fd5b61026080821215620001d557600080fd5b620001df620000e4565b9150620001ec856200011c565b8252620001fc602086016200011c565b60208301526200020f604086016200011c565b6040830152606085015160608301526080850151608083015260a085015160a083015260c085015160c083015260e085015160e08301526101008086015181840152506101208086015181840152506101408086015181840152506101606200027a8187016200011c565b908301526101806200028e8682016200011c565b908301526101a0620002a28682016200011c565b908301526101c0620002b68682016200011c565b908301526101e0620002cb8787830162000139565b8184015250819350620002e08186016200011c565b925050509250929050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051613da1620004bb60003960005050600050506000610b650152600050506000818160af01528181610325015261301c0152600081816113eb015281816117fc0152818161185f01528181612bfa01528181612c3601528181612e350152612ff601526000818161071301528181610de801528181610e2f01528181610ff401528181611661015281816116af0152612fd001526000611c1f015260008181611d45015281816123a801526124210152600081816108d701528181610f8c01528181611d1901526123f5015260008181610e81015261236e01526000818161073401528181610dc601528181610e50015281816110150152818161163f015281816116d0015261304201526000818161080f01528181610f0b015281816117580152818161224301526135760152600081816105d20152818161064d015281816106c30152818161078f01526107c7015260005050600081816119f101528181611a3a01528181612697015281816126e0015281816127bb015281816128670152818161295301526129ff0152613da16000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806329b23fc11461003b578063ded0623114610060575b600080fd5b61004e610049366004613824565b610073565b60405190815260200160405180910390f35b61004e61006e366004613824565b61008c565b60006100818585858561009a565b90505b949350505050565b600061008185858585610310565b60006100a461054f565b6100ad82610579565b7f00000000000000000000000000000000000000000000000000000000000000008410156100ee5760405163211ddda360e11b815260040160405180910390fd5b60006100f86105b2565b90508542101561011d5761011761010d6105ca565b82600460016105f6565b5061012d565b61012b8682600460016105f6565b505b61014261013b600288610c73565b3387610ca8565b6000806000806000806101568b888e610d81565b95509550955095509550955060008c90508c4210156102165782600960008282546101819190613899565b9091555061019990506101926105ca565b4284611075565b6101a68c888787856111b3565b60006101b18e61132d565b90506101cf6101bf8e611377565b6101c990836138ac565b826113a5565b6101d8896113e4565b6101e4576101e4611444565b60006101ef8a61145d565b90508061020f57604051638bdf918d60e01b815260040160405180910390fd5b505061022d565b610220868961146a565b955061022b8861145d565b505b600061023a878a8d61154b565b90508b81101561025d5760405163c972651760e01b815260040160405180910390fd5b8c86858b8e61026d600288610c73565b61027a60208301836138e1565b6001600160a01b0316337ff87a3de08b9fe89d655d6731088496cf5f5da0abd455e9f7cdc5f0c717f209e58a8a876102b86040890160208a0161390c565b6102cc8a6102c68d8f613899565b906115e5565b8d6102da60408c018c613929565b6040516102ee989796959493929190613999565b60405180910390a450939c505050505050505050505050506100846001600055565b600061031a61054f565b61032382610579565b7f00000000000000000000000000000000000000000000000000000000000000008410156103645760405163211ddda360e11b815260040160405180910390fd5b600061036e6105b2565b9050854210156103895761038361010d6105ca565b50610399565b6103978682600460016105f6565b505b6103a761013b600188610c73565b6000806000806000806103bb8b888e6115fa565b95509550955095509550955060008c90508c42101561046e5782600960008282546103e69190613899565b909155506103f790506101926105ca565b6104048c888787856117e5565b600061040f8261132d565b905061042761041d8e611377565b6101c990836139e1565b610430896113e4565b61043c5761043c611444565b60006104478a61145d565b90508061046757604051638bdf918d60e01b815260040160405180910390fd5b5050610485565b610478868961146a565b95506104838861145d565b505b6000610492878a8d61154b565b90508b8110156104b55760405163c972651760e01b815260040160405180910390fd5b8c898c6104c3600186610c73565b6104d060208301836138e1565b6001600160a01b0316337f3b2c44173852b22d1ecf7784963c2bab6d4dd07e64ed560f818f144d72ee526788888761050e6040890160208a0161390c565b8a61051c60408b018b613929565b60405161052f9796959493929190613a09565b60405180910390a450919a50505050505050505050506100846001600055565b60026000540361057257604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b600061058860208301836138e1565b6001600160a01b0316036105af5760405163f0dd15fd60e01b815260040160405180910390fd5b50565b60006105c5670de0b6b3a76400006119d6565b905090565b60006105c5427f0000000000000000000000000000000000000000000000000000000000000000611ad1565b600084815260086020526040812060018101546001600160801b031615158061061e57504286115b1561063757600101546001600160801b03169050610084565b60008060006106446105ca565b905060006106727f00000000000000000000000000000000000000000000000000000000000000008b613899565b90505b818110156106e8576000818152600860205260409020600101546001600160801b031680156106c0576000828152600860205260409020549094506001600160801b031692506106e8565b507f000000000000000000000000000000000000000000000000000000000000000001610675565b8360000361075b578893506107586106fe611ae7565b600254600160801b90046001600160801b03167f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611b08565b92505b5061076583611b1f565b6001850180546001600160801b0319166001600160801b03929092169190911790556107bb6107b47f00000000000000000000000000000000000000000000000000000000000000008b613a4a565b8a84611075565b6107f9896107f36107ec7f000000000000000000000000000000000000000000000000000000000000000083613899565b4290611b49565b84611075565b61080288611b5e565b50600090506008816108347f00000000000000000000000000000000000000000000000000000000000000008d613a4a565b815260208101919091526040016000908120600101546001600160801b0316915061086060028c610c73565b6000818152600b60205260408120549192508c8c83156109a6576001925060008061088f86898d866000611d02565b9150915080600960008282546108a59190613899565b909155506108c19050866000846108bb81611377565b886111b3565b6108cb8183613899565b91506108fb86838a8e877f0000000000000000000000000000000000000000000000000000000000000000611dd1565b915061090f61090a83856115e5565b611e1b565b600680546002906109309084906201000090046001600160701b0316613a5d565b92506101000a8154816001600160701b0302191690836001600160701b0316021790555061095d82611b1f565b6006805460109061097f908490600160801b90046001600160801b0316613a7d565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505b60006109b3600184610c73565b6000818152600b60205260409020549091508015610ac257600194506000806109e0838b8f886001611d02565b9150915080600960008282546109f69190613899565b90915550610a12905083600084610a0c81611377565b8a6117e5565b610a1c8183613a4a565b9150610a2b61090a83876115e5565b60068054600290610a4c9084906201000090046001600160701b0316613a5d565b92506101000a8154816001600160701b0302191690836001600160701b03160217905550610a7982611b1f565b60068054601090610a9b908490600160801b90046001600160801b0316613a7d565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505b8415610afc57610aee610ad487611377565b610add83611377565b610ae791906138ac565b60006113a5565b8e610af98482611e45565b50505b6000610b078461203f565b50604080518e815260208101879052908101899052606081018490526080810182905290915085907fff888cf98d2696e95c8c39aa98c9ad55a5378008f7a56614c9353b7137a57ab79060a00160405180910390a260008f905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f25964586040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be59190613a9d565b90506001600160a01b03811615610c5a57610c575a604051336024820152604481018a90528415156064820152600090819060840160408051601f198184030181529190526020810180516001600160e01b0316633488a6a760e11b1790526001600160a01b0386169392919061218b565b50505b509b9d5050505050505050505050505050949350505050565b60006001600160f81b03821115610c9d5760405163b7d0949760e01b815260040160405180910390fd5b5060f89190911b1790565b6000838152600a602090815260408083206001600160a01b0386168452909152902054811115610ceb57604051631e9acf1760e31b815260040160405180910390fd5b6000838152600a602090815260408083206001600160a01b0386168452825280832080548590039055858352600b90915281208054839290610d2e908490613a4a565b909155505060408051848152602081018390526000916001600160a01b0385169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b600080600080600080600080610d95611ae7565b90506000610da28a612216565b6002549091508c908c90610e0c908590600160801b90046001600160801b031684867f0000000000000000000000000000000000000000000000000000000000000000867f0000000000000000000000000000000000000000000000000000000000000000612267565b600254919d509a50909550610e74908590600160801b90046001600160801b03167f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611b08565b9550610eaa858c610ea5897f00000000000000000000000000000000000000000000000000000000000000006122d7565b612307565b15610eb757610eb7611444565b6000806000610ec885878b87612349565b9c5091945092509050610edb8184613a4a565b610ee59089613899565b9750610ef18284613899565b610efb908d613899565b9b505050505050506000600860007f00000000000000000000000000000000000000000000000000000000000000008c610f359190613a4a565b815260208101919091526040016000908120600101546001600160801b03169150428b11610f7d5760008b8152600860205260409020600101546001600160801b0316610f7f565b8b5b90508b610fb08e8a8585857f0000000000000000000000000000000000000000000000000000000000000000611dd1565b9950610fbc878a613a4a565b9850670de0b6b3a7640000611039610fd48787613899565b600254610ff2908f90600160801b90046001600160801b0316613a4a565b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611b08565b111561104757611047611444565b6110578a8a878a8787600061245d565b939d50919b5090995090975050505050505093975093979195509350565b600083815260086020526040902054600160801b90046001600160801b03168083036110a15750505050565b6000848152600860205260408120546001600160801b0316908190036110fb576110ca83611b1f565b600086815260086020526040902080546001600160801b0319166001600160801b0392909216919091179055611179565b61114c611147670de0b6b3a76400006111148886613a4a565b61111e9190613aba565b85670de0b6b3a7640000611132878a613a4a565b61113c9190613aba565b8592919060016124fc565b611b1f565b600086815260086020526040902080546001600160801b0319166001600160801b03929092169190911790555b61118284611b1f565b60009586526008602052604090952080546001600160801b03968716600160801b0296169590951790945550505050565b600454600160801b90046001600160801b03166111fc611147826111df670de0b6b3a764000086613aba565b600554600160801b90046001600160801b031691908a60006124fc565b600580546001600160801b03928316600160801b02921691909117905561122286611b1f565b61122c9082613ad1565b600480546001600160801b03928316600160801b02921691909117905561125284611b1f565b6002805460009061126d9084906001600160801b0316613a7d565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061129a836125a6565b600480546000906112af908490600f0b613af1565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055506112df85611b1f565b60028054601090611301908490600160801b90046001600160801b0316613ad1565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550505050505050565b6000611355600b6000611341600286610c73565b815260200190815260200160002054611377565b611367600b6000611341600187610c73565b61137191906138ac565b92915050565b60006001600160ff1b038211156113a15760405163396ea70160e11b815260040160405180910390fd5b5090565b6003546113c090611147906001600160801b031684846125e2565b600380546001600160801b0319166001600160801b03929092169190911790555050565b60006114107f000000000000000000000000000000000000000000000000000000000000000083612649565b60035461142691906001600160801b0316613899565b60025461143c906001600160801b0316846115e5565b101592915050565b60405163bb55fd2760e01b815260040160405180910390fd5b6000611371826004611e45565b600080600061147884611b5e565b9092509050600061148986866115e5565b9050818311156114a15761149e86838561265e565b95505b828110156114b35780830392506114b8565b600092505b6114c183611e1b565b600680546001600160701b039290921662010000026fffffffffffffffffffffffffffff00001990921691909117908190556001600160801b03600160801b909104168087101561151457869003611518565b5060005b61152181611b1f565b600680546001600160801b03928316600160801b0292169190911790555085935050505092915050565b60008061155885856115e5565b90506115638161267c565b9450846000036115775760009150506115de565b84915061158a604084016020850161390c565b156115b9576115b2856115a060208601866138e1565b6115ad6040870187613929565b612765565b91506115dc565b6115dc856115ca60208601866138e1565b6115d76040870187613929565b6128ff565b505b9392505050565b60006115de8383670de0b6b3a764000061265e565b60008060008060008060008061160e611ae7565b9050600061161b8a612216565b6002549091508b908d90611685908590600160801b90046001600160801b031683867f0000000000000000000000000000000000000000000000000000000000000000877f0000000000000000000000000000000000000000000000000000000000000000612a95565b600254919d509b50909550600090819081906116f4908890600160801b90046001600160801b03167f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611b08565b985061170284878b88612349565b9c5091945090925090506117168284613a4a565b6117209089613a4a565b975061172c8184613899565b611736908e613a4a565b9c506117428a8e613899565b9b50505050505050506117cf86868386600860007f00000000000000000000000000000000000000000000000000000000000000008f6117829190613a4a565b81526020810191909152604001600020600101546001600160801b0316428e116117c65760008e8152600860205260409020600101546001600160801b03166117c8565b8e5b600161245d565b9a9e939d50919b50909950929650945050505050565b6002546001600160801b03168381108061182757507f00000000000000000000000000000000000000000000000000000000000000006118258583613a4a565b105b1561183457611834611444565b6004549084900390600f0b61184984826138ac565b90508361185586611377565b13801561188a57507f00000000000000000000000000000000000000000000000000000000000000006118888383612ae9565b105b1561189757611897611444565b600354600160801b90046001600160801b03166118d9611147826118c3670de0b6b3a764000088613aba565b6005546001600160801b031691908c60006124fc565b600580546001600160801b0319166001600160801b03929092169190911790556119038882613a4a565b905061190e81611b1f565b600380546001600160801b03928316600160801b02921691909117905561193483611b1f565b600280546001600160801b0319166001600160801b039290921691909117905561195d826125a6565b600480546001600160801b0319166001600160801b039290921691909117905561198687611b1f565b600280546010906119a8908490600160801b90046001600160801b0316613a7d565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050505050505050565b60008073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031601611a25575047611ab0565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611a89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aad9190613b1e565b90505b600f54600003611ac15760006115de565b600f546115de908490839061265e565b6000611add8284613b4d565b6115de9084613a4a565b6002546004546000916105c5916001600160801b0390911690600f0b612ae9565b600061008182611b1985888861265e565b90612b0f565b60006001600160801b038211156113a157604051630f0af95160e11b815260040160405180910390fd5b6000818311611b5857826115de565b50919050565b6006546000908190611b81908490600160801b90046001600160801b03166115e5565b6006546201000090046001600160701b03169250905081811115611cfd576000611bab8383613a4a565b9050611bba6111478286612b84565b60068054601090611bdc908490600160801b90046001600160801b0316613ad1565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000611c158583612b9990919063ffffffff16565b90506000611c43827f00000000000000000000000000000000000000000000000000000000000000006115e5565b90508060096000828254611c579190613899565b90915550611c6790508183613a4a565b9150611c7282611b1f565b60028054600090611c8d9084906001600160801b0316613a7d565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611cba82612bae565b60048054600090611ccf908490600f0b613af1565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055508493505050505b915091565b600080611d0f8785612b99565b91506000611d3d837f00000000000000000000000000000000000000000000000000000000000000006115e5565b9050611d69817f00000000000000000000000000000000000000000000000000000000000000006115e5565b91508315611d8c57611d7b8282613a4a565b611d859084613a4a565b9250611da3565b611d968282613a4a565b611da09084613899565b92505b86861015611dc657611db683878961265e565b9250611dc382878961265e565b91505b509550959350505050565b600080611de984611de38a888a61265e565b90612b99565b9050611df688848661265e565b611e009082613899565b905086811115611e105786810391505b509695505050505050565b60006001600160701b038211156113a15760405163086b151760e11b815260040160405180910390fd5b600754600360f81b6000908152600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435490918291611e90916001600160801b031690613a4a565b905080600003611ea4576001915050611371565b6000611eaf85612bd8565b905080600003611ec457600192505050611371565b600080611ed2838589612c74565b9150915080611ee8576000945050505050611371565b60008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b8152600401611f24929190613bdf565b6040805180830381865af4158015611f40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f649190613c55565b91509150611f82611f7482611377565b611f7d90613c79565b612def565b925082611f985760009650505050505050611371565b611fa182611b1f565b60078054600090611fbc9084906001600160801b0316613a7d565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611fe981611b1f565b6007805460109061200b908490600160801b90046001600160801b0316613a7d565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506001965050505050505092915050565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e61206887612f87565b6040518263ffffffff1660e01b81526004016120849190613c95565b6040805180830381865af41580156120a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120c49190613ca4565b91509150806120da575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b03169161214091613899565b61214a9190613a4a565b90508060000361216257506000958695509350505050565b600080871161217257600061217d565b61217d84888461265e565b976001975095505050505050565b6000606060008060008661ffff1667ffffffffffffffff8111156121b1576121b1613cd4565b6040519080825280601f01601f1916602001820160405280156121db576020820181803683370190505b5090506000808751602089018b8e8ef191503d9250868311156121fc578692505b828152826000602083013e90999098509650505050505050565b6000806122216105ca565b905080831161223157600061223b565b61223b8184613a4a565b91506115de827f0000000000000000000000000000000000000000000000000000000000000000612b99565b6000808061228861228088670de0b6b3a7640000613a4a565b8990876130c1565b905086156122ca5761229a8888612649565b91506122bb8a8a846122b48a670de0b6b3a7640000613a4a565b89896130e7565b92506122c78382613899565b90505b9750975097945050505050565b60006122f56122ee84670de0b6b3a7640000613a4a565b8390612649565b6115de90670de0b6b3a7640000613a4a565b60008061233e85612316611ae7565b6123209190613899565b600254610ff2908790600160801b90046001600160801b0316613a4a565b909210949350505050565b60008080806123a087866123998b61239361236c8c670de0b6b3a7640000613a4a565b7f000000000000000000000000000000000000000000000000000000000000000090612649565b90612649565b91906130c1565b93506123cc847f00000000000000000000000000000000000000000000000000000000000000006115e5565b915060006123ed6123e589670de0b6b3a7640000613a4a565b8a90886130c1565b9050612419817f0000000000000000000000000000000000000000000000000000000000000000612649565b9350612445847f00000000000000000000000000000000000000000000000000000000000000006115e5565b61244f9084613899565b915050945094509450949050565b600080600080600080888810156124cc5786156124825761247f8d898b61265e565b9c505b61248d8c898b61265e565b9b506124988b611377565b6124a18d611377565b6124ab91906138ac565b90506124b88b898b61265e565b9a506124c58a898b61265e565b99506124eb565b6124d58b611377565b6124de8d611377565b6124e891906138ac565b90505b9b9c9a9b999a975050505050505050565b60008260000361250d57508461259d565b81156125605761253e6125208487613899565b61252a85876115e5565b612534888a6115e5565b611de39190613899565b9050600061254c8588611b49565b90508082101561255a578091505b5061259d565b82850361256f5750600061259d565b61259a61257c8487613a4a565b6125868587612649565b612590888a6115e5565b611de39190613a4a565b90505b95945050505050565b600060016001607f1b03198212806125c4575060016001607f1b0382135b156113a15760405163a5353be560e01b815260040160405180910390fd5b6000806125f084600061310a565b6125fb84600061310a565b61260591906138ac565b905060008113156126215761261a8186613899565b9450612640565b60008112156126405761263381613c79565b61263d9086613a4a565b94505b50929392505050565b60006115de8383670de0b6b3a76400006130c1565b600082600019048411830215820261267557600080fd5b5091020490565b60008073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316016126cb575047612756565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561272f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127539190613b1e565b90505b600f546115de9084908361265e565b6000600f548511612776578461277a565b600f545b94506000612787866119d6565b905085600f600082825461279b9190613a4a565b909155506000905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031601612841576040516001600160a01b038716908390600081818185875af1925050503d8060008114612831576040519150601f19603f3d011682016040523d82523d6000602084013e612836565b606091505b5050809150506128d7565b60405163a9059cbb60e01b81526001600160a01b038781166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156128b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128d49190613cea565b90505b806128f5576040516312171d8360e31b815260040160405180910390fd5b5095945050505050565b600f54841161290e5783612912565b600f545b9350600061291f856119d6565b905084600f60008282546129339190613a4a565b909155506000905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316016129d9576040516001600160a01b038616908390600081818185875af1925050503d80600081146129c9576040519150601f19603f3d011682016040523d82523d6000602084013e6129ce565b606091505b505080915050612a6f565b60405163a9059cbb60e01b81526001600160a01b038681166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015612a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a6c9190613cea565b90505b80612a8d576040516312171d8360e31b815260040160405180910390fd5b505050505050565b60008080612ab6612aae88670de0b6b3a7640000613a4a565b89908761265e565b905086156122ca57612ac888886115e5565b91506122bb8a8a84612ae28a670de0b6b3a7640000613a4a565b8989613120565b600080612af68484613131565b909250905080612b0857612b08611444565b5092915050565b600081600003612b285750670de0b6b3a7640000611371565b82600003612b3857506000611371565b6000612b4383611377565b90506000612b58612b5386611377565b613170565b9050818102612b6f670de0b6b3a764000082613d07565b9050612b7a81613396565b9695505050505050565b60006115de83670de0b6b3a7640000846130c1565b60006115de83670de0b6b3a76400008461265e565b600060016001607f1b038211156113a15760405163a5353be560e01b815260040160405180910390fd5b6003546000908190612bf3906001600160801b031684612b84565b9050612c1f7f000000000000000000000000000000000000000000000000000000000000000082613899565b6002546001600160801b03161115611b58576002547f000000000000000000000000000000000000000000000000000000000000000090612c6a9083906001600160801b0316613a4a565b6115de9190613a4a565b612c7c613771565b600080612c8884612f87565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b8152600401612cc39190613c95565b6040805180830381865af4158015612cdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d039190613ca4565b9350905082612d18575060009150612de79050565b6000612d3f612d3a8461016001518561014001516115e590919063ffffffff16565b611377565b612d5f612d3a85610120015186610100015161264990919063ffffffff16565b612d6991906138ac565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765481830152606081018a9052608081018b905260a0810192909252845160c08301529284015160e08201529290910151610100830152509150600190505b935093915050565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063d0b457ce9060a401608060405180830381865af4158015612ea8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ecc9190613d35565b935093509350935080612ee85750600098975050505050505050565b868414612f1957612ef884611b1f565b600280546001600160801b0319166001600160801b03929092169190911790555b858314612f4a57612f29836125a6565b600480546001600160801b0319166001600160801b03929092169190911790555b848214612f7857612f5a82611b1f565b600280546001600160801b03928316600160801b0292169190911790555b50600198975050505050505050565b612f8f6137c3565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e08301526003540482166101008201526005549091610120830191613087911661352b565b81526004546001600160801b03600160801b91829004811660208401526005546040909301926130b99290041661352b565b905292915050565b60008260001904841183021582026130d857600080fd5b50910281810615159190040190565b6000806130f88888888888886135a1565b909250905080611e1057611e10611444565b600081831361311957816115de565b5090919050565b6000806130f8888888888888613682565b60008060008361314086611377565b61314a91906138ac565b90506000811215613162576000809250925050613169565b9150600190505b9250929050565b60008082136131925760405163e61b497560e01b815260040160405180910390fd5b506001600160801b03811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f198201906132159084901c611377565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6000680248ce36a70cb26b3e1982136133b157506000919050565b680755bf798b4a1bf1e582126133da576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b3988102909303926c240c330e9fb2d9cbaf0fd5aafb1984018402606090811d6d0277594991cfc85f6e2461837cd9018502811d6d1a521255e34f6a5061b25ef1c9c319018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d6e02c72388d9f74f51a9331fed693f1419018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087016d01d3967ed30fc4f89c02bab570811901810290921d6e0587f503bb6ea29d25fcb7401964500186026d360d7aeea093263ecc6e0ecb291760621b018181059550929350909190612b7a74029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c611377565b600080670de0b6b3a764000061353f6105ca565b6135499190613aba565b9050808311613559576000613563565b6135638184613a4a565b91506115de61359a670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000613aba565b8390612b99565b60008060006135b38989888888613742565b9050868810156135ca576000809250925050613677565b96869003966135d98887612b0f565b9750878110156135f0576000809250925050613677565b8781036135fe8186886130c1565b9050670de0b6b3a764000081106136325761362b613624670de0b6b3a764000089612b84565b8290612b0f565b905061364a565b613647613624670de0b6b3a764000089612b99565b90505b6136548186612b84565b90508981101561366c57600080935093505050613677565b899003925060019150505b965096945050505050565b60008060006136948989888888613742565b90506136a486611b19898b613899565b9750878110156136bb576000809250925050613677565b8781036136c98186886130c1565b9050670de0b6b3a764000081106136f6576136ef613624670de0b6b3a764000089612b84565b905061370e565b61370b613624670de0b6b3a764000089612b99565b90505b6137188186612b84565b9050808a101561373057600080935093505050613677565b90980398600198509650505050505050565b600061374e8585612b0f565b61376761375f86611b19868b612649565b8590856130c1565b61259a9190613899565b6040518061012001604052806137856137c3565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000806000806080858703121561383a57600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff81111561386657600080fd5b85016060818803121561387857600080fd5b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561137157611371613883565b8181036000831280158383131683831282161715612b0857612b08613883565b6001600160a01b03811681146105af57600080fd5b6000602082840312156138f357600080fd5b81356115de816138cc565b80151581146105af57600080fd5b60006020828403121561391e57600080fd5b81356115de816138fe565b6000808335601e1984360301811261394057600080fd5b83018035915067ffffffffffffffff82111561395b57600080fd5b60200191503681900382131561316957600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b88815287602082015286604082015285151560608201528460808201528360a082015260e060c082015260006139d360e083018486613970565b9a9950505050505050505050565b8082018281126000831280158216821582161715613a0157613a01613883565b505092915050565b878152866020820152856040820152841515606082015283608082015260c060a08201526000613a3d60c083018486613970565b9998505050505050505050565b8181038181111561137157611371613883565b6001600160701b03818116838216019080821115612b0857612b08613883565b6001600160801b03818116838216019080821115612b0857612b08613883565b600060208284031215613aaf57600080fd5b81516115de816138cc565b808202811582820484141761137157611371613883565b6001600160801b03828116828216039080821115612b0857612b08613883565b600f81810b9083900b0160016001607f1b03811360016001607f1b03198212171561137157611371613883565b600060208284031215613b3057600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600082613b5c57613b5c613b37565b500690565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015181840152505050565b60006102a082019050613bf3828551613b61565b602084015161018083015260408401516101a083015260608401516101c083015260808401516101e083015260a084015161020083015260c084015161022083015260e084015161024083015261010090930151610260820152610280015290565b60008060408385031215613c6857600080fd5b505080516020909101519092909150565b6000600160ff1b8201613c8e57613c8e613883565b5060000390565b61018081016113718284613b61565b60008060408385031215613cb757600080fd5b825191506020830151613cc9816138fe565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215613cfc57600080fd5b81516115de816138fe565b600082613d1657613d16613b37565b600160ff1b821460001984141615613d3057613d30613883565b500590565b60008060008060808587031215613d4b57600080fd5b8451935060208501519250604085015191506060850151613878816138fe56fea2646970667358221220b1f0e006d0889d6b2835b721ec917f6ae2b0f2dba3dcd024fff1b3195d1a4c9564736f6c634300081600336102806040523480156200001257600080fd5b50604051620044c2380380620044c28339810160408190526200003591620001ae565b600160005581516001600160a01b039081166080908152602080850151831660a0908152918501516101a052908401516101c05260c0808501516101e090815260e080870151610200526101208088015190935261010080880151909152610140808801519091529086018051519092528151909201519091528051604090810151610160529051606090810151610180529084015182166102405290920151610260521661022052620002eb565b60405161020081016001600160401b03811182821017156200011657634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b03811681146200013457600080fd5b919050565b6000608082840312156200014c57600080fd5b604051608081016001600160401b03811182821017156200017d57634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600080828403610280811215620001c457600080fd5b61026080821215620001d557600080fd5b620001df620000e4565b9150620001ec856200011c565b8252620001fc602086016200011c565b60208301526200020f604086016200011c565b6040830152606085015160608301526080850151608083015260a085015160a083015260c085015160c083015260e085015160e08301526101008086015181840152506101208086015181840152506101408086015181840152506101606200027a8187016200011c565b908301526101806200028e8682016200011c565b908301526101a0620002a28682016200011c565b908301526101c0620002b68682016200011c565b908301526101e0620002cb8787830162000139565b8184015250819350620002e08186016200011c565b925050509250929050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051613fce620004f460003960005050600050506000610c8c015260005050600081816101000152818161031001526131ec01526000818161152301528181612049015281816120ac0152818161285e01528181612dd101528181612e0d0152818161300501526131c601526000818161083a01528181610dec01528181610e2e01528181610f2001528181611396015281816113f5015281816118cf0152818161196201526131a001526000611c68015260008181611d8e01528181612a4e01528181612ac701526133060152600081816109fe01528181610ea10152818161149001528181611d620152612a9b015260008181610e8001528181612a1a01526132c201526000818161085b01528181610dca01528181610e4f01528181610f41015281816113740152818161141601526132120152600081816101de015281816103a80152818161093601526137bc0152600081816106f401528181610774015281816107ea015281816108b601526108ee01526000505060008181610556015281816116cd01528181611716015281816117a801528181611829015281816119d001528181611a51015281816128df0152818161292801528181612b940152612bdd0152613fce6000f3fe6080604052600436106100295760003560e01c8063cba2e58d1461002e578063dbbe80701461005a575b600080fd5b61004161003c366004613a51565b61006d565b6040805192835260208301919091520160405180910390f35b610041610068366004613a51565b61008a565b60008061007c86868686610099565b915091505b94509492505050565b60008061007c868686866102c9565b6000806100a461052a565b600654610100900460ff16156100cd576040516321081abf60e01b815260040160405180910390fd5b6100d5610554565b6100de836105c0565b6000806100eb88866105f9565b909250905060006100fc83836106ce565b90507f000000000000000000000000000000000000000000000000000000000000000081101561013f5760405163211ddda360e11b815260040160405180910390fd5b86821015610160576040516342af972b60e01b815260040160405180910390fd5b600061016a6106ec565b905061017a81846004600161071d565b50600080600061018a8787610d9b565b919a5091945090925090508b8810156101b65760405163c972651760e01b815260040160405180910390fd5b81600960008282546101c89190613ac6565b909155506101d99050844283610f7d565b6102037f000000000000000000000000000000000000000000000000000000000000000085613ac6565b98506102118389888c6110bb565b600061021e60018b611255565b90506102378161023160208e018e613aee565b8b61128a565b8d8a8a898e8561024a6020830183613aee565b6001600160a01b03167f7fc9757758f4c7f2eb9f011c4500beb349847d2f2acbdd5ffce3e2f01e79903a8688866102876040880160208901613b19565b8961029560408a018a613b36565b6040516102a89796959493929190613ba6565b60405180910390a350909b5050505050505050505050506100816001600055565b6000806102d461052a565b600654610100900460ff16156102fd576040516321081abf60e01b815260040160405180910390fd5b610305610554565b61030e836105c0565b7f000000000000000000000000000000000000000000000000000000000000000086101561034f5760405163211ddda360e11b815260040160405180910390fd5b6000610359611332565b90508481101561037c576040516342af972b60e01b815260040160405180910390fd5b60006103866106ec565b9050600061039f6103956106ec565b846004600161071d565b905060006103cd7f000000000000000000000000000000000000000000000000000000000000000084613ac6565b90506000806000806103e08e8988611345565b60098054949850929650909450925083916000906103ff908490613ac6565b909155506104109050874283610f7d565b50600061041e84898d6114cb565b9050808d10156104415760405163c972651760e01b815260040160405180910390fd5b61044b818c6105f9565b508e905061045b81858b896114fd565b6000610468600288611255565b90508c6104828261047c6020840184613aee565b8561128a565b858b86846104936020860186613aee565b6001600160a01b03167ffa6dd2e3e152dbc3fe91196c0b8aa871c26fd7a1d07de126ec3159fd4ede2c758d8a866104d060408b0160208c01613b19565b6104e4896104de8a8d613be7565b906106ce565b8d6104f260408e018e613b36565b604051610506989796959493929190613bfa565b60405180910390a350989d50939b5050505050505050505050506100816001600055565b60026000540361054d57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee148015906105a057503415155b156105be57604051631574f9f360e01b815260040160405180910390fd5b565b60006105cf6020830183613aee565b6001600160a01b0316036105f65760405163f0dd15fd60e01b815260040160405180910390fd5b50565b8160008061060d6040850160208601613b19565b1561063257610628856106236040870187613b36565b6116b1565b909350905061064a565b503461064a856106456040870187613b36565b611945565b610652611332565b915080156106c557604051600090339083908381818185875af1925050503d806000811461069c576040519150601f19603f3d011682016040523d82523d6000602084013e6106a1565b606091505b50509050806106c3576040516312171d8360e31b815260040160405180910390fd5b505b505b9250929050565b60006106e38383670de0b6b3a7640000611aef565b90505b92915050565b6000610718427f0000000000000000000000000000000000000000000000000000000000000000611b0d565b905090565b600084815260086020526040812060018101546001600160801b031615158061074557504286115b1561075e57600101546001600160801b03169050610d93565b600080600061076b6106ec565b905060006107997f00000000000000000000000000000000000000000000000000000000000000008b613ac6565b90505b8181101561080f576000818152600860205260409020600101546001600160801b031680156107e7576000828152600860205260409020549094506001600160801b0316925061080f565b507f00000000000000000000000000000000000000000000000000000000000000000161079c565b836000036108825788935061087f610825611b23565b600254600160801b90046001600160801b03167f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611b44565b92505b5061088c83611b64565b6001850180546001600160801b0319166001600160801b03929092169190911790556108e26108db7f00000000000000000000000000000000000000000000000000000000000000008b613be7565b8a84610f7d565b6109208961091a6109137f000000000000000000000000000000000000000000000000000000000000000083613ac6565b4290611b92565b84610f7d565b61092988611ba7565b506000905060088161095b7f00000000000000000000000000000000000000000000000000000000000000008d613be7565b815260208101919091526040016000908120600101546001600160801b0316915061098760028c611255565b6000818152600b60205260408120549192508c8c8315610acd57600192506000806109b686898d866000611d4b565b9150915080600960008282546109cc9190613ac6565b909155506109e89050866000846109e281611e1a565b88611e44565b6109f28183613ac6565b9150610a2286838a8e877f0000000000000000000000000000000000000000000000000000000000000000611fbe565b9150610a36610a3183856106ce565b612008565b60068054600290610a579084906201000090046001600160701b0316613c42565b92506101000a8154816001600160701b0302191690836001600160701b03160217905550610a8482611b64565b60068054601090610aa6908490600160801b90046001600160801b0316613c62565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505b6000610ada600184611255565b6000818152600b60205260409020549091508015610be95760019450600080610b07838b8f886001611d4b565b915091508060096000828254610b1d9190613ac6565b90915550610b39905083600084610b3381611e1a565b8a612032565b610b438183613be7565b9150610b52610a3183876106ce565b60068054600290610b739084906201000090046001600160701b0316613c42565b92506101000a8154816001600160701b0302191690836001600160701b03160217905550610ba082611b64565b60068054601090610bc2908490600160801b90046001600160801b0316613c62565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505b8415610c2357610c15610bfb87611e1a565b610c0483611e1a565b610c0e9190613c82565b6000612223565b8e610c208482612262565b50505b6000610c2e8461245c565b50604080518e815260208101879052908101899052606081018490526080810182905290915085907fff888cf98d2696e95c8c39aa98c9ad55a5378008f7a56614c9353b7137a57ab79060a00160405180910390a260008f905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f25964586040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ce8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0c9190613ca2565b90506001600160a01b03811615610d8157610d7e5a604051336024820152604481018a90528415156064820152600090819060840160408051601f198184030181529190526020810180516001600160e01b0316633488a6a760e11b1790526001600160a01b038616939291906125a8565b50505b509b9d50505050505050505050505050505b949350505050565b6000806000806000610dab611b23565b600254909150610e10908290600160801b90046001600160801b0316897f00000000000000000000000000000000000000000000000000000000000000008a7f0000000000000000000000000000000000000000000000000000000000000000612633565b600254909450610e73908290600160801b90046001600160801b03167f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611b44565b9150610eca8785610ec5857f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061265f565b6126c4565b15610ed757610ed7612706565b610ee38785888561271f565b91965094509250670de0b6b3a7640000610f65610f008784613ac6565b600254610f1e908890600160801b90046001600160801b0316613be7565b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611b44565b1115610f7357610f73612706565b5092959194509250565b600083815260086020526040902054600160801b90046001600160801b0316808303610fa95750505050565b6000848152600860205260408120546001600160801b03169081900361100357610fd283611b64565b600086815260086020526040902080546001600160801b0319166001600160801b0392909216919091179055611081565b61105461104f670de0b6b3a764000061101c8886613be7565b6110269190613cbf565b85670de0b6b3a764000061103a878a613be7565b6110449190613cbf565b85929190600161276b565b611b64565b600086815260086020526040902080546001600160801b0319166001600160801b03929092169190911790555b61108a84611b64565b60009586526008602052604090952080546001600160801b03968716600160801b0296169590951790945550505050565b600354600160801b90046001600160801b03166110fd61104f826110e7670de0b6b3a764000086613cbf565b6005546001600160801b0316919088600161276b565b600580546001600160801b0319166001600160801b039290921691909117905561112685611b64565b600280546000906111419084906001600160801b0316613c62565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061116e84611b64565b60028054601090611190908490600160801b90046001600160801b0316613cd6565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506111bd84611b64565b6111c79082613c62565b600380546001600160801b03808416600160801b029116179055905060006111ee83612813565b905061120c816111fd87611e1a565b6112079084613cf6565b612223565b61121584612857565b61122157611221612706565b600061122c856128b7565b90508061124c57604051638bdf918d60e01b815260040160405180910390fd5b50505050505050565b60006001600160f81b0382111561127f5760405163b7d0949760e01b815260040160405180910390fd5b5060f89190911b1790565b6000838152600a602090815260408083206001600160a01b0386168452909152812080548392906112bc908490613ac6565b90915550506000838152600b6020526040812080548392906112df908490613ac6565b909155505060408051848152602081018390526001600160a01b0384169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b6000610718670de0b6b3a76400006128c4565b6000806000806000611355611b23565b6002549091506113ba908290600160801b90046001600160801b03168a7f00000000000000000000000000000000000000000000000000000000000000008b7f00000000000000000000000000000000000000000000000000000000000000006129bf565b9350876113c785896129e0565b11156113d5576113d5612706565b600254600090819061143a908490600160801b90046001600160801b03167f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611b44565b93506114508a670de0b6b3a7640000868c6129f5565b5091935090915061146390508183613be7565b61146d9087613be7565b9550886114ba816114b48d611482868c613be7565b8d61148d8782612b03565b877f0000000000000000000000000000000000000000000000000000000000000000612b19565b906129e0565b975090945050505093509350935093565b60006114dd6040830160208401613b19565b156114e95750826114f6565b6114f38484612b3e565b90505b9392505050565b6002546001600160801b03168381101561151957611519612706565b60045490849003907f000000000000000000000000000000000000000000000000000000000000000090611551908390600f0b612b53565b101561155f5761155f612706565b6004546115a99061104f90600160801b90046001600160801b031661158c670de0b6b3a764000086613cbf565b600554600160801b90046001600160801b0316919089600161276b565b600580546001600160801b03928316600160801b0292169190911790556115cf81611b64565b600280546001600160801b0319166001600160801b03929092169190911790556115f885611b64565b6002805460109061161a908490600160801b90046001600160801b0316613c62565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061164785611b64565b60048054601090611669908490600160801b90046001600160801b0316613c62565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550600061169883612813565b905061120c816116a788611e1a565b6112079084613c82565b6000808073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03160161170157504761178c565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611765573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117899190613d1e565b90505b6001600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03160161180757873410156117f6576040516312171d8360e31b815260040160405180910390fd5b6118008834613be7565b90506118a1565b6040516323b872dd60e01b8152336004820152306024820152604481018990527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af115801561187a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189e9190613d37565b91505b816118bf576040516312171d8360e31b815260040160405180910390fd5b600f54600003611904576118f3887f0000000000000000000000000000000000000000000000000000000000000000612b3e565b600f8190559450925061193d915050565b600f54600090611916908a9086611aef565b905080600f600082825461192a9190613ac6565b9091555090955090935061193d92505050565b935093915050565b6000611950846128c4565b9050600f5460000361198e57611986817f0000000000000000000000000000000000000000000000000000000000000000612b3e565b600f556119b4565b600061199982612b79565b905080600f60008282546119ad9190613ac6565b9091555050505b6001600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031601611a2f5782341015611a1e576040516312171d8360e31b815260040160405180910390fd5b611a288334613be7565b9050611ac9565b6040516323b872dd60e01b8152336004820152306024820152604481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015611aa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac69190613d37565b91505b81611ae7576040516312171d8360e31b815260040160405180910390fd5b505050505050565b6000826000190484118302158202611b0657600080fd5b5091020490565b6000611b198284613d6a565b6106e39084613be7565b600254600454600091610718916001600160801b0390911690600f0b612b53565b6000611b5b82611b55858888611aef565b90612c62565b95945050505050565b60006001600160801b03821115611b8e57604051630f0af95160e11b815260040160405180910390fd5b5090565b6000818311611ba157826106e3565b50919050565b6006546000908190611bca908490600160801b90046001600160801b03166106ce565b6006546201000090046001600160701b03169250905081811115611d46576000611bf48383613be7565b9050611c0361104f8286612ccd565b60068054601090611c25908490600160801b90046001600160801b0316613cd6565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000611c5e8583612b3e90919063ffffffff16565b90506000611c8c827f00000000000000000000000000000000000000000000000000000000000000006106ce565b90508060096000828254611ca09190613ac6565b90915550611cb090508183613be7565b9150611cbb82611b64565b60028054600090611cd69084906001600160801b0316613c62565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611d0382612ce2565b60048054600090611d18908490600f0b613d7e565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055508493505050505b915091565b600080611d588785612b3e565b91506000611d86837f00000000000000000000000000000000000000000000000000000000000000006106ce565b9050611db2817f00000000000000000000000000000000000000000000000000000000000000006106ce565b91508315611dd557611dc48282613be7565b611dce9084613be7565b9250611dec565b611ddf8282613be7565b611de99084613ac6565b92505b86861015611e0f57611dff838789611aef565b9250611e0c828789611aef565b91505b509550959350505050565b60006001600160ff1b03821115611b8e5760405163396ea70160e11b815260040160405180910390fd5b600454600160801b90046001600160801b0316611e8d61104f82611e70670de0b6b3a764000086613cbf565b600554600160801b90046001600160801b031691908a600061276b565b600580546001600160801b03928316600160801b029216919091179055611eb386611b64565b611ebd9082613cd6565b600480546001600160801b03928316600160801b029216919091179055611ee384611b64565b60028054600090611efe9084906001600160801b0316613c62565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550611f2b83612d0c565b60048054600090611f40908490600f0b613d7e565b92506101000a8154816001600160801b030219169083600f0b6001600160801b03160217905550611f7085611b64565b60028054601090611f92908490600160801b90046001600160801b0316613cd6565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550505050505050565b600080611fd684611fd08a888a611aef565b90612b3e565b9050611fe3888486611aef565b611fed9082613ac6565b905086811115611ffd5786810391505b509695505050505050565b60006001600160701b03821115611b8e5760405163086b151760e11b815260040160405180910390fd5b6002546001600160801b03168381108061207457507f00000000000000000000000000000000000000000000000000000000000000006120728583613be7565b105b1561208157612081612706565b6004549084900390600f0b6120968482613c82565b9050836120a286611e1a565b1380156120d757507f00000000000000000000000000000000000000000000000000000000000000006120d58383612b53565b105b156120e4576120e4612706565b600354600160801b90046001600160801b031661212661104f82612110670de0b6b3a764000088613cbf565b6005546001600160801b031691908c600061276b565b600580546001600160801b0319166001600160801b03929092169190911790556121508882613be7565b905061215b81611b64565b600380546001600160801b03928316600160801b02921691909117905561218183611b64565b600280546001600160801b0319166001600160801b03929092169190911790556121aa82612d0c565b600480546001600160801b0319166001600160801b03929092169190911790556121d387611b64565b600280546010906121f5908490600160801b90046001600160801b0316613c62565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050505050505050565b60035461223e9061104f906001600160801b03168484612d48565b600380546001600160801b0319166001600160801b03929092169190911790555050565b600754600360f81b6000908152600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e754354909182916122ad916001600160801b031690613be7565b9050806000036122c15760019150506106e6565b60006122cc85612daf565b9050806000036122e1576001925050506106e6565b6000806122ef838589612e4b565b91509150806123055760009450505050506106e6565b60008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b8152600401612341929190613e29565b6040805180830381865af415801561235d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123819190613e9f565b9150915061239f61239182611e1a565b61239a90613ec3565b612fbf565b9250826123b557600096505050505050506106e6565b6123be82611b64565b600780546000906123d99084906001600160801b0316613c62565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061240681611b64565b60078054601090612428908490600160801b90046001600160801b0316613c62565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506001965050505050505092915050565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e61248587613157565b6040518263ffffffff1660e01b81526004016124a19190613edf565b6040805180830381865af41580156124bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e19190613eee565b91509150806124f7575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b03169161255d91613ac6565b6125679190613be7565b90508060000361257f57506000958695509350505050565b600080871161258f57600061259a565b61259a848884611aef565b976001975095505050505050565b6000606060008060008661ffff1667ffffffffffffffff8111156125ce576125ce613f1e565b6040519080825280601f01601f1916602001820160405280156125f8576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612619578692505b828152826000602083013e90999098509650505050505050565b600061265487878761264d88670de0b6b3a7640000613be7565b8787613291565b979650505050505050565b60006114f36126a061267984670de0b6b3a7640000613be7565b6114b4670de0b6b3a764000061268f818a612ccd565b6126999190613be7565b87906129e0565b6126b290670de0b6b3a7640000613ac6565b611fd084670de0b6b3a7640000613be7565b6000806126fb856126d3611b23565b6126dd9190613ac6565b600254610f1e908790600160801b90046001600160801b0316613be7565b909210949350505050565b60405163bb55fd2760e01b815260040160405180910390fd5b60008060008060006127328987896132b4565b90925090506127418289613be7565b9750600061275082888a611aef565b905061275c818b613be7565b9a989950979650505050505050565b60008260000361277c575084611b5b565b81156127cf576127ad61278f8487613ac6565b61279985876106ce565b6127a3888a6106ce565b611fd09190613ac6565b905060006127bb8588611b92565b9050808210156127c9578091505b50611b5b565b8285036127de57506000611b5b565b6128096127eb8487613be7565b6127f585876129e0565b6127ff888a6106ce565b611fd09190613be7565b9695505050505050565b600061283b600b6000612827600286611255565b815260200190815260200160002054611e1a565b61284d600b6000612827600187611255565b6106e69190613c82565b60006128837f0000000000000000000000000000000000000000000000000000000000000000836129e0565b60035461289991906001600160801b0316613ac6565b6002546128af906001600160801b0316846106ce565b101592915050565b60006106e6826004612262565b60008073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03160161291357504761299e565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015612977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061299b9190613d1e565b90505b600f546000036129af5760006114f6565b600f546114f69084908390611aef565b60006126548787876129d988670de0b6b3a7640000613be7565b8787613334565b60006106e38383670de0b6b3a7640000613345565b6000808080612a468786612a3f8b6114b4612a188c670de0b6b3a7640000613be7565b7f0000000000000000000000000000000000000000000000000000000000000000906129e0565b9190613345565b9350612a72847f00000000000000000000000000000000000000000000000000000000000000006106ce565b91506000612a93612a8b89670de0b6b3a7640000613be7565b8a9088613345565b9050612abf817f00000000000000000000000000000000000000000000000000000000000000006129e0565b9350612aeb847f00000000000000000000000000000000000000000000000000000000000000006106ce565b612af59084613ac6565b915050945094509450949050565b6000818311612b1257816106e3565b5090919050565b600080612b3184612b2b8a888a613345565b90612ccd565b9050611fe3888486613345565b60006106e383670de0b6b3a764000084611aef565b600080612b60848461336b565b909250905080612b7257612b72612706565b5092915050565b60008073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031601612bc8575047612c53565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015612c2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c509190613d1e565b90505b600f546114f690849083611aef565b600081600003612c7b5750670de0b6b3a76400006106e6565b82600003612c8b575060006106e6565b6000612c9683611e1a565b90506000612cab612ca686611e1a565b6133a7565b9050818102612cc2670de0b6b3a764000082613f34565b9050612809816135cd565b60006106e383670de0b6b3a764000084613345565b600060016001607f1b03821115611b8e5760405163a5353be560e01b815260040160405180910390fd5b600060016001607f1b0319821280612d2a575060016001607f1b0382135b15611b8e5760405163a5353be560e01b815260040160405180910390fd5b600080612d56846000613762565b612d61846000613762565b612d6b9190613c82565b90506000811315612d8757612d808186613ac6565b9450612da6565b6000811215612da657612d9981613ec3565b612da39086613be7565b94505b50929392505050565b6003546000908190612dca906001600160801b031684612ccd565b9050612df67f000000000000000000000000000000000000000000000000000000000000000082613ac6565b6002546001600160801b03161115611ba1576002547f000000000000000000000000000000000000000000000000000000000000000090612e419083906001600160801b0316613be7565b6114f69190613be7565b612e5361399e565b600080612e5f84613157565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b8152600401612e9a9190613edf565b6040805180830381865af4158015612eb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eda9190613eee565b9350905082612eef57506000915061193d9050565b6000612f16612f118461016001518561014001516106ce90919063ffffffff16565b611e1a565b612f36612f118561012001518661010001516129e090919063ffffffff16565b612f409190613c82565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7654818301526060810199909952608089019990995260a088015250815160c087015281015160e086015290940151610100840152509092600192509050565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063d0b457ce9060a401608060405180830381865af4158015613078573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061309c9190613f62565b9350935093509350806130b85750600098975050505050505050565b8684146130e9576130c884611b64565b600280546001600160801b0319166001600160801b03929092169190911790555b85831461311a576130f983612d0c565b600480546001600160801b0319166001600160801b03929092169190911790555b8482146131485761312a82611b64565b600280546001600160801b03928316600160801b0292169190911790555b50600198975050505050505050565b61315f6139f0565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e083015260035404821661010082015260055490916101208301916132579116613771565b81526004546001600160801b03600160801b918290048116602084015260055460409093019261328992900416613771565b905292915050565b6000806132a28888888888886137e7565b909250905080611ffd57611ffd612706565b6000806132fe856114b485817f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a76400006132f4818c612ccd565b6114b49190613be7565b915061332a827f00000000000000000000000000000000000000000000000000000000000000006106ce565b9050935093915050565b6000806132a28888888888886138af565b600082600019048411830215820261335c57600080fd5b50910281810615159190040190565b60008060008361337a86611e1a565b6133849190613c82565b9050600081121561339c5760008092509250506106c7565b946001945092505050565b60008082136133c95760405163e61b497560e01b815260040160405180910390fd5b506001600160801b03811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f1982019061344c9084901c611e1a565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6000680248ce36a70cb26b3e1982136135e857506000919050565b680755bf798b4a1bf1e58212613611576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b3988102909303926c240c330e9fb2d9cbaf0fd5aafb1984018402606090811d6d0277594991cfc85f6e2461837cd9018502811d6d1a521255e34f6a5061b25ef1c9c319018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d6e02c72388d9f74f51a9331fed693f1419018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087016d01d3967ed30fc4f89c02bab570811901810290921d6e0587f503bb6ea29d25fcb7401964500186026d360d7aeea093263ecc6e0ecb291760621b01818105955092935090919061280974029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c611e1a565b6000818313612b1257816106e3565b600080670de0b6b3a76400006137856106ec565b61378f9190613cbf565b905080831161379f5760006137a9565b6137a98184613be7565b91506114f66137e0670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000613cbf565b8390612b3e565b60008060006137f9898988888861396f565b905061381386611b5561380c8a8d613ac6565b87906106ce565b9850613820858a86611aef565b9850888110156138375760008092509250506138a4565b888103670de0b6b3a7640000811061386c5761386561385e670de0b6b3a764000089612ccd565b8290612c62565b9050613884565b61388161385e670de0b6b3a764000089612b3e565b90505b8089101561389a576000809350935050506138a4565b8803925060019150505b965096945050505050565b60008060006138c1898988888861396f565b90506138d186611b55898b613ac6565b9750878110156138e85760008092509250506138a4565b8781036138f6818688613345565b9050670de0b6b3a764000081106139235761391c61385e670de0b6b3a764000089612ccd565b905061393b565b61393861385e670de0b6b3a764000089612b3e565b90505b6139458186612ccd565b9050808a101561395d576000809350935050506138a4565b90980398600198509650505050505050565b600061397b8585612c62565b61399461398c86611b55868b6129e0565b859085613345565b6128099190613ac6565b6040518061012001604052806139b26139f0565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60008060008060808587031215613a6757600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff811115613a9357600080fd5b850160608188031215613aa557600080fd5b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106e6576106e6613ab0565b6001600160a01b03811681146105f657600080fd5b600060208284031215613b0057600080fd5b81356114f681613ad9565b80151581146105f657600080fd5b600060208284031215613b2b57600080fd5b81356114f681613b0b565b6000808335601e19843603018112613b4d57600080fd5b83018035915067ffffffffffffffff821115613b6857600080fd5b6020019150368190038213156106c757600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b878152866020820152856040820152841515606082015283608082015260c060a08201526000613bda60c083018486613b7d565b9998505050505050505050565b818103818111156106e6576106e6613ab0565b88815287602082015286604082015285151560608201528460808201528360a082015260e060c08201526000613c3460e083018486613b7d565b9a9950505050505050505050565b6001600160701b03818116838216019080821115612b7257612b72613ab0565b6001600160801b03818116838216019080821115612b7257612b72613ab0565b8181036000831280158383131683831282161715612b7257612b72613ab0565b600060208284031215613cb457600080fd5b81516114f681613ad9565b80820281158282048414176106e6576106e6613ab0565b6001600160801b03828116828216039080821115612b7257612b72613ab0565b8082018281126000831280158216821582161715613d1657613d16613ab0565b505092915050565b600060208284031215613d3057600080fd5b5051919050565b600060208284031215613d4957600080fd5b81516114f681613b0b565b634e487b7160e01b600052601260045260246000fd5b600082613d7957613d79613d54565b500690565b600f81810b9083900b0160016001607f1b03811360016001607f1b0319821217156106e6576106e6613ab0565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015181840152505050565b60006102a082019050613e3d828551613dab565b602084015161018083015260408401516101a083015260608401516101c083015260808401516101e083015260a084015161020083015260c084015161022083015260e084015161024083015261010090930151610260820152610280015290565b60008060408385031215613eb257600080fd5b505080516020909101519092909150565b6000600160ff1b8201613ed857613ed8613ab0565b5060000390565b61018081016106e68284613dab565b60008060408385031215613f0157600080fd5b825191506020830151613f1381613b0b565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082613f4357613f43613d54565b600160ff1b821460001984141615613f5d57613f5d613ab0565b500590565b60008060008060808587031215613f7857600080fd5b8451935060208501519250604085015191506060850151613aa581613b0b56fea2646970667358221220ddd7afee051131a6897f993b2ea767093559270cc454e967761a4a81ce9c7aa664736f6c634300081600336102806040523480156200001257600080fd5b5060405162004483380380620044838339810160408190526200003591620001ae565b600160005581516001600160a01b039081166080908152602080850151831660a0908152918501516101a052908401516101c05260c0808501516101e090815260e080870151610200526101208088015190935261010080880151909152610140808801519091529086018051519092528151909201519091528051604090810151610160529051606090810151610180529084015182166102405290920151610260521661022052620002eb565b60405161020081016001600160401b03811182821017156200011657634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b03811681146200013457600080fd5b919050565b6000608082840312156200014c57600080fd5b604051608081016001600160401b03811182821017156200017d57634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600080828403610280811215620001c457600080fd5b61026080821215620001d557600080fd5b620001df620000e4565b9150620001ec856200011c565b8252620001fc602086016200011c565b60208301526200020f604086016200011c565b6040830152606085015160608301526080850151608083015260a085015160a083015260c085015160c083015260e085015160e08301526101008086015181840152506101208086015181840152506101408086015181840152506101606200027a8187016200011c565b908301526101806200028e8682016200011c565b908301526101a0620002a28682016200011c565b908301526101c0620002b68682016200011c565b908301526101e0620002cb8787830162000139565b8184015250819350620002e08186016200011c565b925050509250929050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051613f7f620005046000396000505060005050600061134401526000818161030301528181610332015261035f01526000818160de015281816105a9015261176b01526000818161085601528181610941015281816109d401528181610add0152818161163c0152818161174501528181612474015281816124d701528181612db60152818161327901526132b501526000818161013f015281816108c601528181610ef20152818161150001528181611564015281816115ab0152818161171f01528181611c220152611cb5015260006120790152600081816121d4015261350e0152600081816110b601526121a8015260006134c40152600081816101810152818161091901528181610f13015281816114d001528181611534015281816115cc015261179101526000818161016001528181610238015281816102d8015281816106f3015281816108f301528181610fee0152612d4c01526000818161029701528181610db101528181610e2c01528181610ea201528181610f6e0152610fa601526000505060008181610be501528181611a2001528181611a6901528181611afb01528181611b7c01528181611d2301528181611da401528181612fb101528181612ffa015281816130ac01526130f50152613f7f6000f3fe6080604052600436106100295760003560e01c80634c2ac1d91461002e57806377d05ff414610053575b600080fd5b61004161003c3660046139d2565b610066565b60405190815260200160405180910390f35b610041610061366004613a36565b610081565b60006100758686868686610098565b90505b95945050505050565b600061008e848484610800565b90505b9392505050565b60006100a2610bb9565b600654610100900460ff16156100cb576040516321081abf60e01b815260040160405180910390fd5b6100d3610be3565b6100dc82610c4f565b7f000000000000000000000000000000000000000000000000000000000000000086101561011d5760405163211ddda360e11b815260040160405180910390fd5b60006101a561012a610c88565b600254600160801b90046001600160801b03167f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610cae565b9050848110806101b457508381115b156101d257604051633b61151160e11b815260040160405180910390fd5b6000806101df8986610cd4565b9150915060006101ed610da9565b90506101fd818360046001610dd5565b506002546004546003546000928392610267926001600160801b0380841693600f9390930b92600160801b900481169189911661026261025d7f00000000000000000000000000000000000000000000000000000000000000008b613a9c565b611453565b61149d565b915091508061028957604051630552b01360e31b815260040160405180910390fd5b8b60006102fc6008826102bc7f000000000000000000000000000000000000000000000000000000000000000089613aaf565b81526020810191909152604001600020546001600160801b03167f00000000000000000000000000000000000000000000000000000000000000006116aa565b90506103287f000000000000000000000000000000000000000000000000000000000000000082613a9c565b88118061038757507f00000000000000000000000000000000000000000000000000000000000000008111801561038757506103847f000000000000000000000000000000000000000000000000000000000000000082613aaf565b88105b156103a557604051630552b01360e31b815260040160405180910390fd5b50600754600360f81b6000908152600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435490916103f1916001600160801b0390911690613aaf565b6000808052600b6020527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f76549192509061042c908390613a9c565b9050600080600061043c8a6116d6565b604051635f9d50ab60e11b815290915073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063bf3aa15690610476908490600401613b40565b602060405180830381865af4158015610493573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b79190613b4f565b91506104ca6104c58c611810565b61183e565b6002546001600160801b03808216835260048054600f0b6020850152600160801b9092041660408084019190915251635f9d50ab60e11b815273__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9163bf3aa1569161052b91859101613b40565b602060405180830381865af4158015610548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056c9190613b4f565b92508183101561058f5760405163184d952160e11b815260040160405180910390fd5b6105a5848361059e8187613aaf565b9190611864565b9c507f00000000000000000000000000000000000000000000000000000000000000008d10156105e85760405163211ddda360e11b815260040160405180910390fd5b508f6105f4868e611882565b10156106135760405163c972651760e01b815260040160405180910390fd5b61063160008e600001602081019061062b9190613b7d565b8e611897565b61063a8961193f565b95508561065a57604051638bdf918d60e01b815260040160405180910390fd5b600088905060008d9050368f905060008c9050600061071d600260000160009054906101000a90046001600160801b03166001600160801b03166002800160009054906101000a9004600f0b600f0b600260000160109054906101000a90046001600160801b03166001600160801b031685600260010160009054906101000a90046001600160801b03166001600160801b03166102627f00000000000000000000000000000000000000000000000000000000000000008c61025d9190613a9c565b9b5090508a158061073757506107348c600061194c565b81125b1561075557604051630552b01360e31b815260040160405180910390fd5b6000881561076d5761076887848b611864565b610770565b60005b905061077f6020850185613b7d565b6001600160a01b03167fdcc4a01cea4510bd52201cebc8cd2d47d60429b35d68329abc591a70aa2efabf868d866107bc60408a0160208b01613ba8565b866107ca60408c018c613bc5565b6040516107dd9796959493929190613c0c565b60405180910390a250505050505050505050505050505050506100786001600055565b600061080a610bb9565b610812610be3565b61081b82610c4f565b60065460ff161561083f57604051637983c05160e01b815260040160405180910390fd5b60008061084c8685610cd4565b909250905061087c7f00000000000000000000000000000000000000000000000000000000000000006002613c60565b82101561089c57604051632afb507160e21b815260040160405180910390fd5b6006805460ff1916600117905560405163594f0e8f60e11b815260048101839052602481018290527f00000000000000000000000000000000000000000000000000000000000000006044820152606481018690527f000000000000000000000000000000000000000000000000000000000000000060848201527f000000000000000000000000000000000000000000000000000000000000000060a482015260027f000000000000000000000000000000000000000000000000000000000000000002830393506000908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063b29e1d1e9060c401606060405180830381865af41580156109a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cc9190613c77565b9250925092507f00000000000000000000000000000000000000000000000000000000000000006109fd8484611961565b1015610a1c5760405163216f4ab160e21b815260040160405180910390fd5b600080610a2e8585858960008061149d565b91509150801580610a3f5750600082125b15610a5d57604051630552b01360e31b815260040160405180910390fd5b610a6685611987565b600280546001600160801b0319166001600160801b0392909216919091179055610a8f846119b1565b600480546001600160801b0319166001600160801b0392909216919091179055610ab883611987565b600280546001600160801b03928316600160801b029216919091179055610b016000807f0000000000000000000000000000000000000000000000000000000000000000611897565b610b196000610b1360208c018c613b7d565b8a611897565b610b2e610b24610da9565b8760046001610dd5565b508a8a8a610b3f6020820182613b7d565b6001600160a01b03167f4931b9953a65531203c17d9abe77870a3e49d8b13af522ec3321c18b5abb8af38c858c610b7c6040870160208801613ba8565b87610b8a6040890189613bc5565b604051610b9d9796959493929190613c0c565b60405180910390a2505050505050505050506100916001600055565b600260005403610bdc57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14801590610c2f57503415155b15610c4d57604051631574f9f360e01b815260040160405180910390fd5b565b6000610c5e6020830183613b7d565b6001600160a01b031603610c855760405163f0dd15fd60e01b815260040160405180910390fd5b50565b600254600454600091610ca9916001600160801b0390911690600f0b611961565b905090565b600080610cbd878787866119ed565b9050610cc981856116aa565b979650505050505050565b81600080610ce86040850160208601613ba8565b15610d0d57610d0385610cfe6040870187613bc5565b611a04565b9093509050610d25565b5034610d2585610d206040870187613bc5565b611c98565b610d2d611e42565b91508015610da057604051600090339083908381818185875af1925050503d8060008114610d77576040519150601f19603f3d011682016040523d82523d6000602084013e610d7c565b606091505b5050905080610d9e576040516312171d8360e31b815260040160405180910390fd5b505b505b9250929050565b6000610ca9427f0000000000000000000000000000000000000000000000000000000000000000611e55565b600084815260086020526040812060018101546001600160801b0316151580610dfd57504286115b15610e1657600101546001600160801b0316905061144b565b6000806000610e23610da9565b90506000610e517f00000000000000000000000000000000000000000000000000000000000000008b613a9c565b90505b81811015610ec7576000818152600860205260409020600101546001600160801b03168015610e9f576000828152600860205260409020549094506001600160801b03169250610ec7565b507f000000000000000000000000000000000000000000000000000000000000000001610e54565b83600003610f3a57889350610f37610edd610c88565b600254600160801b90046001600160801b03167f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006119ed565b92505b50610f4483611987565b6001850180546001600160801b0319166001600160801b0392909216919091179055610f9a610f937f00000000000000000000000000000000000000000000000000000000000000008b613aaf565b8a84611e6b565b610fd889610fd2610fcb7f000000000000000000000000000000000000000000000000000000000000000083613a9c565b4290611fa9565b84611e6b565b610fe188611fb8565b50600090506008816110137f00000000000000000000000000000000000000000000000000000000000000008d613aaf565b815260208101919091526040016000908120600101546001600160801b0316915061103f60028c61215c565b6000818152600b60205260408120549192508c8c8315611185576001925060008061106e86898d866000612191565b9150915080600960008282546110849190613a9c565b909155506110a090508660008461109a81611810565b88612260565b6110aa8183613a9c565b91506110da86838a8e877f00000000000000000000000000000000000000000000000000000000000000006123da565b91506110ee6110e9838561241e565b612433565b6006805460029061110f9084906201000090046001600160701b0316613ca5565b92506101000a8154816001600160701b0302191690836001600160701b0316021790555061113c82611987565b6006805460109061115e908490600160801b90046001600160801b0316613cc5565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505b600061119260018461215c565b6000818152600b602052604090205490915080156112a157600194506000806111bf838b8f886001612191565b9150915080600960008282546111d59190613a9c565b909155506111f19050836000846111eb81611810565b8a61245d565b6111fb8183613aaf565b915061120a6110e9838761241e565b6006805460029061122b9084906201000090046001600160701b0316613ca5565b92506101000a8154816001600160701b0302191690836001600160701b0316021790555061125882611987565b6006805460109061127a908490600160801b90046001600160801b0316613cc5565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505b84156112db576112cd6112b387611810565b6112bc83611810565b6112c69190613ce5565b600061264e565b8e6112d8848261268d565b50505b60006112e684612887565b50604080518e815260208101879052908101899052606081018490526080810182905290915085907fff888cf98d2696e95c8c39aa98c9ad55a5378008f7a56614c9353b7137a57ab79060a00160405180910390a260008f905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f25964586040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c49190613d05565b90506001600160a01b03811615611439576114365a604051336024820152604481018a90528415156064820152600090819060840160408051601f198184030181529190526020810180516001600160e01b0316633488a6a760e11b1790526001600160a01b038616939291906129d3565b50505b509b9d50505050505050505050505050505b949350505050565b600061147b600b600061146760028661215c565b815260200190815260200160002054611810565b61148d600b600061146760018761215c565b6114979190613ce5565b92915050565b6000806000806114ad8a8a612a60565b91509150806114c45760008093509350505061169f565b6000611524838a6114fd7f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a7640000613aaf565b8b7f0000000000000000000000000000000000000000000000000000000000000000612a9c565b5090506000611588848b846115617f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a7640000613aaf565b8d7f0000000000000000000000000000000000000000000000000000000000000000612b59565b509050811580611596575080155b156115a2575060009050805b60006115f0858c7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006119ed565b90506115fe83838c84612c17565b5090935060009050611610848f613a9c565b905060006116318b8b61162287611810565b61162c908e613d22565b612c63565b90508b6116666116617f000000000000000000000000000000000000000000000000000000000000000083612cca565b611810565b61166f83611810565b61167c611661868561241e565b6116869190613ce5565b6116909190613ce5565b60019950995050505050505050505b965096945050505050565b60006100916116be84846301e13380612cdb565b6116d085670de0b6b3a7640000613aaf565b90611882565b6116de61390d565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e083015260035404821661010082015260055490916101208301916117d69116612d01565b81526004546001600160801b03600160801b918290048116602084015260055460409093019261180892900416612d01565b905292915050565b60006001600160ff1b0382111561183a5760405163396ea70160e11b815260040160405180910390fd5b5090565b61184781612d70565b610c8557604051635044b7f560e01b815260040160405180910390fd5b600082600019048411830215820261187b57600080fd5b5091020490565b600061009183670de0b6b3a764000084611864565b6000838152600a602090815260408083206001600160a01b0386168452909152812080548392906118c9908490613a9c565b90915550506000838152600b6020526040812080548392906118ec908490613a9c565b909155505060408051848152602081018390526001600160a01b0384169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050565b600061149782600461268d565b600081831361195b5782610091565b50919050565b60008061196e8484612a60565b90925090508061198057611980612f08565b5092915050565b60006001600160801b0382111561183a57604051630f0af95160e11b815260040160405180910390fd5b600060016001607f1b03198212806119cf575060016001607f1b0382135b1561183a5760405163a5353be560e01b815260040160405180910390fd5b6000610078826119fe858888611864565b90612f21565b6000808073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031601611a54575047611adf565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611adc9190613b4f565b90505b6001600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031601611b5a5787341015611b49576040516312171d8360e31b815260040160405180910390fd5b611b538834613aaf565b9050611bf4565b6040516323b872dd60e01b8152336004820152306024820152604481018990527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015611bcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf19190613d4a565b91505b81611c12576040516312171d8360e31b815260040160405180910390fd5b600f54600003611c5757611c46887f0000000000000000000000000000000000000000000000000000000000000000611882565b600f81905594509250611c90915050565b600f54600090611c69908a9086611864565b905080600f6000828254611c7d9190613a9c565b90915550909550909350611c9092505050565b935093915050565b6000611ca384612f96565b9050600f54600003611ce157611cd9817f0000000000000000000000000000000000000000000000000000000000000000611882565b600f55611d07565b6000611cec82613091565b905080600f6000828254611d009190613a9c565b9091555050505b6001600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031601611d825782341015611d71576040516312171d8360e31b815260040160405180910390fd5b611d7b8334613aaf565b9050611e1c565b6040516323b872dd60e01b8152336004820152306024820152604481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015611df5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e199190613d4a565b91505b81611e3a576040516312171d8360e31b815260040160405180910390fd5b505050505050565b6000610ca9670de0b6b3a7640000612f96565b6000611e618284613d7d565b6100919084613aaf565b600083815260086020526040902054600160801b90046001600160801b0316808303611e975750505050565b6000848152600860205260408120546001600160801b031690819003611ef157611ec083611987565b600086815260086020526040902080546001600160801b0319166001600160801b0392909216919091179055611f6f565b611f42611f3d670de0b6b3a7640000611f0a8886613aaf565b611f149190613c60565b85670de0b6b3a7640000611f28878a613aaf565b611f329190613c60565b85929190600161317a565b611987565b600086815260086020526040902080546001600160801b0319166001600160801b03929092169190911790555b611f7884611987565b60009586526008602052604090952080546001600160801b03968716600160801b0296169590951790945550505050565b600081831161195b5782610091565b6006546000908190611fdb908490600160801b90046001600160801b031661241e565b6006546201000090046001600160701b031692509050818111156121575760006120058383613aaf565b9050612014611f3d8286613218565b60068054601090612036908490600160801b90046001600160801b0316613d91565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550600061206f858361188290919063ffffffff16565b9050600061209d827f000000000000000000000000000000000000000000000000000000000000000061241e565b905080600960008282546120b19190613a9c565b909155506120c190508183613aaf565b91506120cc82611987565b600280546000906120e79084906001600160801b0316613cc5565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506121148261322d565b60048054600090612129908490600f0b613db1565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055508493505050505b915091565b60006001600160f81b038211156121865760405163b7d0949760e01b815260040160405180910390fd5b5060f89190911b1790565b60008061219e8785611882565b915060006121cc837f000000000000000000000000000000000000000000000000000000000000000061241e565b90506121f8817f000000000000000000000000000000000000000000000000000000000000000061241e565b9150831561221b5761220a8282613aaf565b6122149084613aaf565b9250612232565b6122258282613aaf565b61222f9084613a9c565b92505b8686101561225557612245838789611864565b9250612252828789611864565b91505b509550959350505050565b600454600160801b90046001600160801b03166122a9611f3d8261228c670de0b6b3a764000086613c60565b600554600160801b90046001600160801b031691908a600061317a565b600580546001600160801b03928316600160801b0292169190911790556122cf86611987565b6122d99082613d91565b600480546001600160801b03928316600160801b0292169190911790556122ff84611987565b6002805460009061231a9084906001600160801b0316613cc5565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550612347836119b1565b6004805460009061235c908490600f0b613db1565b92506101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555061238c85611987565b600280546010906123ae908490600160801b90046001600160801b0316613d91565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550505050505050565b6000806123ec846116d08a888a611864565b90506123f9888486611864565b6124039082613a9c565b9050868111156124135786810391505b509695505050505050565b60006100918383670de0b6b3a7640000611864565b60006001600160701b0382111561183a5760405163086b151760e11b815260040160405180910390fd5b6002546001600160801b03168381108061249f57507f000000000000000000000000000000000000000000000000000000000000000061249d8583613aaf565b105b156124ac576124ac612f08565b6004549084900390600f0b6124c18482613ce5565b9050836124cd86611810565b13801561250257507f00000000000000000000000000000000000000000000000000000000000000006125008383611961565b105b1561250f5761250f612f08565b600354600160801b90046001600160801b0316612551611f3d8261253b670de0b6b3a764000088613c60565b6005546001600160801b031691908c600061317a565b600580546001600160801b0319166001600160801b039290921691909117905561257b8882613aaf565b905061258681611987565b600380546001600160801b03928316600160801b0292169190911790556125ac83611987565b600280546001600160801b0319166001600160801b03929092169190911790556125d5826119b1565b600480546001600160801b0319166001600160801b03929092169190911790556125fe87611987565b60028054601090612620908490600160801b90046001600160801b0316613cc5565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050505050505050565b60035461266990611f3d906001600160801b03168484612c63565b600380546001600160801b0319166001600160801b03929092169190911790555050565b600754600360f81b6000908152600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e754354909182916126d8916001600160801b031690613aaf565b9050806000036126ec576001915050611497565b60006126f785613257565b90508060000361270c57600192505050611497565b60008061271a8385896132f3565b9150915080612730576000945050505050611497565b60008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b815260040161276c929190613dde565b6040805180830381865af4158015612788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127ac9190613e54565b915091506127ca6127bc82611810565b6127c590613e78565b612d70565b9250826127e05760009650505050505050611497565b6127e982611987565b600780546000906128049084906001600160801b0316613cc5565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061283181611987565b60078054601090612853908490600160801b90046001600160801b0316613cc5565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506001965050505050505092915050565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e6128b0876116d6565b6040518263ffffffff1660e01b81526004016128cc9190613b40565b6040805180830381865af41580156128e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061290c9190613e94565b9150915080612922575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b03169161298891613a9c565b6129929190613aaf565b9050806000036129aa57506000958695509350505050565b60008087116129ba5760006129c5565b6129c5848884611864565b976001975095505050505050565b6000606060008060008661ffff1667ffffffffffffffff8111156129f9576129f9613ec4565b6040519080825280601f01601f191660200182016040528015612a23576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612a44578692505b828152826000602083013e9093509150505b9550959350505050565b600080600083612a6f86611810565b612a799190613ce5565b90506000811215612a91576000809250925050610da2565b946001945092505050565b6000806000612aae8888888888613462565b90506000612ad9670de0b6b3a7640000612ac88888613218565b612ad29190613a9c565b8390611882565b9050670de0b6b3a76400008110612b0d57612b06612aff670de0b6b3a764000089611882565b8290612f21565b9050612b25565b612b22612aff670de0b6b3a764000089613218565b90505b612b2f8186611882565b905088811015612b4757600080935093505050612a56565b97909703976001975095505050505050565b6000806000612b6b8989888888613491565b9050612b85866119fe612b7e8a8d613a9c565b879061241e565b9850612b92858a86611864565b985088811015612ba957600080925092505061169f565b888103670de0b6b3a76400008110612bd757612bd0612aff670de0b6b3a764000089613218565b9050612bef565b612bec612aff670de0b6b3a764000089611882565b90505b80891015612c055760008093509350505061169f565b90970398600198509650505050505050565b6000806000806000612c2a8987896134b6565b9092509050612c398289613aaf565b97506000612c4882888a611864565b9050612c54818b613aaf565b9a989950979650505050505050565b600080612c7184600061353c565b612c7c84600061353c565b612c869190613ce5565b90506000811315612ca257612c9b8186613a9c565b9450612cc1565b6000811215612cc157612cb481613e78565b612cbe9086613aaf565b94505b50929392505050565b60006100918383670de0b6b3a76400005b6000826000190484118302158202612cf257600080fd5b50910281810615159190040190565b600080670de0b6b3a7640000612d15610da9565b612d1f9190613c60565b9050808311612d2f576000612d39565b612d398184613aaf565b9150610091612ad2670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000613c60565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063d0b457ce9060a401608060405180830381865af4158015612e29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e4d9190613eda565b935093509350935080612e695750600098975050505050505050565b868414612e9a57612e7984611987565b600280546001600160801b0319166001600160801b03929092169190911790555b858314612ecb57612eaa836119b1565b600480546001600160801b0319166001600160801b03929092169190911790555b848214612ef957612edb82611987565b600280546001600160801b03928316600160801b0292169190911790555b50600198975050505050505050565b60405163bb55fd2760e01b815260040160405180910390fd5b600081600003612f3a5750670de0b6b3a7640000611497565b82600003612f4a57506000611497565b6000612f5583611810565b90506000612f6a612f6586611810565b613552565b9050818102612f81670de0b6b3a764000082613f1b565b9050612f8c81613778565b9695505050505050565b60008073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031601612fe5575047613070565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015613049573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061306d9190613b4f565b90505b600f54600003613081576000610091565b600f546100919084908390611864565b60008073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316016130e057504761316b565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015613144573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131689190613b4f565b90505b600f5461009190849083611864565b60008260000361318b575084610078565b81156131de576131bc61319e8487613a9c565b6131a8858761241e565b6131b2888a61241e565b6116d09190613a9c565b905060006131ca8588611fa9565b9050808210156131d8578091505b50610078565b8285036131ed57506000610078565b6100756131fa8487613aaf565b6132048587612cca565b61320e888a61241e565b6116d09190613aaf565b600061009183670de0b6b3a764000084612cdb565b600060016001607f1b0382111561183a5760405163a5353be560e01b815260040160405180910390fd5b6003546000908190613272906001600160801b031684613218565b905061329e7f000000000000000000000000000000000000000000000000000000000000000082613a9c565b6002546001600160801b0316111561195b576002547f0000000000000000000000000000000000000000000000000000000000000000906132e99083906001600160801b0316613aaf565b6100919190613aaf565b6132fb61396e565b600080613307846116d6565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b81526004016133429190613b40565b6040805180830381865af415801561335e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133829190613e94565b9350905082613397575060009150611c909050565b60006133b961166184610160015185610140015161241e90919063ffffffff16565b6133d9611661856101200151866101000151612cca90919063ffffffff16565b6133e39190613ce5565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7654818301526060810199909952608089019990995260a088015250815160c087015281015160e086015290940151610100840152509092600192509050565b600061346e8585612f21565b61348761347f866119fe868b61241e565b859085611864565b6100759190613a9c565b600061349d8585612f21565b6134876134ae866119fe868b612cca565b859085612cdb565b6000806135068561350085817f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a76400006134f6818c613218565b6135009190613aaf565b90612cca565b9150613532827f000000000000000000000000000000000000000000000000000000000000000061241e565b9050935093915050565b600081831361354b5781610091565b5090919050565b60008082136135745760405163e61b497560e01b815260040160405180910390fd5b506001600160801b03811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f198201906135f79084901c611810565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6000680248ce36a70cb26b3e19821361379357506000919050565b680755bf798b4a1bf1e582126137bc576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b3988102909303926c240c330e9fb2d9cbaf0fd5aafb1984018402606090811d6d0277594991cfc85f6e2461837cd9018502811d6d1a521255e34f6a5061b25ef1c9c319018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d6e02c72388d9f74f51a9331fed693f1419018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087016d01d3967ed30fc4f89c02bab570811901810290921d6e0587f503bb6ea29d25fcb7401964500186026d360d7aeea093263ecc6e0ecb291760621b018181059550929350909190612f8c74029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c611810565b6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528061398261390d565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60006060828403121561195b57600080fd5b600080600080600060a086880312156139ea57600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff811115613a1d57600080fd5b613a29888289016139c0565b9150509295509295909350565b600080600060608486031215613a4b57600080fd5b8335925060208401359150604084013567ffffffffffffffff811115613a7057600080fd5b613a7c868287016139c0565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b8082018082111561149757611497613a86565b8181038181111561149757611497613a86565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015181840152505050565b61018081016114978284613ac2565b600060208284031215613b6157600080fd5b5051919050565b6001600160a01b0381168114610c8557600080fd5b600060208284031215613b8f57600080fd5b813561009181613b68565b8015158114610c8557600080fd5b600060208284031215613bba57600080fd5b813561009181613b9a565b6000808335601e19843603018112613bdc57600080fd5b83018035915067ffffffffffffffff821115613bf757600080fd5b602001915036819003821315610da257600080fd5b878152866020820152856040820152841515606082015283608082015260c060a08201528160c0820152818360e0830137600081830160e090810191909152601f909201601f191601019695505050505050565b808202811582820484141761149757611497613a86565b600080600060608486031215613c8c57600080fd5b8351925060208401519150604084015190509250925092565b6001600160701b0381811683821601908082111561198057611980613a86565b6001600160801b0381811683821601908082111561198057611980613a86565b818103600083128015838313168383128216171561198057611980613a86565b600060208284031215613d1757600080fd5b815161009181613b68565b8082018281126000831280158216821582161715613d4257613d42613a86565b505092915050565b600060208284031215613d5c57600080fd5b815161009181613b9a565b634e487b7160e01b600052601260045260246000fd5b600082613d8c57613d8c613d67565b500690565b6001600160801b0382811682821603908082111561198057611980613a86565b600f81810b9083900b0160016001607f1b03811360016001607f1b03198212171561149757611497613a86565b60006102a082019050613df2828551613ac2565b602084015161018083015260408401516101a083015260608401516101c083015260808401516101e083015260a084015161020083015260c084015161022083015260e084015161024083015261010090930151610260820152610280015290565b60008060408385031215613e6757600080fd5b505080516020909101519092909150565b6000600160ff1b8201613e8d57613e8d613a86565b5060000390565b60008060408385031215613ea757600080fd5b825191506020830151613eb981613b9a565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215613ef057600080fd5b8451935060208501519250604085015191506060850151613f1081613b9a565b939692955090935050565b600082613f2a57613f2a613d67565b600160ff1b821460001984141615613f4457613f44613a86565b50059056fea2646970667358221220ac34737031d85eea3ee0877b8c93a2d56f091df10e9bd45a3260a2706dc21fe864736f6c634300081600336102806040523480156200001257600080fd5b5060405162003661380380620036618339810160408190526200003591620001ae565b600160005581516001600160a01b039081166080908152602080850151831660a0908152918501516101a052908401516101c05260c0808501516101e090815260e080870151610200526101208088015190935261010080880151909152610140808801519091529086018051519092528151909201519091528051604090810151610160529051606090810151610180529084015182166102405290920151610260521661022052620002eb565b60405161020081016001600160401b03811182821017156200011657634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b03811681146200013457600080fd5b919050565b6000608082840312156200014c57600080fd5b604051608081016001600160401b03811182821017156200017d57634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600080828403610280811215620001c457600080fd5b61026080821215620001d557600080fd5b620001df620000e4565b9150620001ec856200011c565b8252620001fc602086016200011c565b60208301526200020f604086016200011c565b6040830152606085015160608301526080850151608083015260a085015160a083015260c085015160c083015260e085015160e08301526101008086015181840152506101208086015181840152506101408086015181840152506101606200027a8187016200011c565b908301526101806200028e8682016200011c565b908301526101a0620002a28682016200011c565b908301526101c0620002b68682016200011c565b908301526101e0620002cb8787830162000139565b8184015250819350620002e08186016200011c565b925050509250929050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e0516102005161022051610240516102605161322d62000434600039600050506000505060006109c10152600050506000818161026d015261205401526000818161189a015281816118fd01528181611c3901528181611c7501528181611e6d015261202e01526000818161056f01526120080152600061146f015260006115ca015260008181610733015261159e01526000505060008181610590015261207a01526000818161066b01526127cc0152600081816101ed0152818161042e015281816104a90152818161051f015281816105eb0152610623015260005050600081816110ef015281816111380152818161235d015281816123a6015281816124810152818161252d0152818161261901526126c5015261322d6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063074a6de914610046578063414f826d14610072578063cbc1343414610087575b600080fd5b610059610054366004612cba565b61009a565b6040805192835260208301919091520160405180910390f35b610085610080366004612d11565b6100b5565b005b610059610095366004612cba565b6100c3565b6000806100a88585856100d1565b915091505b935093915050565b6100bf8282610196565b5050565b6000806100a8858585610257565b6000806100dc6103ab565b6100e5836103d5565b60006100ef61040e565b90506101066100fc610426565b8260046001610452565b506101143387838888610ad0565b90935091506101266020850185612d48565b6001600160a01b0316337f07210cf9a89fae8012341fdc131255728787856379269f07c2e41c23b3c09b5884868561016460408b0160208c01612d73565b61017160408c018c612d90565b60405161018396959493929190612e00565b60405180910390a3506100ad6001600055565b61019e6103ab565b60006101a861040e565b6000848152600860205260409020600101549091506001600160801b0316156101dc576101d58183610c13565b505061024d565b60006101e6610426565b90506102127f000000000000000000000000000000000000000000000000000000000000000085612e50565b15158061021e57508381105b1561023c5760405163ecd29e8160e01b815260040160405180910390fd5b6102498483856000610452565b5050505b6100bf6001600055565b6000806102626103ab565b61026b836103d5565b7f00000000000000000000000000000000000000000000000000000000000000008510156102ac5760405163211ddda360e11b815260040160405180910390fd5b60006102b661040e565b90506102c36100fc610426565b506102d060003388610e0e565b6102eb600360f81b6102e56020870187612d48565b88610ee8565b60006103066102fd6020870187612d48565b88848989610ad0565b90945090506103158188612e7a565b9250600061032283610f88565b5090506103326020870187612d48565b6001600160a01b0316337f1c7999deb68182de77ce89d32f82d0e13eb042921b2bfa9f35aa1c43f62f261e8a888761037060408d0160208e01612d73565b8a888e80604001906103829190612d90565b604051610396989796959493929190612e8d565b60405180910390a35050506100ad6001600055565b6002600054036103ce57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b60006103e46020830183612d48565b6001600160a01b03160361040b5760405163f0dd15fd60e01b815260040160405180910390fd5b50565b6000610421670de0b6b3a76400006110d4565b905090565b6000610421427f00000000000000000000000000000000000000000000000000000000000000006111d6565b600084815260086020526040812060018101546001600160801b031615158061047a57504286115b1561049357600101546001600160801b03169050610ac8565b60008060006104a0610426565b905060006104ce7f00000000000000000000000000000000000000000000000000000000000000008b612ed5565b90505b81811015610544576000818152600860205260409020600101546001600160801b0316801561051c576000828152600860205260409020549094506001600160801b03169250610544565b507f0000000000000000000000000000000000000000000000000000000000000000016104d1565b836000036105b7578893506105b461055a6111ec565b600254600160801b90046001600160801b03167f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061120d565b92505b506105c18361122d565b6001850180546001600160801b0319166001600160801b03929092169190911790556106176106107f00000000000000000000000000000000000000000000000000000000000000008b612e7a565b8a8461125b565b6106558961064f6106487f000000000000000000000000000000000000000000000000000000000000000083612ed5565b4290611399565b8461125b565b61065e886113ae565b50600090506008816106907f00000000000000000000000000000000000000000000000000000000000000008d612e7a565b815260208101919091526040016000908120600101546001600160801b031691506106bc60028c611552565b6000818152600b60205260408120549192508c8c831561080257600192506000806106eb86898d866000611587565b9150915080600960008282546107019190612ed5565b9091555061071d90508660008461071781611656565b88611680565b6107278183612ed5565b915061075786838a8e877f00000000000000000000000000000000000000000000000000000000000000006117fa565b915061076b6107668385611844565b611859565b6006805460029061078c9084906201000090046001600160701b0316612ee8565b92506101000a8154816001600160701b0302191690836001600160701b031602179055506107b98261122d565b600680546010906107db908490600160801b90046001600160801b0316612f08565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505b600061080f600184611552565b6000818152600b6020526040902054909150801561091e576001945060008061083c838b8f886001611587565b9150915080600960008282546108529190612ed5565b9091555061086e90508360008461086881611656565b8a611883565b6108788183612e7a565b91506108876107668387611844565b600680546002906108a89084906201000090046001600160701b0316612ee8565b92506101000a8154816001600160701b0302191690836001600160701b031602179055506108d58261122d565b600680546010906108f7908490600160801b90046001600160801b0316612f08565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505b84156109585761094a61093087611656565b61093983611656565b6109439190612f28565b6000611a74565b8e6109558482610c13565b50505b600061096384610f88565b50604080518e815260208101879052908101899052606081018490526080810182905290915085907fff888cf98d2696e95c8c39aa98c9ad55a5378008f7a56614c9353b7137a57ab79060a00160405180910390a260008f905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f25964586040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a419190612f48565b90506001600160a01b03811615610ab657610ab35a604051336024820152604481018a90528415156064820152600090819060840160408051601f198184030181529190526020810180516001600160e01b0316633488a6a760e11b1790526001600160a01b03861693929190611ab3565b50505b509b9d50505050505050505050505050505b949350505050565b600080610adc85611b3e565b505060075485906001600160801b031680821115610b0157806001600160801b031691505b81600003610b16576000809250925050610c09565b610b25600360f81b8984610e0e565b600754600090610b4b9084906001600160801b03600160801b9091048116908516611b4b565b9050610b568361122d565b610b609083612f65565b600780546001600160801b0319166001600160801b0392909216919091179055610b898161122d565b60078054601090610bab908490600160801b90046001600160801b0316612f65565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610bda818887611b69565b9350610be68684611c02565b841015610c065760405163c972651760e01b815260040160405180910390fd5b50505b9550959350505050565b600754600360f81b6000908152600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435490918291610c5e916001600160801b031690612e7a565b905080600003610c72576001915050610e08565b6000610c7d85611c17565b905080600003610c9257600192505050610e08565b600080610ca0838589611cb3565b9150915080610cb6576000945050505050610e08565b60008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b8152600401610cf2929190613003565b6040805180830381865af4158015610d0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d329190613079565b91509150610d50610d4282611656565b610d4b9061309d565b611e27565b925082610d665760009650505050505050610e08565b610d6f8261122d565b60078054600090610d8a9084906001600160801b0316612f08565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610db78161122d565b60078054601090610dd9908490600160801b90046001600160801b0316612f08565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550600196505050505050505b92915050565b6000838152600a602090815260408083206001600160a01b0386168452909152902054811115610e5157604051631e9acf1760e31b815260040160405180910390fd5b6000838152600a602090815260408083206001600160a01b0386168452825280832080548590039055858352600b90915281208054839290610e94908490612e7a565b909155505060408051848152602081018390526000916001600160a01b0385169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291015b60405180910390a4505050565b6000838152600a602090815260408083206001600160a01b038616845290915281208054839290610f1a908490612ed5565b90915550506000838152600b602052604081208054839290610f3d908490612ed5565b909155505060408051848152602081018390526001600160a01b0384169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101610edb565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e610fb187611fbf565b6040518263ffffffff1660e01b8152600401610fcd91906130b9565b6040805180830381865af4158015610fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100d91906130c8565b9150915080611023575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b03169161108991612ed5565b6110939190612e7a565b9050806000036110ab57506000958695509350505050565b60008087116110bb5760006110c6565b6110c6848884611b4b565b976001975095505050505050565b60008073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed197f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316016111235750476111ae565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ab91906130f8565b90505b600f546000036111bf5760006111cf565b600f546111cf9084908390611b4b565b9392505050565b60006111e28284612e50565b6111cf9084612e7a565b600254600454600091610421916001600160801b0390911690600f0b6120f9565b60006112248261121e858888611b4b565b9061211f565b95945050505050565b60006001600160801b0382111561125757604051630f0af95160e11b815260040160405180910390fd5b5090565b600083815260086020526040902054600160801b90046001600160801b03168083036112875750505050565b6000848152600860205260408120546001600160801b0316908190036112e1576112b08361122d565b600086815260086020526040902080546001600160801b0319166001600160801b039290921691909117905561135f565b61133261132d670de0b6b3a76400006112fa8886612e7a565b6113049190613111565b85670de0b6b3a7640000611318878a612e7a565b6113229190613111565b859291906001612194565b61122d565b600086815260086020526040902080546001600160801b0319166001600160801b03929092169190911790555b6113688461122d565b60009586526008602052604090952080546001600160801b03968716600160801b0296169590951790945550505050565b60008183116113a857826111cf565b50919050565b60065460009081906113d1908490600160801b90046001600160801b0316611844565b6006546201000090046001600160701b0316925090508181111561154d5760006113fb8383612e7a565b905061140a61132d8286612232565b6006805460109061142c908490600160801b90046001600160801b0316612f65565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000611465858361224790919063ffffffff16565b90506000611493827f0000000000000000000000000000000000000000000000000000000000000000611844565b905080600960008282546114a79190612ed5565b909155506114b790508183612e7a565b91506114c28261122d565b600280546000906114dd9084906001600160801b0316612f08565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061150a8261225c565b6004805460009061151f908490600f0b613128565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055508493505050505b915091565b60006001600160f81b0382111561157c5760405163b7d0949760e01b815260040160405180910390fd5b5060f89190911b1790565b6000806115948785612247565b915060006115c2837f0000000000000000000000000000000000000000000000000000000000000000611844565b90506115ee817f0000000000000000000000000000000000000000000000000000000000000000611844565b91508315611611576116008282612e7a565b61160a9084612e7a565b9250611628565b61161b8282612e7a565b6116259084612ed5565b92505b8686101561164b5761163b838789611b4b565b9250611648828789611b4b565b91505b509550959350505050565b60006001600160ff1b038211156112575760405163396ea70160e11b815260040160405180910390fd5b600454600160801b90046001600160801b03166116c961132d826116ac670de0b6b3a764000086613111565b600554600160801b90046001600160801b031691908a6000612194565b600580546001600160801b03928316600160801b0292169190911790556116ef8661122d565b6116f99082612f65565b600480546001600160801b03928316600160801b02921691909117905561171f8461122d565b6002805460009061173a9084906001600160801b0316612f08565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061176783612286565b6004805460009061177c908490600f0b613128565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055506117ac8561122d565b600280546010906117ce908490600160801b90046001600160801b0316612f65565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550505050505050565b6000806118128461180c8a888a611b4b565b90612247565b905061181f888486611b4b565b6118299082612ed5565b9050868111156118395786810391505b509695505050505050565b60006111cf8383670de0b6b3a7640000611b4b565b60006001600160701b038211156112575760405163086b151760e11b815260040160405180910390fd5b6002546001600160801b0316838110806118c557507f00000000000000000000000000000000000000000000000000000000000000006118c38583612e7a565b105b156118d2576118d26122c2565b6004549084900390600f0b6118e78482612f28565b9050836118f386611656565b13801561192857507f000000000000000000000000000000000000000000000000000000000000000061192683836120f9565b105b15611935576119356122c2565b600354600160801b90046001600160801b031661197761132d82611961670de0b6b3a764000088613111565b6005546001600160801b031691908c6000612194565b600580546001600160801b0319166001600160801b03929092169190911790556119a18882612e7a565b90506119ac8161122d565b600380546001600160801b03928316600160801b0292169190911790556119d28361122d565b600280546001600160801b0319166001600160801b03929092169190911790556119fb82612286565b600480546001600160801b0319166001600160801b0392909216919091179055611a248761122d565b60028054601090611a46908490600160801b90046001600160801b0316612f08565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050505050505050565b600354611a8f9061132d906001600160801b031684846122db565b600380546001600160801b0319166001600160801b03929092169190911790555050565b6000606060008060008661ffff1667ffffffffffffffff811115611ad957611ad9613155565b6040519080825280601f01601f191660200182016040528015611b03576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115611b24578692505b828152826000602083013e90999098509650505050505050565b6000610e08826004610c13565b6000826000190484118302158202611b6257600080fd5b5091020490565b600080611b768585611844565b9050611b8181612342565b945084600003611b955760009150506111cf565b849150611ba86040840160208501612d73565b15611bd757611bd085611bbe6020860186612d48565b611bcb6040870187612d90565b61242b565b9150611bfa565b611bfa85611be86020860186612d48565b611bf56040870187612d90565b6125c5565b509392505050565b60006111cf8383670de0b6b3a764000061275b565b6003546000908190611c32906001600160801b031684612232565b9050611c5e7f000000000000000000000000000000000000000000000000000000000000000082612ed5565b6002546001600160801b031611156113a8576002547f000000000000000000000000000000000000000000000000000000000000000090611ca99083906001600160801b0316612e7a565b6111cf9190612e7a565b611cbb612c07565b600080611cc784611fbf565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b8152600401611d0291906130b9565b6040805180830381865af4158015611d1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4291906130c8565b9350905082611d575750600091506100ad9050565b6000611d7e611d7984610160015185610140015161184490919063ffffffff16565b611656565b611d9e611d79856101200151866101000151611c0290919063ffffffff16565b611da89190612f28565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7654818301526060810199909952608089019990995260a088015250815160c087015281015160e086015290940151610100840152509092600192509050565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = MorphoBlue_wstETH_USDA_HyperdriveTestContractFunctions(morphoblue_wsteth_usda_hyperdrivetest_abi, self.w3, address)  # type: ignore
        self.events = MorphoBlue_wstETH_USDA_HyperdriveTestContractEvents(morphoblue_wsteth_usda_hyperdrivetest_abi, self.w3, address)  # type: ignore
        self.errors = MorphoBlue_wstETH_USDA_HyperdriveTestContractErrors()

    events: MorphoBlue_wstETH_USDA_HyperdriveTestContractEvents

    errors: MorphoBlue_wstETH_USDA_HyperdriveTestContractErrors = (
        MorphoBlue_wstETH_USDA_HyperdriveTestContractErrors()
    )

    functions: MorphoBlue_wstETH_USDA_HyperdriveTestContractFunctions

    class LinkReferences(NamedTuple):
        """Link references required when deploying."""

        MorphoBlueConversions: MorphoBlueConversionsContract

        LPMath: LPMathContract

    link_references_placeholder_lookup: dict[str, str] = {
        "MorphoBlueConversions": "__$04b283107449142c3a86c88d1d4ad5a326$__",
        "LPMath": "__$2b4fa6f02a36eedfe41c65e8dd342257d3$__",
    }

    @classmethod
    def constructor(cls, link_references: LinkReferences) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["MorphoBlueConversions"],
                link_references.MorphoBlueConversions.address[2:].lower(),
            )

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["LPMath"],
                link_references.LPMath.address[2:].lower(),
            )

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor()

    @classmethod
    def deploy(
        cls,
        w3: Web3,
        account: LocalAccount | ChecksumAddress,
        link_references: LinkReferences,
    ) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor(link_references)

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = (
            MorphoBlue_wstETH_USDA_HyperdriveTestContractFunctions(
                morphoblue_wsteth_usda_hyperdrivetest_abi, w3, None
            )
        )
        contract.errors = MorphoBlue_wstETH_USDA_HyperdriveTestContractErrors()

        return contract
