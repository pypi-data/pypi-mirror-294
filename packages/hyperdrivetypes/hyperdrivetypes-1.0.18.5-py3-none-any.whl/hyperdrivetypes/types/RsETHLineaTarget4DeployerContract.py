"""A web3.py Contract class for the RsETHLineaTarget4Deployer contract.

DO NOT EDIT.  This file was generated by pypechain.  See documentation at
https://github.com/delvtech/pypechain"""

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# This file is bound to get very long depending on contract sizes.
# pylint: disable=too-many-lines

# methods are overriden with specific arguments instead of generic *args, **kwargs
# pylint: disable=arguments-differ

# consumers have too many opinions on line length
# pylint: disable=line-too-long


from __future__ import annotations

from typing import Any, NamedTuple, Type, cast

from eth_account.signers.local import LocalAccount
from eth_typing import ABI, ChecksumAddress, HexStr
from hexbytes import HexBytes
from typing_extensions import Self
from web3 import Web3
from web3.contract.contract import (
    Contract,
    ContractConstructor,
    ContractFunction,
    ContractFunctions,
)
from web3.types import BlockIdentifier, StateOverride, TxParams

from .IHyperdriveTypes import Fees, PoolConfig
from .LPMathContract import LPMathContract
from .RsETHLineaConversionsContract import RsETHLineaConversionsContract
from .utilities import dataclass_to_tuple, rename_returned_types

structs = {
    "Fees": Fees,
    "PoolConfig": PoolConfig,
}


class RsETHLineaTarget4DeployerDeployTargetContractFunction(ContractFunction):
    """ContractFunction for the deployTarget method."""

    def __call__(self, config: PoolConfig, adminController: str, arg3: bytes, salt: bytes) -> RsETHLineaTarget4DeployerDeployTargetContractFunction:  # type: ignore
        clone = super().__call__(
            dataclass_to_tuple(config),
            dataclass_to_tuple(adminController),
            dataclass_to_tuple(arg3),
            dataclass_to_tuple(salt),
        )
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # Define the expected return types from the smart contract call

        return_types = str

        # Call the function

        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )
        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class RsETHLineaTarget4DeployerRsETHPoolContractFunction(ContractFunction):
    """ContractFunction for the rsETHPool method."""

    def __call__(self) -> RsETHLineaTarget4DeployerRsETHPoolContractFunction:  # type: ignore
        clone = super().__call__()
        self.kwargs = clone.kwargs
        self.args = clone.args
        return self

    def call(
        self,
        transaction: TxParams | None = None,
        block_identifier: BlockIdentifier = "latest",
        state_override: StateOverride | None = None,
        ccip_read_enabled: bool | None = None,
    ) -> str:
        """returns str."""
        # Define the expected return types from the smart contract call

        return_types = str

        # Call the function

        raw_values = super().call(
            transaction, block_identifier, state_override, ccip_read_enabled
        )
        return cast(
            str, rename_returned_types(structs, return_types, raw_values)
        )


class RsETHLineaTarget4DeployerContractFunctions(ContractFunctions):
    """ContractFunctions for the RsETHLineaTarget4Deployer contract."""

    deployTarget: RsETHLineaTarget4DeployerDeployTargetContractFunction

    rsETHPool: RsETHLineaTarget4DeployerRsETHPoolContractFunction

    def __init__(
        self,
        abi: ABI,
        w3: "Web3",
        address: ChecksumAddress | None = None,
        decode_tuples: bool | None = False,
    ) -> None:
        super().__init__(abi, w3, address, decode_tuples)
        self.deployTarget = (
            RsETHLineaTarget4DeployerDeployTargetContractFunction.factory(
                "deployTarget",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="deployTarget",
            )
        )
        self.rsETHPool = (
            RsETHLineaTarget4DeployerRsETHPoolContractFunction.factory(
                "rsETHPool",
                w3=w3,
                contract_abi=abi,
                address=address,
                decode_tuples=decode_tuples,
                abi_element_identifier="rsETHPool",
            )
        )


rsethlineatarget4deployer_abi: ABI = cast(
    ABI,
    [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_rsETHPool",
                    "type": "address",
                    "internalType": "contract IRSETHPoolV2",
                }
            ],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "deployTarget",
            "inputs": [
                {
                    "name": "_config",
                    "type": "tuple",
                    "internalType": "struct IHyperdrive.PoolConfig",
                    "components": [
                        {
                            "name": "baseToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "vaultSharesToken",
                            "type": "address",
                            "internalType": "contract IERC20",
                        },
                        {
                            "name": "linkerFactory",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "linkerCodeHash",
                            "type": "bytes32",
                            "internalType": "bytes32",
                        },
                        {
                            "name": "initialVaultSharePrice",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumShareReserves",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "minimumTransactionAmount",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "circuitBreakerDelta",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "positionDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "checkpointDuration",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "timeStretch",
                            "type": "uint256",
                            "internalType": "uint256",
                        },
                        {
                            "name": "governance",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "feeCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "sweepCollector",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "checkpointRewarder",
                            "type": "address",
                            "internalType": "address",
                        },
                        {
                            "name": "fees",
                            "type": "tuple",
                            "internalType": "struct IHyperdrive.Fees",
                            "components": [
                                {
                                    "name": "curve",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "flat",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceLP",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                                {
                                    "name": "governanceZombie",
                                    "type": "uint256",
                                    "internalType": "uint256",
                                },
                            ],
                        },
                    ],
                },
                {
                    "name": "_adminController",
                    "type": "address",
                    "internalType": "contract IHyperdriveAdminController",
                },
                {"name": "", "type": "bytes", "internalType": "bytes"},
                {"name": "_salt", "type": "bytes32", "internalType": "bytes32"},
            ],
            "outputs": [
                {"name": "", "type": "address", "internalType": "address"}
            ],
            "stateMutability": "nonpayable",
        },
        {
            "type": "function",
            "name": "rsETHPool",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IRSETHPoolV2",
                }
            ],
            "stateMutability": "view",
        },
    ],
)


class RsETHLineaTarget4DeployerContract(Contract):
    """A web3.py Contract class for the RsETHLineaTarget4Deployer contract."""

    abi: ABI = rsethlineatarget4deployer_abi
    # We change `bytecode` as needed for linking, but keep
    # `_raw_bytecode` unchanged as an original copy.
    # pylint: disable=line-too-long
    _raw_bytecode: HexStr | None = HexStr(
        "0x60a060405234801561001057600080fd5b5060405161390438038061390483398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051613874610090600039600081816040015260bc01526138746000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637df91ba81461003b5780638c98b3c61461007e575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61006261008c36600461027b565b604080513360208201529081018290526000906060016040516020818303038152906040528051906020012085857f00000000000000000000000000000000000000000000000000000000000000006040516100e79061011f565b6100f3939291906103d7565b8190604051809103906000f5905080158015610113573d6000803e3d6000fd5b5090505b949350505050565b6133338061050c83390190565b634e487b7160e01b600052604160045260246000fd5b604051610200810167ffffffffffffffff811182821017156101665761016661012c565b60405290565b80356001600160a01b038116811461018357600080fd5b919050565b60006080828403121561019a57600080fd5b6040516080810181811067ffffffffffffffff821117156101bd576101bd61012c565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600082601f8301126101ff57600080fd5b813567ffffffffffffffff8082111561021a5761021a61012c565b604051601f8301601f19908116603f011681019082821181831017156102425761024261012c565b8160405283815286602085880101111561025b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000808486036102c081121561029357600080fd5b610260808212156102a357600080fd5b6102ab610142565b91506102b68761016c565b82526102c46020880161016c565b60208301526102d56040880161016c565b6040830152606087013560608301526080870135608083015260a087013560a083015260c087013560c083015260e087013560e083015261010080880135818401525061012080880135818401525061014080880135818401525061016061033e81890161016c565b9083015261018061035088820161016c565b908301526101a061036288820161016c565b908301526101c061037488820161016c565b908301526101e061038789898301610188565b818401525081955061039a81880161016c565b9450505061028085013567ffffffffffffffff8111156103b957600080fd5b6103c5878288016101ee565b949793965093946102a0013593505050565b83516001600160a01b031681526102a08101602085015161040360208401826001600160a01b03169052565b50604085015161041e60408401826001600160a01b03169052565b50606085015160608301526080850151608083015260a085015160a083015260c085015160c083015260e085015160e083015261010080860151818401525061012080860151818401525061014080860151818401525061016080860151610490828501826001600160a01b03169052565b5050610180858101516001600160a01b03908116918401919091526101a0808701518216908401526101c0808701518216908401526101e0808701518051918501919091526020810151610200850152604081015161022085015260600151610240840152848116610260840152831661028083015261011756fe6102a06040523480156200001257600080fd5b5060405162003333380380620033338339810160408190526200003591620001b5565b600160005582516001600160a01b039081166080908152602080860151831660a0908152918601516101a052908501516101c05260c0808601516101e090815260e0808801516102005261012080890151909352610100808901519091526101408089015190915290870180515190925281519092015190915280516040908101516101605290516060908101516101805290850151821661024052909301516102605290821661022052166102805262000305565b60405161020081016001600160401b03811182821017156200011d57634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b03811681146200013b57600080fd5b919050565b6000608082840312156200015357600080fd5b604051608081016001600160401b03811182821017156200018457634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60008060008385036102a0811215620001cd57600080fd5b61026080821215620001de57600080fd5b620001e8620000eb565b9150620001f58662000123565b8252620002056020870162000123565b6020830152620002186040870162000123565b6040830152606086015160608301526080860151608083015260a086015160a083015260c086015160c083015260e086015160e08301526101008087015181840152506101208087015181840152506101408087015181840152506101606200028381880162000123565b908301526101806200029787820162000123565b908301526101a0620002ab87820162000123565b908301526101c0620002bf87820162000123565b908301526101e0620002d48888830162000140565b8184015250819450620002e981870162000123565b93505050620002fc610280850162000123565b90509250925092565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e0516102005161022051610240516102605161028051612f046200042f600039600081816110eb01526123050152600050506000505060006109c10152600050506000818161026d0152612000015260008181611846015281816118a901528181611be501528181611c2101528181611e190152611fda01526000818161056f0152611fb40152600061141b01526000611576015260008181610733015261154a01526000505060008181610590015261202601526000818161066b01526124a30152600081816101ed0152818161042e015281816104a90152818161051f015281816105eb01526106230152600061239c015260005050612f046000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063074a6de914610046578063414f826d14610072578063cbc1343414610087575b600080fd5b610059610054366004612991565b61009a565b6040805192835260208301919091520160405180910390f35b6100856100803660046129e8565b6100b5565b005b610059610095366004612991565b6100c3565b6000806100a88585856100d1565b915091505b935093915050565b6100bf8282610196565b5050565b6000806100a8858585610257565b6000806100dc6103ab565b6100e5836103d5565b60006100ef61040e565b90506101066100fc610426565b8260046001610452565b506101143387838888610ad0565b90935091506101266020850185612a1f565b6001600160a01b0316337f07210cf9a89fae8012341fdc131255728787856379269f07c2e41c23b3c09b5884868561016460408b0160208c01612a4a565b61017160408c018c612a67565b60405161018396959493929190612ad7565b60405180910390a3506100ad6001600055565b61019e6103ab565b60006101a861040e565b6000848152600860205260409020600101549091506001600160801b0316156101dc576101d58183610c13565b505061024d565b60006101e6610426565b90506102127f000000000000000000000000000000000000000000000000000000000000000085612b27565b15158061021e57508381105b1561023c5760405163ecd29e8160e01b815260040160405180910390fd5b6102498483856000610452565b5050505b6100bf6001600055565b6000806102626103ab565b61026b836103d5565b7f00000000000000000000000000000000000000000000000000000000000000008510156102ac5760405163211ddda360e11b815260040160405180910390fd5b60006102b661040e565b90506102c36100fc610426565b506102d060003388610e0e565b6102eb600360f81b6102e56020870187612a1f565b88610ee8565b60006103066102fd6020870187612a1f565b88848989610ad0565b90945090506103158188612b51565b9250600061032283610f88565b5090506103326020870187612a1f565b6001600160a01b0316337f1c7999deb68182de77ce89d32f82d0e13eb042921b2bfa9f35aa1c43f62f261e8a888761037060408d0160208e01612a4a565b8a888e80604001906103829190612a67565b604051610396989796959493929190612b64565b60405180910390a35050506100ad6001600055565b6002600054036103ce57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b60006103e46020830183612a1f565b6001600160a01b03160361040b5760405163f0dd15fd60e01b815260040160405180910390fd5b50565b6000610421670de0b6b3a76400006110d4565b905090565b6000610421427f000000000000000000000000000000000000000000000000000000000000000061117b565b600084815260086020526040812060018101546001600160801b031615158061047a57504286115b1561049357600101546001600160801b03169050610ac8565b60008060006104a0610426565b905060006104ce7f00000000000000000000000000000000000000000000000000000000000000008b612bac565b90505b81811015610544576000818152600860205260409020600101546001600160801b0316801561051c576000828152600860205260409020549094506001600160801b03169250610544565b507f0000000000000000000000000000000000000000000000000000000000000000016104d1565b836000036105b7578893506105b461055a611198565b600254600160801b90046001600160801b03167f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006111b9565b92505b506105c1836111d9565b6001850180546001600160801b0319166001600160801b03929092169190911790556106176106107f00000000000000000000000000000000000000000000000000000000000000008b612b51565b8a84611207565b6106558961064f6106487f000000000000000000000000000000000000000000000000000000000000000083612bac565b4290611345565b84611207565b61065e8861135a565b50600090506008816106907f00000000000000000000000000000000000000000000000000000000000000008d612b51565b815260208101919091526040016000908120600101546001600160801b031691506106bc60028c6114fe565b6000818152600b60205260408120549192508c8c831561080257600192506000806106eb86898d866000611533565b9150915080600960008282546107019190612bac565b9091555061071d90508660008461071781611602565b8861162c565b6107278183612bac565b915061075786838a8e877f00000000000000000000000000000000000000000000000000000000000000006117a6565b915061076b61076683856117f0565b611805565b6006805460029061078c9084906201000090046001600160701b0316612bbf565b92506101000a8154816001600160701b0302191690836001600160701b031602179055506107b9826111d9565b600680546010906107db908490600160801b90046001600160801b0316612bdf565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505b600061080f6001846114fe565b6000818152600b6020526040902054909150801561091e576001945060008061083c838b8f886001611533565b9150915080600960008282546108529190612bac565b9091555061086e90508360008461086881611602565b8a61182f565b6108788183612b51565b915061088761076683876117f0565b600680546002906108a89084906201000090046001600160701b0316612bbf565b92506101000a8154816001600160701b0302191690836001600160701b031602179055506108d5826111d9565b600680546010906108f7908490600160801b90046001600160801b0316612bdf565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505b84156109585761094a61093087611602565b61093983611602565b6109439190612bff565b6000611a20565b8e6109558482610c13565b50505b600061096384610f88565b50604080518e815260208101879052908101899052606081018490526080810182905290915085907fff888cf98d2696e95c8c39aa98c9ad55a5378008f7a56614c9353b7137a57ab79060a00160405180910390a260008f905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f25964586040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a419190612c1f565b90506001600160a01b03811615610ab657610ab35a604051336024820152604481018a90528415156064820152600090819060840160408051601f198184030181529190526020810180516001600160e01b0316633488a6a760e11b1790526001600160a01b03861693929190611a5f565b50505b509b9d50505050505050505050505050505b949350505050565b600080610adc85611aea565b505060075485906001600160801b031680821115610b0157806001600160801b031691505b81600003610b16576000809250925050610c09565b610b25600360f81b8984610e0e565b600754600090610b4b9084906001600160801b03600160801b9091048116908516611af7565b9050610b56836111d9565b610b609083612c3c565b600780546001600160801b0319166001600160801b0392909216919091179055610b89816111d9565b60078054601090610bab908490600160801b90046001600160801b0316612c3c565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610bda818887611b15565b9350610be68684611bae565b841015610c065760405163c972651760e01b815260040160405180910390fd5b50505b9550959350505050565b600754600360f81b6000908152600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435490918291610c5e916001600160801b031690612b51565b905080600003610c72576001915050610e08565b6000610c7d85611bc3565b905080600003610c9257600192505050610e08565b600080610ca0838589611c5f565b9150915080610cb6576000945050505050610e08565b60008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__632c03ef68858a6040518363ffffffff1660e01b8152600401610cf2929190612cda565b6040805180830381865af4158015610d0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d329190612d50565b91509150610d50610d4282611602565b610d4b90612d74565b611dd3565b925082610d665760009650505050505050610e08565b610d6f826111d9565b60078054600090610d8a9084906001600160801b0316612bdf565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610db7816111d9565b60078054601090610dd9908490600160801b90046001600160801b0316612bdf565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550600196505050505050505b92915050565b6000838152600a602090815260408083206001600160a01b0386168452909152902054811115610e5157604051631e9acf1760e31b815260040160405180910390fd5b6000838152600a602090815260408083206001600160a01b0386168452825280832080548590039055858352600b90915281208054839290610e94908490612b51565b909155505060408051848152602081018390526000916001600160a01b0385169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291015b60405180910390a4505050565b6000838152600a602090815260408083206001600160a01b038616845290915281208054839290610f1a908490612bac565b90915550506000838152600b602052604081208054839290610f3d908490612bac565b909155505060408051848152602081018390526001600160a01b0384169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101610edb565b60008060008073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e610fb187611f6b565b6040518263ffffffff1660e01b8152600401610fcd9190612d90565b6040805180830381865af4158015610fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100d9190612d9f565b9150915080611023575060009485945092505050565b600754600b6020527f3ae204c42bf80d9df0ca83c69a5573417a7a5570428fcb513b3a0276db3e75435460008080527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f765490926001600160801b03169161108991612bac565b6110939190612b51565b9050806000036110ab57506000958695509350505050565b60008087116110bb5760006110c6565b6110c6848884611af7565b976001975095505050505050565b604051632b63dfd360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526024810182905260009073__$09f36fe1c8069bb875c0cd1810483af6f9$__90632b63dfd3906044015b602060405180830381865af4158015611157573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e089190612dcf565b60006111878284612b27565b6111919084612b51565b9392505050565b600254600454600091610421916001600160801b0390911690600f0b6120a5565b60006111d0826111ca858888611af7565b906120cb565b95945050505050565b60006001600160801b0382111561120357604051630f0af95160e11b815260040160405180910390fd5b5090565b600083815260086020526040902054600160801b90046001600160801b03168083036112335750505050565b6000848152600860205260408120546001600160801b03169081900361128d5761125c836111d9565b600086815260086020526040902080546001600160801b0319166001600160801b039290921691909117905561130b565b6112de6112d9670de0b6b3a76400006112a68886612b51565b6112b09190612de8565b85670de0b6b3a76400006112c4878a612b51565b6112ce9190612de8565b859291906001612140565b6111d9565b600086815260086020526040902080546001600160801b0319166001600160801b03929092169190911790555b611314846111d9565b60009586526008602052604090952080546001600160801b03968716600160801b0296169590951790945550505050565b60008183116113545782611191565b50919050565b600654600090819061137d908490600160801b90046001600160801b03166117f0565b6006546201000090046001600160701b031692509050818111156114f95760006113a78383612b51565b90506113b66112d982866121de565b600680546010906113d8908490600160801b90046001600160801b0316612c3c565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550600061141185836121f390919063ffffffff16565b9050600061143f827f00000000000000000000000000000000000000000000000000000000000000006117f0565b905080600960008282546114539190612bac565b9091555061146390508183612b51565b915061146e826111d9565b600280546000906114899084906001600160801b0316612bdf565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506114b682612208565b600480546000906114cb908490600f0b612dff565b92506101000a8154816001600160801b030219169083600f0b6001600160801b031602179055508493505050505b915091565b60006001600160f81b038211156115285760405163b7d0949760e01b815260040160405180910390fd5b5060f89190911b1790565b60008061154087856121f3565b9150600061156e837f00000000000000000000000000000000000000000000000000000000000000006117f0565b905061159a817f00000000000000000000000000000000000000000000000000000000000000006117f0565b915083156115bd576115ac8282612b51565b6115b69084612b51565b92506115d4565b6115c78282612b51565b6115d19084612bac565b92505b868610156115f7576115e7838789611af7565b92506115f4828789611af7565b91505b509550959350505050565b60006001600160ff1b038211156112035760405163396ea70160e11b815260040160405180910390fd5b600454600160801b90046001600160801b03166116756112d982611658670de0b6b3a764000086612de8565b600554600160801b90046001600160801b031691908a6000612140565b600580546001600160801b03928316600160801b02921691909117905561169b866111d9565b6116a59082612c3c565b600480546001600160801b03928316600160801b0292169190911790556116cb846111d9565b600280546000906116e69084906001600160801b0316612bdf565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061171383612232565b60048054600090611728908490600f0b612dff565b92506101000a8154816001600160801b030219169083600f0b6001600160801b03160217905550611758856111d9565b6002805460109061177a908490600160801b90046001600160801b0316612c3c565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550505050505050565b6000806117be846117b88a888a611af7565b906121f3565b90506117cb888486611af7565b6117d59082612bac565b9050868111156117e55786810391505b509695505050505050565b60006111918383670de0b6b3a7640000611af7565b60006001600160701b038211156112035760405163086b151760e11b815260040160405180910390fd5b6002546001600160801b03168381108061187157507f000000000000000000000000000000000000000000000000000000000000000061186f8583612b51565b105b1561187e5761187e61226e565b6004549084900390600f0b6118938482612bff565b90508361189f86611602565b1380156118d457507f00000000000000000000000000000000000000000000000000000000000000006118d283836120a5565b105b156118e1576118e161226e565b600354600160801b90046001600160801b03166119236112d98261190d670de0b6b3a764000088612de8565b6005546001600160801b031691908c6000612140565b600580546001600160801b0319166001600160801b039290921691909117905561194d8882612b51565b9050611958816111d9565b600380546001600160801b03928316600160801b02921691909117905561197e836111d9565b600280546001600160801b0319166001600160801b03929092169190911790556119a782612232565b600480546001600160801b0319166001600160801b03929092169190911790556119d0876111d9565b600280546010906119f2908490600160801b90046001600160801b0316612bdf565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505050505050505050565b600354611a3b906112d9906001600160801b03168484612287565b600380546001600160801b0319166001600160801b03929092169190911790555050565b6000606060008060008661ffff1667ffffffffffffffff811115611a8557611a85612e2c565b6040519080825280601f01601f191660200182016040528015611aaf576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115611ad0578692505b828152826000602083013e90999098509650505050505050565b6000610e08826004610c13565b6000826000190484118302158202611b0e57600080fd5b5091020490565b600080611b2285856117f0565b9050611b2d816122ee565b945084600003611b41576000915050611191565b849150611b546040840160208501612a4a565b15611b8357611b7c85611b6a6020860186612a1f565b611b776040870187612a67565b612358565b9150611ba6565b611ba685611b946020860186612a1f565b611ba16040870187612a67565b612373565b509392505050565b60006111918383670de0b6b3a7640000612432565b6003546000908190611bde906001600160801b0316846121de565b9050611c0a7f000000000000000000000000000000000000000000000000000000000000000082612bac565b6002546001600160801b03161115611354576002547f000000000000000000000000000000000000000000000000000000000000000090611c559083906001600160801b0316612b51565b6111919190612b51565b611c676128de565b600080611c7384611f6b565b9050600073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__635a1b419e836040518263ffffffff1660e01b8152600401611cae9190612d90565b6040805180830381865af4158015611cca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cee9190612d9f565b9350905082611d035750600091506100ad9050565b6000611d2a611d258461016001518561014001516117f090919063ffffffff16565b611602565b611d4a611d25856101200151866101000151611bae90919063ffffffff16565b611d549190612bff565b604080516101208101825285815260208082019590955260008052600b85527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f7654818301526060810199909952608089019990995260a088015250815160c087015281015160e086015290940151610100840152509092600192509050565b6002546004805460405163685a2be760e11b81526001600160801b03808516938201849052600f9290920b60248201819052600160801b909404909116604482018190527f000000000000000000000000000000000000000000000000000000000000000060648301526084820185905260009391849081908190819073__$2b4fa6f02a36eedfe41c65e8dd342257d3$__9063d0b457ce9060a401608060405180830381865af4158015611e8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eb09190612e42565b935093509350935080611ecc5750600098975050505050505050565b868414611efd57611edc846111d9565b600280546001600160801b0319166001600160801b03929092169190911790555b858314611f2e57611f0d83612232565b600480546001600160801b0319166001600160801b03929092169190911790555b848214611f5c57611f3e826111d9565b600280546001600160801b03928316600160801b0292169190911790555b50600198975050505050505050565b611f73612930565b60408051610180810182526002546001600160801b038082168352600454600f0b6020840152600160801b91829004811693830193909352606082018590527f000000000000000000000000000000000000000000000000000000000000000060808301527f000000000000000000000000000000000000000000000000000000000000000060a08301527f000000000000000000000000000000000000000000000000000000000000000060c08301527f000000000000000000000000000000000000000000000000000000000000000060e0830152600354048216610100820152600554909161012083019161206b9116612458565b81526004546001600160801b03600160801b918290048116602084015260055460409093019261209d92900416612458565b905292915050565b6000806120b284846124ce565b9092509050806120c4576120c461226e565b5092915050565b6000816000036120e45750670de0b6b3a7640000610e08565b826000036120f457506000610e08565b60006120ff83611602565b9050600061211461210f86611602565b61250d565b905081810261212b670de0b6b3a764000082612e83565b905061213681612733565b9695505050505050565b6000826000036121515750846111d0565b81156121a4576121826121648487612bac565b61216e85876117f0565b612178888a6117f0565b6117b89190612bac565b905060006121908588611345565b90508082101561219e578091505b506111d0565b8285036121b3575060006111d0565b6121366121c08487612b51565b6121ca8587611bae565b6121d4888a6117f0565b6117b89190612b51565b600061119183670de0b6b3a764000084612432565b600061119183670de0b6b3a764000084611af7565b600060016001607f1b038211156112035760405163a5353be560e01b815260040160405180910390fd5b600060016001607f1b0319821280612250575060016001607f1b0382135b156112035760405163a5353be560e01b815260040160405180910390fd5b60405163bb55fd2760e01b815260040160405180910390fd5b6000806122958460006128c8565b6122a08460006128c8565b6122aa9190612bff565b905060008113156122c6576122bf8186612bac565b94506122e5565b60008112156122e5576122d881612d74565b6122e29086612b51565b94505b50929392505050565b6040516336e2794960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526024810182905260009073__$09f36fe1c8069bb875c0cd1810483af6f9$__906336e279499060440161113a565b600060405163350b944160e11b815260040160405180910390fd5b60405163a9059cbb60e01b81526001600160a01b038481166004830152602482018690526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af11580156123e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240b9190612eb1565b90508061242b576040516312171d8360e31b815260040160405180910390fd5b5050505050565b600082600019048411830215820261244957600080fd5b50910281810615159190040190565b600080670de0b6b3a764000061246c610426565b6124769190612de8565b9050808311612486576000612490565b6124908184612b51565b91506111916124c7670de0b6b3a76400007f0000000000000000000000000000000000000000000000000000000000000000612de8565b83906121f3565b6000806000836124dd86611602565b6124e79190612bff565b905060008112156124ff576000809250925050612506565b9150600190505b9250929050565b600080821361252f5760405163e61b497560e01b815260040160405180910390fd5b506001600160801b03811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f198201906125b29084901c611602565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b6000680248ce36a70cb26b3e19821361274e57506000919050565b680755bf798b4a1bf1e58212612777576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b3988102909303926c240c330e9fb2d9cbaf0fd5aafb1984018402606090811d6d0277594991cfc85f6e2461837cd9018502811d6d1a521255e34f6a5061b25ef1c9c319018502811d6db1bbb201f443cf962f1a1d3db4a5018502811d6e02c72388d9f74f51a9331fed693f1419018502811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765087018702831d9081019087016d01d3967ed30fc4f89c02bab570811901810290921d6e0587f503bb6ea29d25fcb7401964500186026d360d7aeea093263ecc6e0ecb291760621b01818105955092935090919061213674029d9dc38563c32e5c2f6dc192ee70ef65f9978af3860260c38690031c611602565b60008183136128d75781611191565b5090919050565b6040518061012001604052806128f2612930565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000806000606084860312156129a657600080fd5b8335925060208401359150604084013567ffffffffffffffff8111156129cb57600080fd5b8401606081870312156129dd57600080fd5b809150509250925092565b600080604083850312156129fb57600080fd5b50508035926020909101359150565b6001600160a01b038116811461040b57600080fd5b600060208284031215612a3157600080fd5b813561119181612a0a565b801515811461040b57600080fd5b600060208284031215612a5c57600080fd5b813561119181612a3c565b6000808335601e19843603018112612a7e57600080fd5b83018035915067ffffffffffffffff821115612a9957600080fd5b60200191503681900382131561250657600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b868152856020820152846040820152831515606082015260a060808201526000612b0560a083018486612aae565b98975050505050505050565b634e487b7160e01b600052601260045260246000fd5b600082612b3657612b36612b11565b500690565b634e487b7160e01b600052601160045260246000fd5b81810381811115610e0857610e08612b3b565b88815287602082015286604082015285151560608201528460808201528360a082015260e060c08201526000612b9e60e083018486612aae565b9a9950505050505050505050565b80820180821115610e0857610e08612b3b565b6001600160701b038181168382160190808211156120c4576120c4612b3b565b6001600160801b038181168382160190808211156120c4576120c4612b3b565b81810360008312801583831316838312821617156120c4576120c4612b3b565b600060208284031215612c3157600080fd5b815161119181612a0a565b6001600160801b038281168282160390808211156120c4576120c4612b3b565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152506101608082015181840152505050565b60006102a082019050612cee828551612c5c565b602084015161018083015260408401516101a083015260608401516101c083015260808401516101e083015260a084015161020083015260c084015161022083015260e084015161024083015261010090930151610260820152610280015290565b60008060408385031215612d6357600080fd5b505080516020909101519092909150565b6000600160ff1b8201612d8957612d89612b3b565b5060000390565b6101808101610e088284612c5c565b60008060408385031215612db257600080fd5b825191506020830151612dc481612a3c565b809150509250929050565b600060208284031215612de157600080fd5b5051919050565b8082028115828204841417610e0857610e08612b3b565b600f81810b9083900b0160016001607f1b03811360016001607f1b031982121715610e0857610e08612b3b565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215612e5857600080fd5b8451935060208501519250604085015191506060850151612e7881612a3c565b939692955090935050565b600082612e9257612e92612b11565b600160ff1b821460001984141615612eac57612eac612b3b565b500590565b600060208284031215612ec357600080fd5b815161119181612a3c56fea264697066735822122017e100a2cce5902a013faa2ac11eb6fc961e128e2169c8869f4349aa8736692664736f6c63430008160033a2646970667358221220f427fbc0ec9494a5cd4f27606d1a318311cc6505fae7aad729f001b9f206e4cd64736f6c63430008160033"
    )

    def __init__(self, address: ChecksumAddress | None = None) -> None:
        # Initialize parent Contract class
        super().__init__(address=address)
        self.functions = RsETHLineaTarget4DeployerContractFunctions(rsethlineatarget4deployer_abi, self.w3, address)  # type: ignore

    functions: RsETHLineaTarget4DeployerContractFunctions

    class ConstructorArgs(NamedTuple):
        """Arguments to pass the contract's constructor function."""

        rsETHPool: str

    class LinkReferences(NamedTuple):
        """Link references required when deploying."""

        RsETHLineaConversions: RsETHLineaConversionsContract

        LPMath: LPMathContract

    link_references_placeholder_lookup: dict[str, str] = {
        "RsETHLineaConversions": "__$09f36fe1c8069bb875c0cd1810483af6f9$__",
        "LPMath": "__$2b4fa6f02a36eedfe41c65e8dd342257d3$__",
    }

    @classmethod
    def constructor(cls, rsETHPool: str, link_references: LinkReferences) -> ContractConstructor:  # type: ignore
        """Creates a transaction with the contract's constructor function.

        Parameters
        ----------

        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.

        """
        cls.bytecode = cls._raw_bytecode
        if cls.bytecode is not None:

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["RsETHLineaConversions"],
                link_references.RsETHLineaConversions.address[2:].lower(),
            )

            cls.bytecode = cls.bytecode.replace(
                cls.link_references_placeholder_lookup["LPMath"],
                link_references.LPMath.address[2:].lower(),
            )

            # bytecode needs to be in hex for web3
            cls.bytecode = HexBytes(cls.bytecode)

        return super().constructor(dataclass_to_tuple(rsETHPool))

    @classmethod
    def deploy(
        cls,
        w3: Web3,
        account: LocalAccount | ChecksumAddress,
        constructor_args: ConstructorArgs,
        link_references: LinkReferences,
    ) -> Self:
        """Deploys an instance of the contract.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        account : LocalAccount
            The account to use to deploy the contract.

        Returns
        -------
        Self
            A deployed instance of the contract.
        """
        deployer = cls.factory(w3=w3)
        constructor_fn = deployer.constructor(
            *constructor_args, link_references
        )

        # if an address is supplied, try to use a web3 default account
        if isinstance(account, str):
            tx_hash = constructor_fn.transact({"from": account})
            tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

            deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
            return deployed_contract

        # otherwise use the account provided.
        deployment_tx = constructor_fn.build_transaction()
        current_nonce = w3.eth.get_transaction_count(account.address, "pending")
        deployment_tx.update({"nonce": current_nonce})

        # Sign the transaction with local account private key
        signed_tx = account.sign_transaction(deployment_tx)

        # Send the signed transaction and wait for receipt
        tx_hash = w3.eth.send_raw_transaction(signed_tx.raw_transaction)
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)

        deployed_contract = deployer(address=tx_receipt.contractAddress)  # type: ignore
        return deployed_contract

    @classmethod
    def factory(
        cls, w3: Web3, class_name: str | None = None, **kwargs: Any
    ) -> Type[Self]:
        """Initializes the contract object.

        Parameters
        ----------
        w3 : Web3
            A web3 instance.
        class_name: str | None
            The instance class name.

        Returns
        -------
        Self
            An instance of the contract class.
        """
        contract = super().factory(w3, class_name, **kwargs)
        contract.functions = RsETHLineaTarget4DeployerContractFunctions(
            rsethlineatarget4deployer_abi, w3, None
        )

        return contract
