Metadata-Version: 2.1
Name: mem0rylol
Version: 0.1.6
Summary: A specialized memory layer for building long-term memory solutions for agentic AI apps.
Home-page: https://github.com/oracle-ai-companion/memorylayer
Author: anthoeknee
Author-email: pacyheb@protonmail.com
License: MIT
Project-URL: Bug Tracker, https://github.com/oracle-ai-companion/memorylayer/issues
Project-URL: Documentation, https://github.com/oracle-ai-companion/memorylayer#readme
Project-URL: Source Code, https://github.com/oracle-ai-companion/memorylayer
Keywords: memory ai langchain groq openai vector-database
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: langchain
Requires-Dist: langchain-groq
Requires-Dist: langchain-openai
Requires-Dist: pymilvus
Requires-Dist: neo4j
Requires-Dist: python-dotenv
Requires-Dist: pydantic
Requires-Dist: loguru
Requires-Dist: langchain-community
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'
Requires-Dist: pytest-asyncio ; extra == 'test'
Requires-Dist: pytest-cov ; extra == 'test'
Requires-Dist: mypy ; extra == 'test'

# mem0rylol

A specialized memory layer for building long-term memory solutions for agentic AI apps.

## Features

- Integration with LangChain, Groq, and OpenAI
- Vector database support with Milvus
- Graph database support with Neo4j
- Asynchronous memory extraction and processing

## Installation

```bash
pip install mem0rylol
```

## Quick Start

```python
from mem0rylol import MemoryService

# Initialize the MemoryService
memory_service = MemoryService()

# Use the memory service in your application
# Example: Store a memory
memory_text = "This is a sample memory."
stored_memory = memory_service.store_user_memory("user123", "session456", memory_text)
if stored_memory:
    print("Memory stored successfully.")
else:
    print("Failed to store memory.")
```

## Documentation

For full documentation, please visit our [GitHub repository](https://github.com/oracle-ai-companion/memorylayer).

## Contributing

We welcome contributions! Please see our [Contributing Guide](https://github.com/oracle-ai-companion/memorylayer/blob/main/CONTRIBUTING.md) for more details.

## License

This project is licensed under the MIT License - see the [LICENSE](https://github.com/oracle-ai-companion/memorylayer/blob/main/LICENSE) file for details.
