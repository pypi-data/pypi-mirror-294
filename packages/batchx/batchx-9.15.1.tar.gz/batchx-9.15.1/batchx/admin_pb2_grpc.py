# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import admin_pb2 as admin__pb2

GRPC_GENERATED_VERSION = '1.66.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in admin_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AdminServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateUser = channel.unary_unary(
                '/batchx.admin.AdminService/CreateUser',
                request_serializer=admin__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=admin__pb2.CreateUserResponse.FromString,
                _registered_method=True)
        self.RemoveUser = channel.unary_unary(
                '/batchx.admin.AdminService/RemoveUser',
                request_serializer=admin__pb2.RemoveUserRequest.SerializeToString,
                response_deserializer=admin__pb2.RemoveUserResponse.FromString,
                _registered_method=True)
        self.CreateOrg = channel.unary_unary(
                '/batchx.admin.AdminService/CreateOrg',
                request_serializer=admin__pb2.CreateOrgRequest.SerializeToString,
                response_deserializer=admin__pb2.CreateOrgResponse.FromString,
                _registered_method=True)
        self.CreateMembership = channel.unary_unary(
                '/batchx.admin.AdminService/CreateMembership',
                request_serializer=admin__pb2.CreateMembershipRequest.SerializeToString,
                response_deserializer=admin__pb2.CreateMembershipResponse.FromString,
                _registered_method=True)
        self.AddEnvironmentCredits = channel.unary_unary(
                '/batchx.admin.AdminService/AddEnvironmentCredits',
                request_serializer=admin__pb2.AddEnvironmentCreditsRequest.SerializeToString,
                response_deserializer=admin__pb2.AddEnvironmentCreditsResponse.FromString,
                _registered_method=True)
        self.SetGlobalProperty = channel.unary_unary(
                '/batchx.admin.AdminService/SetGlobalProperty',
                request_serializer=admin__pb2.SetGlobalPropertyRequest.SerializeToString,
                response_deserializer=admin__pb2.SetGlobalPropertyResponse.FromString,
                _registered_method=True)
        self.GetGlobalProperties = channel.unary_unary(
                '/batchx.admin.AdminService/GetGlobalProperties',
                request_serializer=admin__pb2.GetGlobalPropertiesRequest.SerializeToString,
                response_deserializer=admin__pb2.GetGlobalPropertiesResponse.FromString,
                _registered_method=True)
        self.GeneratePromoCode = channel.unary_unary(
                '/batchx.admin.AdminService/GeneratePromoCode',
                request_serializer=admin__pb2.GeneratePromoCodeRequest.SerializeToString,
                response_deserializer=admin__pb2.GeneratePromoCodeResponse.FromString,
                _registered_method=True)


class AdminServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrg(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMembership(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddEnvironmentCredits(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetGlobalProperty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGlobalProperties(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GeneratePromoCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=admin__pb2.CreateUserRequest.FromString,
                    response_serializer=admin__pb2.CreateUserResponse.SerializeToString,
            ),
            'RemoveUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveUser,
                    request_deserializer=admin__pb2.RemoveUserRequest.FromString,
                    response_serializer=admin__pb2.RemoveUserResponse.SerializeToString,
            ),
            'CreateOrg': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrg,
                    request_deserializer=admin__pb2.CreateOrgRequest.FromString,
                    response_serializer=admin__pb2.CreateOrgResponse.SerializeToString,
            ),
            'CreateMembership': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMembership,
                    request_deserializer=admin__pb2.CreateMembershipRequest.FromString,
                    response_serializer=admin__pb2.CreateMembershipResponse.SerializeToString,
            ),
            'AddEnvironmentCredits': grpc.unary_unary_rpc_method_handler(
                    servicer.AddEnvironmentCredits,
                    request_deserializer=admin__pb2.AddEnvironmentCreditsRequest.FromString,
                    response_serializer=admin__pb2.AddEnvironmentCreditsResponse.SerializeToString,
            ),
            'SetGlobalProperty': grpc.unary_unary_rpc_method_handler(
                    servicer.SetGlobalProperty,
                    request_deserializer=admin__pb2.SetGlobalPropertyRequest.FromString,
                    response_serializer=admin__pb2.SetGlobalPropertyResponse.SerializeToString,
            ),
            'GetGlobalProperties': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGlobalProperties,
                    request_deserializer=admin__pb2.GetGlobalPropertiesRequest.FromString,
                    response_serializer=admin__pb2.GetGlobalPropertiesResponse.SerializeToString,
            ),
            'GeneratePromoCode': grpc.unary_unary_rpc_method_handler(
                    servicer.GeneratePromoCode,
                    request_deserializer=admin__pb2.GeneratePromoCodeRequest.FromString,
                    response_serializer=admin__pb2.GeneratePromoCodeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'batchx.admin.AdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('batchx.admin.AdminService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AdminService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/batchx.admin.AdminService/CreateUser',
            admin__pb2.CreateUserRequest.SerializeToString,
            admin__pb2.CreateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/batchx.admin.AdminService/RemoveUser',
            admin__pb2.RemoveUserRequest.SerializeToString,
            admin__pb2.RemoveUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateOrg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/batchx.admin.AdminService/CreateOrg',
            admin__pb2.CreateOrgRequest.SerializeToString,
            admin__pb2.CreateOrgResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateMembership(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/batchx.admin.AdminService/CreateMembership',
            admin__pb2.CreateMembershipRequest.SerializeToString,
            admin__pb2.CreateMembershipResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddEnvironmentCredits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/batchx.admin.AdminService/AddEnvironmentCredits',
            admin__pb2.AddEnvironmentCreditsRequest.SerializeToString,
            admin__pb2.AddEnvironmentCreditsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetGlobalProperty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/batchx.admin.AdminService/SetGlobalProperty',
            admin__pb2.SetGlobalPropertyRequest.SerializeToString,
            admin__pb2.SetGlobalPropertyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGlobalProperties(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/batchx.admin.AdminService/GetGlobalProperties',
            admin__pb2.GetGlobalPropertiesRequest.SerializeToString,
            admin__pb2.GetGlobalPropertiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GeneratePromoCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/batchx.admin.AdminService/GeneratePromoCode',
            admin__pb2.GeneratePromoCodeRequest.SerializeToString,
            admin__pb2.GeneratePromoCodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
