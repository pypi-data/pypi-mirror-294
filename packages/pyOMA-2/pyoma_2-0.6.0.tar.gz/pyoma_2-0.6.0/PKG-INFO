Metadata-Version: 2.1
Name: pyOMA_2
Version: 0.6.0
Summary: Python module for conducting Operational Modal Analysis
Author-Email: Dag Pasca <dpa@treteknisk.no>, Angelo Aloisio <angelo.aloisio1@univaq.it>, Marco Martino Rosso <marco.rosso@polito.it>, Diego Federico Margoni <diegofederico.margoni@studenti.polito.it>
License: MIT
Project-URL: Homepage, https://github.com/dagghe/pyOMA2
Project-URL: Documentation, https://pyoma.readthedocs.io/en/latest/
Project-URL: Repository, https://github.com/dagghe/pyOMA2
Project-URL: Changelog, https://github.com/dagghe/pyOMA2/blob/main/CHANGELOG.md
Project-URL: Contributing, https://github.com/dagghe/pyOMA2/blob/main/CONTRIBUTING.md
Requires-Python: <3.13,>=3.8
Requires-Dist: numpy<1.25; python_version < "3.9"
Requires-Dist: numpy>=1.25; python_version >= "3.9"
Requires-Dist: pandas>=2.0.3
Requires-Dist: scipy>=1.9.3
Requires-Dist: pydantic>=2.5.1
Requires-Dist: tqdm>=4.66.1
Requires-Dist: matplotlib>=3.7.4
Description-Content-Type: text/markdown

# pyOMA2
![pyoma2_logo_v2_COMPACT](https://github.com/dagghe/pyOMA2/assets/64746269/aa19bc05-d452-4749-a404-b702e6fe685d)

[![python](https://img.shields.io/badge/Python-3.8-3776AB.svg?style=flat&logo=python&logoColor=white)](https://www.python.org)
[![python](https://img.shields.io/badge/Python-3.9-3776AB.svg?style=flat&logo=python&logoColor=white)](https://www.python.org)
[![python](https://img.shields.io/badge/Python-3.10-3776AB.svg?style=flat&logo=python&logoColor=white)](https://www.python.org)
[![python](https://img.shields.io/badge/Python-3.11-3776AB.svg?style=flat&logo=python&logoColor=white)](https://www.python.org)
[![python](https://img.shields.io/badge/Python-3.12-3776AB.svg?style=flat&logo=python&logoColor=white)](https://www.python.org)

[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/pre-commit/pre-commit)

[![Test Pyoma2](https://github.com/dagghe/pyOMA2/actions/workflows/main.yml/badge.svg?branch=main&event=push)](https://github.com/dagghe/pyOMA2/actions/workflows/main.yml)


_______________________

This is the new and updated version of pyOMA module, a Python module designed for conducting operational modal analysis.
With this update, we've transformed pyOMA from a basic collection of functions into a more sophisticated module that fully leverages the capabilities of Python classes.

The module now supports analysis of both single and multi-setup data measurements, which includes handling multiple acquisitions with a mix of reference and roving sensors. We've also introduced interactive plots, allowing users to select desired modes for extraction directly from the plots generated by the algorithms. Additionally, a new feature enables users to define the geometry of the structures being tested, facilitating the visualization of mode shapes after modal results are obtained. The underlying functions of these classes have been rigorously revised, resulting in significant enhancements and optimizations.

Please note that this is still an alpha release, and we are continuously refining the docstrings, documentation, and other aspects of the module. However, we have provided three working examples that demonstrate the module's capabilities: [Example1_SingleSetup.ipynb](docs/Example1_SingleSetup.ipynb) (for single setup), [Example2_MultiSetupPoSER.ipynb](docs/Example2_MultiSetupPoSER.ipynb) (for multi setups using the Post-Single Estimation Rescaling method), and [Example3_MultiSetupPreGER.ipynb](docs/Example3_MultiSetupPreGER.ipynb) (for multi setups using the Pre-Global Estimation Rescaling method).

## Documentation

You can check the documentation at the following link:

https://pyoma.readthedocs.io/en/latest/

## Quick start

Install the library

```shell
pip install pyOMA-2
```

You'll probably need to install **tk** for the GUI on your system, here some instructions:

Windows:

https://www.pythonguis.com/installation/install-tkinter-windows/


Linux:

https://www.pythonguis.com/installation/install-tkinter-linux/

Mac:

https://www.pythonguis.com/installation/install-tkinter-mac/

____

# Examples
To see how the module works please take a look at the jupyter notebook provided:

- [Example 1: single setup](Examples/Example1_SingleSetup.ipynb)
- [Example 2: multi setup Post-Single Estimation Rescaling](Examples/Example2_MultiSetupPoSER.ipynb)
- [Example 3: multi setup Pre-Global Estimation Rescaling](Examples/Example3_MultiSetupPreGER.ipynb)

____

# Schematic organisation of the module showing inheritance between classes.

![](docs/img/info.svg "")
