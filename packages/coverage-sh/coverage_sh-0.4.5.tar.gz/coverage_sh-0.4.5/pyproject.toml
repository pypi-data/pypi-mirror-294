[project]
name = "coverage-sh"
version = "0.4.5    "
description = "A  Coverage.py plugin to measure code coverage of shell scripts from python."
authors = [
    { name = "Kilian Lackhove", email = "kilian@lackhove.de" }
]
dependencies = [
    "coverage>=7.3.3",
    "python-magic>=0.4.27",
    "tree-sitter-languages>=1.8.0",
]
readme = "README.md"
requires-python = ">= 3.8"
license = { text = "MIT" }
keywords = ["coverage", "plugin", "shell", "bash", "sh"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]

[project.urls]
homepage = "https://github.com/lackhove/coverage-sh"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "ruff==0.3.2",
    "mypy>=1.9.0",
    "pytest>=7.4.3",
    "setuptools>=69.0.2",
    "types-tree-sitter-languages>=1.10.0.20240201",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["coverage_sh"]


[tool.ruff]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

exclude = ["tests/resources"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "E501", # Line too long
    "D", # missing docstring
    "ANN101", # Missing type annotation for `self` in method
    "ANN204", # Missing return type annotation for special method `__init__`
    "ANN002", # Missing type annotation for `*args`
    "ANN003", # Missing type annotation for `**kwargs`
    "S603", # subprocess-without-shell-equals-true
    "TD", # flake8-todos
    "FIX", #flake8-fixme
    "COM812", "ISC001", # ruff format says these should be disabled
    "D211", # no-blank-line-before-class -> incompatible with D203
    "D213", #multi-line-summary-second-line -> incompatible with D212
    "TRY003", # Avoid specifying long messages outside the exception class
    "EM102", # Exception must not use an f-string literal, assign to variable first
]

[tool.ruff.per-file-ignores]
"tests/**/*.py" = ["ANN", "D", "S101", "PLR2004", "N802", "PT015", "B011", "INP001", "FBT001", "T201"]
"tests/resources/**/*.py" = ["ALL"]

[tool.mypy]
strict = true

[tool.coverage.run]
branch = true
include = ["coverage_sh/**", "tests/**"]
omit = ["coverage_sh/__init__.py"]

[tool.coverage.report]

exclude_also = [
    "if TYPE_CHECKING:",
]
