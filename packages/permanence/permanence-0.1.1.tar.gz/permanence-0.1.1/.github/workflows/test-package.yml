name: Build and test package

on:
  push:
    branches: [ "master" ]
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
    env:
      UV_CACHE_DIR: /tmp/.uv-cache
      UV_SYSTEM_PYTHON: 1

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    # Ref: https://docs.astral.sh/uv/guides/integration/github/
    - name: Set up uv
      # Install latest uv version using the installer
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
    - name: Restore uv cache
      uses: actions/cache@v4
      with:
        path: /tmp/.uv-cache
        key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          uv-${{ runner.os }}
    - name: Install the project
      run: uv sync
    - name: Run tests
      run: uv run pytest tests
    - name: Build
      run: uv run pyproject-build
    - name: Upload package
      uses: actions/upload-artifact@v3
      with:
        name: dist-${{ github.sha }}
        path: dist/
    - name: Minimize uv cache
      run: uv cache prune --ci
