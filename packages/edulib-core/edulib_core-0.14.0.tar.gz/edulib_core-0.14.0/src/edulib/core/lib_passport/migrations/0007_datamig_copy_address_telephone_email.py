# Generated by Django 1.11.29 on 2021-02-11 12:35
"""Миграция данных для модели LibPassport."""
from django.db import (
    migrations,
)


def get_sql():
    """Функция для миграции данных в модель LibPassport."""
    sql_text = """
update library_passport
  set
    telephone = data.telephone,
    email = data.email,
    f_address_place = data.f_address_place,
    f_address_street = data.f_address_street,
    f_address_house = data.f_address_house,
    f_address_house_guid = data.f_address_house_guid,
    f_address_full = data.f_address_full,
    f_address_zipcode = data.f_address_zipcode,
    f_address_corps = data.f_address_corps
from
  (select library_passport.id,
    (case
        when is_telephone_match
        then school.telephone
        else library_passport.telephone
        end) as telephone,
    (case
        when is_email_match
        then school.email
        else library_passport.email
        end) as email,
    (case
        when is_address_match
        then school.f_address
        else library_passport.f_address_place
        end) as f_address_place,
    (case
        when library_passport.is_address_match
        then school.f_address_street
        else library_passport.f_address_street
        end) as f_address_street,
    (case
        when library_passport.is_address_match
        then school.f_address_house
        else library_passport.f_address_house
        end) as f_address_house,
    (case
        when library_passport.is_address_match
        then school.f_address_house_guid
        else library_passport.f_address_house_guid
        end) as f_address_house_guid,
    (case
        when library_passport.is_address_match
        then school.f_address_full
        else library_passport.f_address_full
        end) as f_address_full,
    (case
        when library_passport.is_address_match
        then school.f_zipcode
        else library_passport.f_address_zipcode
        end) as f_address_zipcode,
    (case
        when library_passport.is_address_match
        then school.f_address_corps
        else library_passport.f_address_corps
        end) as f_address_corps
    from library_passport inner join school on
    library_passport.school_id = school.id
    where is_telephone_match or is_email_match or is_address_match
    ) data
  where library_passport.id = data.id;
"""

    return sql_text


class Migration(migrations.Migration):
    """Миграция данных для модели LibPassport."""

    dependencies = [
        ('lib_passport', '0006_auto_20201221_1744'),
    ]

    operations = [
        # Миграция считается пройденной в ЭШ и не должна выполняться на чистой БД.
        #
        # migrations.RunSQL(
        #    get_sql(),
        #    migrations.RunSQL.noop
        # )
    ]
