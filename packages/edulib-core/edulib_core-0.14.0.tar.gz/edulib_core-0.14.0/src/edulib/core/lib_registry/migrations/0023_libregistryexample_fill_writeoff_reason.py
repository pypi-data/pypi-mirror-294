# Generated by Django 1.11.18 on 2019-08-29 11:37
from django.db import (
    migrations,
)


# Старые значения
OLD_OBSOLESCENCE = 0  # Устаревшая по содержанию
OLD_LOSS = 2  # Утеря читателями
OLD_SHORTAGE = 5  # недостача
OLD_SENILITY = 6  # Физический износ
OLD_OTHER = 8  # Иные причины списания
# Новые значения
OBSOLESCENCE = 1
LOSS = 2
SENILITY = 3
DEFECTIVENESS = 4
NONRELEVANT = 5


def change_writeoff_reasons(apps, schema_editor):
    """Приводит причины списания к НПА."""
    # Таблица замены старых значений на новые
    correspondence = [
        (OLD_OBSOLESCENCE, OBSOLESCENCE),
        (1, LOSS),
        (OLD_LOSS, LOSS),
        (3, LOSS),
        (4, LOSS),
        (OLD_SHORTAGE, LOSS),
        (OLD_SENILITY, SENILITY),
        (7, NONRELEVANT),
        (OLD_OTHER, NONRELEVANT),
        (9, NONRELEVANT),
        (10, SENILITY),
    ]
    LibRegistryExample = apps.get_model('lib_registry', 'LibRegistryExample')
    examples = LibRegistryExample.objects.filter(writeoff_reason__isnull=False)
    for old, new in correspondence:
        examples.filter(writeoff_reason=old).update(writeoff_reason_new=new)


def restore_writeoff_reasons(apps, schema_editor):
    """Восстанавливает старые значения причин списания."""
    restore_list = [
        (OBSOLESCENCE, OLD_OBSOLESCENCE),
        (LOSS, OLD_LOSS),
        (SENILITY, OLD_SENILITY),
        (DEFECTIVENESS, OLD_SENILITY),
        (NONRELEVANT, OLD_OTHER)
    ]
    LibRegistryExample = apps.get_model('lib_registry', 'LibRegistryExample')
    examples = LibRegistryExample.objects.filter(
        writeoff_reason_new__isnull=False)
    for new, old in restore_list:
        examples.filter(writeoff_reason_new=new).update(writeoff_reason=old)


class Migration(migrations.Migration):

    dependencies = [
        ('lib_registry', '0022_libregistryexample_writeoff_reason_new'),
    ]

    operations = [
        migrations.RunPython(
            change_writeoff_reasons,
            reverse_code=restore_writeoff_reasons
        ),
    ]
