# Generated by Django 1.11.18 on 2019-03-14 15:29
from django.db import (
    migrations,
)


def fill_authors_names(apps, schema_editor):
    ignore_list = ['и др.', 'под ред.', 'под редакцией']
    LibRegistryEntry = apps.get_model('lib_registry', 'LibRegistryEntry')
    LibraryAuthors = apps.get_model('lib_authors', 'LibraryAuthors')
    LibAuthorsRegEntries = apps.get_model(
        'lib_authors', 'LibAuthorsRegEntries')
    entries = LibRegistryEntry.objects.all().distinct().values(
        'id', 'authors',
    )
    for entry in entries:
        authors = entry['authors']
        # Удалим из строки с авторами элементы списка игнорирования
        for substr in ignore_list:
            authors = authors.replace(substr, '')
        # Во многих строках с авторами в перечислениях нет запятых.
        # Уберём запятые в списке авторов, чтобы привести к одному виду.
        authors = authors.replace(',', '')
        # В списке в основном идут последовательно фамилия и инициалы
        # для каждого автора, поэтому будем делать разбиение исходя
        # из такой структуры. Там, где сначала написаны инициалы,
        # придётся потом подкорректировать вручную
        authors_list = authors.split('. ')
        for author in authors_list:
            author = author.strip()
            if author:
                # Если автор был последним в списке, точка в конце у него
                # осталась, а остальным вернём точку
                if author[-1] != '.':
                    author += '.'
                present_author, _ = (
                    LibraryAuthors.objects.get_or_create(name=author)
                )
                LibAuthorsRegEntries.objects.create(
                    reg_entry_id=entry['id'],
                    author=present_author
                )


def clear_authors_names(apps, schema_editor):
    LibraryAuthors = apps.get_model('lib_authors', 'LibraryAuthors')
    # Удалим все записи из справочника. Заодно очистим и LibAuthorsRegEntries
    LibraryAuthors.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('lib_authors', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(fill_authors_names, clear_authors_names),
    ]
