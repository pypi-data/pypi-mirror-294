# Generated by Django 1.11.18 on 2019-03-01 10:56
from django.db import (
    migrations,
    models,
)
from django.db.models import (
    OuterRef,
    Subquery,
)


def make_lib_reg_unique(apps, schema_editor):
    """Приводит названия экземпляров библиотеки к уникальным значениям."""
    LibRegistryEntry = apps.get_model('lib_registry', 'LibRegistryEntry')
    double_sqs = Subquery(
        LibRegistryEntry.objects.filter(
            school_id=OuterRef('school_id'),
            type_id=OuterRef('type_id'),
            book_title__iexact=OuterRef('book_title'),
            authors__iexact=OuterRef('authors'),
            id__lt=OuterRef('id'),
        ).values('id')[:1]
    )

    double_entries = LibRegistryEntry.objects.annotate(
        double=double_sqs
    ).filter(
        double__gt=0,
    ).order_by('id').values('id', 'book_title')

    titles_dict = {}
    for entry in double_entries:
        ind = titles_dict.get(entry['book_title'].upper(), 1)
        new_title = '%s %d' % (entry['book_title'], ind)
        titles_dict[entry['book_title'].upper()] = ind + 1
        LibRegistryEntry.objects.filter(
            id=entry['id']
        ).update(
            book_title=new_title
        )


class Migration(migrations.Migration):

    dependencies = [
        ('lib_registry', '0012_libregistryentry_study_levels'),
    ]

    operations = [
        migrations.RunPython(make_lib_reg_unique, migrations.RunPython.noop),
    ]
