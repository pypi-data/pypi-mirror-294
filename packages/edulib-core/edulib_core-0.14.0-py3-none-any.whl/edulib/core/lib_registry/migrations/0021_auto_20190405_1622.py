# Generated by Django 1.11.20 on 2019-04-05 16:22
from django.db import (
    migrations,
)


def fill_disposal(apps, schema_editor):
    """Заполняет выбытия в книге суммарного учёта."""
    LibRegistryExample = apps.get_model('lib_registry', 'LibRegistryExample')
    LibSummaryBookDisposal = apps.get_model(
        'lib_registry', 'LibSummaryBookDisposal'
    )
    School = apps.get_model('school', 'School')
    examples = LibRegistryExample.objects.filter(
        writeoff_date__isnull=False,
    ).values_list(
        'writeoff_date',
        'writeoff_act_number',
        'lib_reg_entry__school_id',
    ).order_by('lib_reg_entry__school_id', 'writeoff_date').distinct()

    for writeoff_date, writeoff_act_number, school_id in examples:
        # В LibRegistryEntry school_id определено как IntegerField,
        # поэтому проверим, существует ли учреждение:
        schools = School.objects.filter(id=school_id).values_list(
            'id', flat=True
        )
        if schools.exists():
            # Соберём в строку источники поступления:
            disposal_source = ', '.join(
                LibRegistryExample.objects.filter(
                    writeoff_date=writeoff_date,
                    writeoff_act_number=writeoff_act_number,
                    lib_reg_entry__school_id=school_id,
                    lib_reg_entry__source__isnull=False,
                ).order_by(
                    'lib_reg_entry__source__name'
                ).values_list(
                    'lib_reg_entry__source__name', flat=True
                ).distinct()
            )
            # Определим запись КСУ:
            LibSummaryBookDisposal.objects.create(
                record_date=writeoff_date,
                school_id=schools[0],
                writeoff_act_number=writeoff_act_number,
                disposal_source=disposal_source,
            )


def clear_disposal(apps, schema_editor):
    """Удаляет выбытия из книги суммарного учёта."""
    apps.get_model(
        'lib_registry', 'LibSummaryBookDisposalCatalog'
    ).objects.all().delete()
    apps.get_model(
        'lib_registry', 'LibSummaryBookDisposalTypes'
    ).objects.all().delete()
    apps.get_model(
        'lib_registry', 'LibSummaryBookDisposal'
    ).objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('lib_registry', '0020_auto_20190405_1621'),
    ]

    operations = [
        # Миграция считается пройденной в ЭШ и не должна выполняться на чистой БД.
        #
        # migrations.RunPython(fill_disposal, clear_disposal),
    ]
